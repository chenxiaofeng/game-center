package com.mas.rave.main.vo;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

public class AppAlbumResExample {
	protected Map<String, Object> mapOrderByClause;

	/**
	 * This field was generated by MyBatis Generator. This field corresponds to
	 * the database table t_menu
	 * 
	 * @mbggenerated Fri Dec 23 08:44:42 CST 2011
	 */
	protected String orderByClause;

	/**
	 * This field was generated by MyBatis Generator. This field corresponds to
	 * the database table t_menu
	 * 
	 * @mbggenerated Fri Dec 23 08:44:42 CST 2011
	 */
	protected boolean distinct;

	/**
	 * This field was generated by MyBatis Generator. This field corresponds to
	 * the database table t_menu
	 * 
	 * @mbggenerated Fri Dec 23 08:44:42 CST 2011
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table t_menu
	 * 
	 * @mbggenerated Fri Dec 23 08:44:42 CST 2011
	 */
	public AppAlbumResExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table t_menu
	 * 
	 * @mbggenerated Fri Dec 23 08:44:42 CST 2011
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table t_menu
	 * 
	 * @mbggenerated Fri Dec 23 08:44:42 CST 2011
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	public Map<String, Object> getMapOrderByClause() {
		return mapOrderByClause;
	}

	public void setMapOrderByClause(Map<String, Object> mapOrderByClause) {
		this.mapOrderByClause = mapOrderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table t_menu
	 * 
	 * @mbggenerated Fri Dec 23 08:44:42 CST 2011
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table t_menu
	 * 
	 * @mbggenerated Fri Dec 23 08:44:42 CST 2011
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table t_menu
	 * 
	 * @mbggenerated Fri Dec 23 08:44:42 CST 2011
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table t_menu
	 * 
	 * @mbggenerated Fri Dec 23 08:44:42 CST 2011
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table t_menu
	 * 
	 * @mbggenerated Fri Dec 23 08:44:42 CST 2011
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table t_menu
	 * 
	 * @mbggenerated Fri Dec 23 08:44:42 CST 2011
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table t_menu
	 * 
	 * @mbggenerated Fri Dec 23 08:44:42 CST 2011
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds
	 * to the database table t_menu
	 * 
	 * @mbggenerated Fri Dec 23 08:44:42 CST 2011
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterion(String condition, Object value1, String property, Object value2,int flag) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("and values for " + property + condition + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, property, value2,flag));
		}

		public Criteria columnId(Integer value) {
			addCriterion("columnId =", value, "columnId");
			return (Criteria) this;
		}

		public Criteria andId(Integer value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andAppId(Integer value) {
			addCriterion("appId =", value, "appId");
			return (Criteria) this;
		}

		public Criteria andApkId(Integer value) {
			addCriterion("apkId =", value, "apkId");
			return (Criteria) this;
		}

		public Criteria andScourceEqual(Integer value) {
			addCriterion("source =", value, "source");
			return (Criteria) this;
		}

		public Criteria andRaveIdEqual(Integer value,int flag) {
//			addCriterion("raveId =", value, "raveId");
			if(flag==0){
				addCriterion("raveId =", value, "raveId");
			}else if(flag==1){
				addCriterion("raveId =", value , "raveId =", 1,2);
			}
			
			return (Criteria) this;
		}

		public Criteria andCollectionIdEqual(Integer value) {
			addCriterion("collectionId =", value, "collectionId");
			return (Criteria) this;
		}

		// public Criteria andRaveIdEqual1(Integer value) {
		// if(value>1){
		// List<Integer> list = new ArrayList<Integer>();
		// list.add(value);
		// list.add(1);
		// addCriterion("raveId in", list, "raveId");
		// }else{
		// addCriterion("raveId =", value, "raveId");
		// }
		// return (Criteria) this;
		// }
		public Criteria andNameLike(String value, Integer value1) {
			addCriterion("appName like", "%" + value + "%", "columnId =", value1,1);
			return (Criteria) this;
		}

		public Criteria andNameLike1(String value) {
			addCriterion("appName like", "%" + value + "%", "appName");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to
	 * the database table t_menu
	 * 
	 * @mbggenerated do_not_delete_during_merge Fri Dec 23 08:44:42 CST 2011
	 */
	public static class Criteria extends GeneratedCriteria {

		protected Criteria() {
			super();
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to
	 * the database table t_menu
	 * 
	 * @mbggenerated Fri Dec 23 08:44:42 CST 2011
	 */
	public static class Criterion {
		private String condition;

		private String secondCondition;

		private Object value;

		private Object secondValue;

		private boolean noValue;

		private boolean singleValue;

		private boolean betweenValue;

		private boolean andValue;

		private boolean orValue;

		private boolean listValue;

		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public String getSecondCondition() {
			return secondCondition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isAndValue() {
			return andValue;
		}
		
		public boolean isOrValue() {
			return orValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String secondCondition, String typeHandler, int flag) {
			super();
			this.condition = condition;
			this.secondCondition = secondCondition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			if (flag == 1) {
				this.andValue = true;
			} else if (flag == 2) {
				this.orValue = true;
			}

		}

		protected Criterion(String condition, Object value, String secondCondition, Object secondValue, int flag) {
			this(condition, value, secondValue, secondCondition, null, flag);
		}

	}
}