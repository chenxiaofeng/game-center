<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mas.market.mapper.TClientFeedbackZappMapper" >
  <resultMap id="BaseResultMap" type="com.mas.market.pojo.TClientFeedbackZapp" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="raveId" property="raveId" jdbcType="INTEGER" />
    <result column="question" property="question" jdbcType="VARCHAR" />
    <result column="replyContent" property="replyContent" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="BIT" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <trim prefix="where" prefixOverrides="and|or" >
      <if test="condition.raveId != null" >
         and raveId = #{condition.raveId}
      </if>
      <if test="condition.question != null" >
         and question = #{condition.question}
      </if>
      <if test="condition.replyContent != null" >
         and replyContent = #{condition.replyContent}
      </if>
      <if test="condition.state != null" >
         and state = #{condition.state}
      </if>
      <if test="condition.createTime != null" >
         and createTime = #{condition.createTime}
      </if>
    </trim>
  </sql>
  <sql id="Base_Column_List" >
    id, raveId, question, replyContent, state, createTime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.mas.market.pojo.Criteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_client_feedback_zapp
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="common.Mysql_Pagination_Limit" />
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_client_feedback_zapp
    where id = #{id}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_client_feedback_zapp
    where id = #{id}
  </delete>
  <delete id="deleteByExample" parameterType="com.mas.market.pojo.Criteria" >
    delete from t_client_feedback_zapp
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mas.market.pojo.TClientFeedbackZapp" >
    insert into t_client_feedback_zapp (id, raveId, question, replyContent, state, createTime)
    values (#{id}, #{raveId}, #{question}, #{replyContent}, #{state}, #{createTime})
  </insert>
  <insert id="insertSelective" parameterType="com.mas.market.pojo.TClientFeedbackZapp" >
    insert into t_client_feedback_zapp
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="raveId != null" >
        raveId,
      </if>
      <if test="question != null" >
        question,
      </if>
      <if test="replyContent != null" >
        replyContent,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id},
      </if>
      <if test="raveId != null" >
        #{raveId},
      </if>
      <if test="question != null" >
        #{question},
      </if>
      <if test="replyContent != null" >
        #{replyContent},
      </if>
      <if test="state != null" >
        #{state},
      </if>
      <if test="createTime != null" >
        #{createTime},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mas.market.pojo.Criteria" resultType="java.lang.Integer" >
    select count(*) from t_client_feedback_zapp
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_client_feedback_zapp
    <set >
      <if test="record.id != null" >
        id = #{record.id},
      </if>
      <if test="record.raveId != null" >
        raveId = #{record.raveId},
      </if>
      <if test="record.question != null" >
        question = #{record.question},
      </if>
      <if test="record.replyContent != null" >
        replyContent = #{record.replyContent},
      </if>
      <if test="record.state != null" >
        state = #{record.state},
      </if>
      <if test="record.createTime != null" >
        createTime = #{record.createTime},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_client_feedback_zapp
    set id = #{record.id},
      raveId = #{record.raveId},
      question = #{record.question},
      replyContent = #{record.replyContent},
      state = #{record.state},
      createTime = #{record.createTime}
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mas.market.pojo.TClientFeedbackZapp" >
    update t_client_feedback_zapp
    <set >
      <if test="raveId != null" >
        raveId = #{raveId},
      </if>
      <if test="question != null" >
        question = #{question},
      </if>
      <if test="replyContent != null" >
        replyContent = #{replyContent},
      </if>
      <if test="state != null" >
        state = #{state},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime},
      </if>
    </set>
    where id = #{id}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mas.market.pojo.TClientFeedbackZapp" >
    update t_client_feedback_zapp
    set raveId = #{raveId},
      question = #{question},
      replyContent = #{replyContent},
      state = #{state},
      createTime = #{createTime}
    where id = #{id}
  </update>
</mapper>