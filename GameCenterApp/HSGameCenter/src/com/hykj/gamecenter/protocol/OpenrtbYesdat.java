// Generated by the protocol buffer compiler.  DO NOT EDIT!

package com.hykj.gamecenter.protocol;

@SuppressWarnings("hiding")
public interface OpenrtbYesdat {

  // extend .openrtb.BidRequest.Imp {
  //   optional .com.hykj.gamecenter.protocol.ImpExt y_imp_ext = 102;
  public static final com.google.protobuf.nano.Extension<
      OpenRtb.BidRequest.Imp,
      ImpExt> yImpExt =
          com.google.protobuf.nano.Extension.createMessageTyped(
              com.google.protobuf.nano.Extension.TYPE_MESSAGE,
              ImpExt.class,
              818);

  // extend .openrtb.BidRequest.Device {
  //   optional .com.hykj.gamecenter.protocol.DeviceExt y_device_ext = 102;
  public static final com.google.protobuf.nano.Extension<
      OpenRtb.BidRequest.Device,
      DeviceExt> yDeviceExt =
          com.google.protobuf.nano.Extension.createMessageTyped(
              com.google.protobuf.nano.Extension.TYPE_MESSAGE,
              DeviceExt.class,
              818);

  // extend .openrtb.BidResponse.SeatBid.Bid {
  //   optional .com.hykj.gamecenter.protocol.BidExt y_bid_ext = 102;
  public static final com.google.protobuf.nano.Extension<
      OpenRtb.BidResponse.SeatBid.Bid,
      BidExt> yBidExt =
          com.google.protobuf.nano.Extension.createMessageTyped(
              com.google.protobuf.nano.Extension.TYPE_MESSAGE,
              BidExt.class,
              818);

  public static final class ImpExt extends
      com.google.protobuf.nano.ExtendableMessageNano<ImpExt> {

    private static volatile ImpExt[] _emptyArray;
    public static ImpExt[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new ImpExt[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional string ext_tagid = 1;
    public String extTagid;

    // optional int32 display_type = 2;
    public int displayType;

    public ImpExt() {
      clear();
    }

    public ImpExt clear() {
      extTagid = "";
      displayType = 0;
      unknownFieldData = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.extTagid.equals("")) {
        output.writeString(1, this.extTagid);
      }
      if (this.displayType != 0) {
        output.writeInt32(2, this.displayType);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.extTagid.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.extTagid);
      }
      if (this.displayType != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(2, this.displayType);
      }
      return size;
    }

    @Override
    public ImpExt mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!storeUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.extTagid = input.readString();
            break;
          }
          case 16: {
            this.displayType = input.readInt32();
            break;
          }
        }
      }
    }

    public static ImpExt parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new ImpExt(), data);
    }

    public static ImpExt parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new ImpExt().mergeFrom(input);
    }
  }

  public static final class DeviceExt extends
      com.google.protobuf.nano.ExtendableMessageNano<DeviceExt> {

    private static volatile DeviceExt[] _emptyArray;
    public static DeviceExt[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new DeviceExt[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional string imei = 1;
    public String imei;

    // optional string mac = 2;
    public String mac;

    public DeviceExt() {
      clear();
    }

    public DeviceExt clear() {
      imei = "";
      mac = "";
      unknownFieldData = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.imei.equals("")) {
        output.writeString(1, this.imei);
      }
      if (!this.mac.equals("")) {
        output.writeString(2, this.mac);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.imei.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.imei);
      }
      if (!this.mac.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.mac);
      }
      return size;
    }

    @Override
    public DeviceExt mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!storeUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.imei = input.readString();
            break;
          }
          case 18: {
            this.mac = input.readString();
            break;
          }
        }
      }
    }

    public static DeviceExt parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new DeviceExt(), data);
    }

    public static DeviceExt parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new DeviceExt().mergeFrom(input);
    }
  }

  public static final class BidExt extends
      com.google.protobuf.nano.ExtendableMessageNano<BidExt> {

    public static final class Creative extends
        com.google.protobuf.nano.ExtendableMessageNano<Creative> {

      private static volatile Creative[] _emptyArray;
      public static Creative[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new Creative[0];
            }
          }
        }
        return _emptyArray;
      }

      // optional string asset_url = 1;
      public String assetUrl;

      // optional string headline = 2;
      public String headline;

      // optional string description = 3;
      public String description;

      // optional string description_extension = 4;
      public String descriptionExtension;

      // optional int32 w = 5;
      public int w;

      // optional int32 h = 6;
      public int h;

      // optional string imp_feedback_url = 20;
      public String impFeedbackUrl;

      // repeated string thirdparty_imp_feedback_url = 21;
      public String[] thirdpartyImpFeedbackUrl;

      // optional string click_feedback_url = 22;
      public String clickFeedbackUrl;

      // repeated string thirdparty_click_through_url = 23;
      public String[] thirdpartyClickThroughUrl;

      // optional string bundle = 24;
      public String bundle;

      // optional string download_complete_url = 25;
      public String downloadCompleteUrl;

      // optional string install_complete_url = 26;
      public String installCompleteUrl;

      public Creative() {
        clear();
      }

      public Creative clear() {
        assetUrl = "";
        headline = "";
        description = "";
        descriptionExtension = "";
        w = 0;
        h = 0;
        impFeedbackUrl = "";
        thirdpartyImpFeedbackUrl = com.google.protobuf.nano.WireFormatNano.EMPTY_STRING_ARRAY;
        clickFeedbackUrl = "";
        thirdpartyClickThroughUrl = com.google.protobuf.nano.WireFormatNano.EMPTY_STRING_ARRAY;
        bundle = "";
        downloadCompleteUrl = "";
        installCompleteUrl = "";
        unknownFieldData = null;
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        if (!this.assetUrl.equals("")) {
          output.writeString(1, this.assetUrl);
        }
        if (!this.headline.equals("")) {
          output.writeString(2, this.headline);
        }
        if (!this.description.equals("")) {
          output.writeString(3, this.description);
        }
        if (!this.descriptionExtension.equals("")) {
          output.writeString(4, this.descriptionExtension);
        }
        if (this.w != 0) {
          output.writeInt32(5, this.w);
        }
        if (this.h != 0) {
          output.writeInt32(6, this.h);
        }
        if (!this.impFeedbackUrl.equals("")) {
          output.writeString(20, this.impFeedbackUrl);
        }
        if (this.thirdpartyImpFeedbackUrl != null && this.thirdpartyImpFeedbackUrl.length > 0) {
          for (int i = 0; i < this.thirdpartyImpFeedbackUrl.length; i++) {
            String element = this.thirdpartyImpFeedbackUrl[i];
            if (element != null) {
              output.writeString(21, element);
            }
          }
        }
        if (!this.clickFeedbackUrl.equals("")) {
          output.writeString(22, this.clickFeedbackUrl);
        }
        if (this.thirdpartyClickThroughUrl != null && this.thirdpartyClickThroughUrl.length > 0) {
          for (int i = 0; i < this.thirdpartyClickThroughUrl.length; i++) {
            String element = this.thirdpartyClickThroughUrl[i];
            if (element != null) {
              output.writeString(23, element);
            }
          }
        }
        if (!this.bundle.equals("")) {
          output.writeString(24, this.bundle);
        }
        if (!this.downloadCompleteUrl.equals("")) {
          output.writeString(25, this.downloadCompleteUrl);
        }
        if (!this.installCompleteUrl.equals("")) {
          output.writeString(26, this.installCompleteUrl);
        }
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        if (!this.assetUrl.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(1, this.assetUrl);
        }
        if (!this.headline.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(2, this.headline);
        }
        if (!this.description.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(3, this.description);
        }
        if (!this.descriptionExtension.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(4, this.descriptionExtension);
        }
        if (this.w != 0) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeInt32Size(5, this.w);
        }
        if (this.h != 0) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeInt32Size(6, this.h);
        }
        if (!this.impFeedbackUrl.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(20, this.impFeedbackUrl);
        }
        if (this.thirdpartyImpFeedbackUrl != null && this.thirdpartyImpFeedbackUrl.length > 0) {
          int dataCount = 0;
          int dataSize = 0;
          for (int i = 0; i < this.thirdpartyImpFeedbackUrl.length; i++) {
            String element = this.thirdpartyImpFeedbackUrl[i];
            if (element != null) {
              dataCount++;
              dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                  .computeStringSizeNoTag(element);
            }
          }
          size += dataSize;
          size += 2 * dataCount;
        }
        if (!this.clickFeedbackUrl.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(22, this.clickFeedbackUrl);
        }
        if (this.thirdpartyClickThroughUrl != null && this.thirdpartyClickThroughUrl.length > 0) {
          int dataCount = 0;
          int dataSize = 0;
          for (int i = 0; i < this.thirdpartyClickThroughUrl.length; i++) {
            String element = this.thirdpartyClickThroughUrl[i];
            if (element != null) {
              dataCount++;
              dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                  .computeStringSizeNoTag(element);
            }
          }
          size += dataSize;
          size += 2 * dataCount;
        }
        if (!this.bundle.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(24, this.bundle);
        }
        if (!this.downloadCompleteUrl.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(25, this.downloadCompleteUrl);
        }
        if (!this.installCompleteUrl.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(26, this.installCompleteUrl);
        }
        return size;
      }

      @Override
      public Creative mergeFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!storeUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              this.assetUrl = input.readString();
              break;
            }
            case 18: {
              this.headline = input.readString();
              break;
            }
            case 26: {
              this.description = input.readString();
              break;
            }
            case 34: {
              this.descriptionExtension = input.readString();
              break;
            }
            case 40: {
              this.w = input.readInt32();
              break;
            }
            case 48: {
              this.h = input.readInt32();
              break;
            }
            case 162: {
              this.impFeedbackUrl = input.readString();
              break;
            }
            case 170: {
              int arrayLength = com.google.protobuf.nano.WireFormatNano
                  .getRepeatedFieldArrayLength(input, 170);
              int i = this.thirdpartyImpFeedbackUrl == null ? 0 : this.thirdpartyImpFeedbackUrl.length;
              String[] newArray = new String[i + arrayLength];
              if (i != 0) {
                System.arraycopy(this.thirdpartyImpFeedbackUrl, 0, newArray, 0, i);
              }
              for (; i < newArray.length - 1; i++) {
                newArray[i] = input.readString();
                input.readTag();
              }
              // Last one without readTag.
              newArray[i] = input.readString();
              this.thirdpartyImpFeedbackUrl = newArray;
              break;
            }
            case 178: {
              this.clickFeedbackUrl = input.readString();
              break;
            }
            case 186: {
              int arrayLength = com.google.protobuf.nano.WireFormatNano
                  .getRepeatedFieldArrayLength(input, 186);
              int i = this.thirdpartyClickThroughUrl == null ? 0 : this.thirdpartyClickThroughUrl.length;
              String[] newArray = new String[i + arrayLength];
              if (i != 0) {
                System.arraycopy(this.thirdpartyClickThroughUrl, 0, newArray, 0, i);
              }
              for (; i < newArray.length - 1; i++) {
                newArray[i] = input.readString();
                input.readTag();
              }
              // Last one without readTag.
              newArray[i] = input.readString();
              this.thirdpartyClickThroughUrl = newArray;
              break;
            }
            case 194: {
              this.bundle = input.readString();
              break;
            }
            case 202: {
              this.downloadCompleteUrl = input.readString();
              break;
            }
            case 210: {
              this.installCompleteUrl = input.readString();
              break;
            }
          }
        }
      }

      public static Creative parseFrom(byte[] data)
          throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
        return com.google.protobuf.nano.MessageNano.mergeFrom(new Creative(), data);
      }

      public static Creative parseFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new Creative().mergeFrom(input);
      }
    }

    private static volatile BidExt[] _emptyArray;
    public static BidExt[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new BidExt[0];
          }
        }
      }
      return _emptyArray;
    }

    // repeated .com.hykj.gamecenter.protocol.BidExt.Creative creative = 1;
    public Creative[] creative;

    public BidExt() {
      clear();
    }

    public BidExt clear() {
      creative = Creative.emptyArray();
      unknownFieldData = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.creative != null && this.creative.length > 0) {
        for (int i = 0; i < this.creative.length; i++) {
          Creative element = this.creative[i];
          if (element != null) {
            output.writeMessage(1, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.creative != null && this.creative.length > 0) {
        for (int i = 0; i < this.creative.length; i++) {
          Creative element = this.creative[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(1, element);
          }
        }
      }
      return size;
    }

    @Override
    public BidExt mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!storeUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 10);
            int i = this.creative == null ? 0 : this.creative.length;
            Creative[] newArray =
                new Creative[i + arrayLength];
            if (i != 0) {
              System.arraycopy(this.creative, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new Creative();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new Creative();
            input.readMessage(newArray[i]);
            this.creative = newArray;
            break;
          }
        }
      }
    }

    public static BidExt parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new BidExt(), data);
    }

    public static BidExt parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new BidExt().mergeFrom(input);
    }
  }
}
