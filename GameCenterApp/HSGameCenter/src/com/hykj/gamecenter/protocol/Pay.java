// Generated by the protocol buffer compiler.  DO NOT EDIT!
package com.hykj.gamecenter.protocol;

@SuppressWarnings("hiding")
public interface Pay {

  public static final class LimitInfo extends
      com.google.protobuf.nano.MessageNano {

    private static volatile LimitInfo[] _emptyArray;
    public static LimitInfo[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new LimitInfo[0];
          }
        }
      }
      return _emptyArray;
    }

    // required string showValue = 1;
    public java.lang.String showValue;

    // required int32 price = 2;
    public int price;

    // required int32 sort = 3;
    public int sort;

    public LimitInfo() {
      clear();
    }

    public LimitInfo clear() {
      showValue = "";
      price = 0;
      sort = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeString(1, this.showValue);
      output.writeInt32(2, this.price);
      output.writeInt32(3, this.sort);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(1, this.showValue);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(2, this.price);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(3, this.sort);
      return size;
    }

    @Override
    public LimitInfo mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.showValue = input.readString();
            break;
          }
          case 16: {
            this.price = input.readInt32();
            break;
          }
          case 24: {
            this.sort = input.readInt32();
            break;
          }
        }
      }
    }

    public static LimitInfo parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new LimitInfo(), data);
    }

    public static LimitInfo parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new LimitInfo().mergeFrom(input);
    }
  }

  public static final class RechargeInfo extends
      com.google.protobuf.nano.MessageNano {

    private static volatile RechargeInfo[] _emptyArray;
    public static RechargeInfo[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new RechargeInfo[0];
          }
        }
      }
      return _emptyArray;
    }

    // required int32 rcId = 1;
    public int rcId;

    // required int32 parValue = 2;
    public int parValue;

    // required int32 salePrice = 3;
    public int salePrice;

    // required int32 status = 4;
    public int status;

    public RechargeInfo() {
      clear();
    }

    public RechargeInfo clear() {
      rcId = 0;
      parValue = 0;
      salePrice = 0;
      status = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeInt32(1, this.rcId);
      output.writeInt32(2, this.parValue);
      output.writeInt32(3, this.salePrice);
      output.writeInt32(4, this.status);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.rcId);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(2, this.parValue);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(3, this.salePrice);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(4, this.status);
      return size;
    }

    @Override
    public RechargeInfo mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.rcId = input.readInt32();
            break;
          }
          case 16: {
            this.parValue = input.readInt32();
            break;
          }
          case 24: {
            this.salePrice = input.readInt32();
            break;
          }
          case 32: {
            this.status = input.readInt32();
            break;
          }
        }
      }
    }

    public static RechargeInfo parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new RechargeInfo(), data);
    }

    public static RechargeInfo parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new RechargeInfo().mergeFrom(input);
    }
  }

  public static final class PayOrder extends
      com.google.protobuf.nano.MessageNano {

    private static volatile PayOrder[] _emptyArray;
    public static PayOrder[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new PayOrder[0];
          }
        }
      }
      return _emptyArray;
    }

    // required string orderNo = 1;
    public java.lang.String orderNo;

    // required string openId = 2;
    public java.lang.String openId;

    // required int32 parValue = 3;
    public int parValue;

    // required int32 salePrice = 4;
    public int salePrice;

    // required string mobile = 5;
    public java.lang.String mobile;

    // required int32 operation = 6;
    public int operation;

    // optional string params = 7;
    public java.lang.String params;

    // required int32 payType = 8;
    public int payType;

    // optional string TransactionNo = 9;
    public java.lang.String transactionNo;

    // required string createDate = 10;
    public java.lang.String createDate;

    // required string finishTime = 11;
    public java.lang.String finishTime;

    // required int32 status = 12;
    public int status;

    public PayOrder() {
      clear();
    }

    public PayOrder clear() {
      orderNo = "";
      openId = "";
      parValue = 0;
      salePrice = 0;
      mobile = "";
      operation = 0;
      params = "";
      payType = 0;
      transactionNo = "";
      createDate = "";
      finishTime = "";
      status = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeString(1, this.orderNo);
      output.writeString(2, this.openId);
      output.writeInt32(3, this.parValue);
      output.writeInt32(4, this.salePrice);
      output.writeString(5, this.mobile);
      output.writeInt32(6, this.operation);
      if (!this.params.equals("")) {
        output.writeString(7, this.params);
      }
      output.writeInt32(8, this.payType);
      if (!this.transactionNo.equals("")) {
        output.writeString(9, this.transactionNo);
      }
      output.writeString(10, this.createDate);
      output.writeString(11, this.finishTime);
      output.writeInt32(12, this.status);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(1, this.orderNo);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(2, this.openId);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(3, this.parValue);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(4, this.salePrice);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(5, this.mobile);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(6, this.operation);
      if (!this.params.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(7, this.params);
      }
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(8, this.payType);
      if (!this.transactionNo.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(9, this.transactionNo);
      }
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(10, this.createDate);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(11, this.finishTime);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(12, this.status);
      return size;
    }

    @Override
    public PayOrder mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.orderNo = input.readString();
            break;
          }
          case 18: {
            this.openId = input.readString();
            break;
          }
          case 24: {
            this.parValue = input.readInt32();
            break;
          }
          case 32: {
            this.salePrice = input.readInt32();
            break;
          }
          case 42: {
            this.mobile = input.readString();
            break;
          }
          case 48: {
            this.operation = input.readInt32();
            break;
          }
          case 58: {
            this.params = input.readString();
            break;
          }
          case 64: {
            this.payType = input.readInt32();
            break;
          }
          case 74: {
            this.transactionNo = input.readString();
            break;
          }
          case 82: {
            this.createDate = input.readString();
            break;
          }
          case 90: {
            this.finishTime = input.readString();
            break;
          }
          case 96: {
            this.status = input.readInt32();
            break;
          }
        }
      }
    }

    public static PayOrder parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new PayOrder(), data);
    }

    public static PayOrder parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new PayOrder().mergeFrom(input);
    }
  }

  public static final class PayTypeInfo extends
      com.google.protobuf.nano.MessageNano {

    private static volatile PayTypeInfo[] _emptyArray;
    public static PayTypeInfo[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new PayTypeInfo[0];
          }
        }
      }
      return _emptyArray;
    }

    // required int32 type = 1;
    public int type;

    // required string name = 2;
    public java.lang.String name;

    // required int32 status = 3;
    public int status;

    // repeated .LimitInfo limit = 4;
    public Pay.LimitInfo[] limit;

    public PayTypeInfo() {
      clear();
    }

    public PayTypeInfo clear() {
      type = 0;
      name = "";
      status = 0;
      limit = Pay.LimitInfo.emptyArray();
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeInt32(1, this.type);
      output.writeString(2, this.name);
      output.writeInt32(3, this.status);
      if (this.limit != null && this.limit.length > 0) {
        for (int i = 0; i < this.limit.length; i++) {
          Pay.LimitInfo element = this.limit[i];
          if (element != null) {
            output.writeMessage(4, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.type);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(2, this.name);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(3, this.status);
      if (this.limit != null && this.limit.length > 0) {
        for (int i = 0; i < this.limit.length; i++) {
          Pay.LimitInfo element = this.limit[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(4, element);
          }
        }
      }
      return size;
    }

    @Override
    public PayTypeInfo mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.type = input.readInt32();
            break;
          }
          case 18: {
            this.name = input.readString();
            break;
          }
          case 24: {
            this.status = input.readInt32();
            break;
          }
          case 34: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 34);
            int i = this.limit == null ? 0 : this.limit.length;
            Pay.LimitInfo[] newArray =
                new Pay.LimitInfo[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.limit, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new Pay.LimitInfo();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new Pay.LimitInfo();
            input.readMessage(newArray[i]);
            this.limit = newArray;
            break;
          }
        }
      }
    }

    public static PayTypeInfo parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new PayTypeInfo(), data);
    }

    public static PayTypeInfo parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new PayTypeInfo().mergeFrom(input);
    }
  }

  public static final class ReqRechargeInfo extends
      com.google.protobuf.nano.MessageNano {

    private static volatile ReqRechargeInfo[] _emptyArray;
    public static ReqRechargeInfo[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new ReqRechargeInfo[0];
          }
        }
      }
      return _emptyArray;
    }

    // required string openId = 1;
    public java.lang.String openId;

    // optional string mobile = 2;
    public java.lang.String mobile;

    public ReqRechargeInfo() {
      clear();
    }

    public ReqRechargeInfo clear() {
      openId = "";
      mobile = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeString(1, this.openId);
      if (!this.mobile.equals("")) {
        output.writeString(2, this.mobile);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(1, this.openId);
      if (!this.mobile.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.mobile);
      }
      return size;
    }

    @Override
    public ReqRechargeInfo mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.openId = input.readString();
            break;
          }
          case 18: {
            this.mobile = input.readString();
            break;
          }
        }
      }
    }

    public static ReqRechargeInfo parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new ReqRechargeInfo(), data);
    }

    public static ReqRechargeInfo parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new ReqRechargeInfo().mergeFrom(input);
    }
  }

  public static final class RspRechargeInfo extends
      com.google.protobuf.nano.MessageNano {

    private static volatile RspRechargeInfo[] _emptyArray;
    public static RspRechargeInfo[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new RspRechargeInfo[0];
          }
        }
      }
      return _emptyArray;
    }

    // required int32 rescode = 1;
    public int rescode;

    // required string resmsg = 2;
    public java.lang.String resmsg;

    // repeated .RechargeInfo recharge = 3;
    public Pay.RechargeInfo[] recharge;

    // optional string area = 4;
    public java.lang.String area;

    public RspRechargeInfo() {
      clear();
    }

    public RspRechargeInfo clear() {
      rescode = 0;
      resmsg = "";
      recharge = Pay.RechargeInfo.emptyArray();
      area = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeInt32(1, this.rescode);
      output.writeString(2, this.resmsg);
      if (this.recharge != null && this.recharge.length > 0) {
        for (int i = 0; i < this.recharge.length; i++) {
          Pay.RechargeInfo element = this.recharge[i];
          if (element != null) {
            output.writeMessage(3, element);
          }
        }
      }
      if (!this.area.equals("")) {
        output.writeString(4, this.area);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.rescode);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(2, this.resmsg);
      if (this.recharge != null && this.recharge.length > 0) {
        for (int i = 0; i < this.recharge.length; i++) {
          Pay.RechargeInfo element = this.recharge[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(3, element);
          }
        }
      }
      if (!this.area.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(4, this.area);
      }
      return size;
    }

    @Override
    public RspRechargeInfo mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.rescode = input.readInt32();
            break;
          }
          case 18: {
            this.resmsg = input.readString();
            break;
          }
          case 26: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 26);
            int i = this.recharge == null ? 0 : this.recharge.length;
            Pay.RechargeInfo[] newArray =
                new Pay.RechargeInfo[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.recharge, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new Pay.RechargeInfo();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new Pay.RechargeInfo();
            input.readMessage(newArray[i]);
            this.recharge = newArray;
            break;
          }
          case 34: {
            this.area = input.readString();
            break;
          }
        }
      }
    }

    public static RspRechargeInfo parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new RspRechargeInfo(), data);
    }

    public static RspRechargeInfo parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new RspRechargeInfo().mergeFrom(input);
    }
  }

  public static final class ReqSubmitOrder extends
      com.google.protobuf.nano.MessageNano {

    private static volatile ReqSubmitOrder[] _emptyArray;
    public static ReqSubmitOrder[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new ReqSubmitOrder[0];
          }
        }
      }
      return _emptyArray;
    }

    // required string openId = 1;
    public java.lang.String openId;

    // required string token = 2;
    public java.lang.String token;

    // required int32 price = 3;
    public int price;

    // required string mobile = 4;
    public java.lang.String mobile;

    // required int32 operation = 5;
    public int operation;

    // optional string params = 6;
    public java.lang.String params;

    // required int32 payType = 7;
    public int payType;

    public ReqSubmitOrder() {
      clear();
    }

    public ReqSubmitOrder clear() {
      openId = "";
      token = "";
      price = 0;
      mobile = "";
      operation = 0;
      params = "";
      payType = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeString(1, this.openId);
      output.writeString(2, this.token);
      output.writeInt32(3, this.price);
      output.writeString(4, this.mobile);
      output.writeInt32(5, this.operation);
      if (!this.params.equals("")) {
        output.writeString(6, this.params);
      }
      output.writeInt32(7, this.payType);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(1, this.openId);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(2, this.token);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(3, this.price);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(4, this.mobile);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(5, this.operation);
      if (!this.params.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(6, this.params);
      }
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(7, this.payType);
      return size;
    }

    @Override
    public ReqSubmitOrder mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.openId = input.readString();
            break;
          }
          case 18: {
            this.token = input.readString();
            break;
          }
          case 24: {
            this.price = input.readInt32();
            break;
          }
          case 34: {
            this.mobile = input.readString();
            break;
          }
          case 40: {
            this.operation = input.readInt32();
            break;
          }
          case 50: {
            this.params = input.readString();
            break;
          }
          case 56: {
            this.payType = input.readInt32();
            break;
          }
        }
      }
    }

    public static ReqSubmitOrder parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new ReqSubmitOrder(), data);
    }

    public static ReqSubmitOrder parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new ReqSubmitOrder().mergeFrom(input);
    }
  }

  public static final class RspSubmitOrder extends
      com.google.protobuf.nano.MessageNano {

    private static volatile RspSubmitOrder[] _emptyArray;
    public static RspSubmitOrder[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new RspSubmitOrder[0];
          }
        }
      }
      return _emptyArray;
    }

    // required int32 rescode = 1;
    public int rescode;

    // required string resmsg = 2;
    public java.lang.String resmsg;

    // optional string noticeUrl = 3;
    public java.lang.String noticeUrl;

    // optional .PayOrder payorder = 4;
    public Pay.PayOrder payorder;

    public RspSubmitOrder() {
      clear();
    }

    public RspSubmitOrder clear() {
      rescode = 0;
      resmsg = "";
      noticeUrl = "";
      payorder = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeInt32(1, this.rescode);
      output.writeString(2, this.resmsg);
      if (!this.noticeUrl.equals("")) {
        output.writeString(3, this.noticeUrl);
      }
      if (this.payorder != null) {
        output.writeMessage(4, this.payorder);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.rescode);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(2, this.resmsg);
      if (!this.noticeUrl.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.noticeUrl);
      }
      if (this.payorder != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(4, this.payorder);
      }
      return size;
    }

    @Override
    public RspSubmitOrder mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.rescode = input.readInt32();
            break;
          }
          case 18: {
            this.resmsg = input.readString();
            break;
          }
          case 26: {
            this.noticeUrl = input.readString();
            break;
          }
          case 34: {
            if (this.payorder == null) {
              this.payorder = new Pay.PayOrder();
            }
            input.readMessage(this.payorder);
            break;
          }
        }
      }
    }

    public static RspSubmitOrder parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new RspSubmitOrder(), data);
    }

    public static RspSubmitOrder parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new RspSubmitOrder().mergeFrom(input);
    }
  }

  public static final class ReqPayOrderList extends
      com.google.protobuf.nano.MessageNano {

    private static volatile ReqPayOrderList[] _emptyArray;
    public static ReqPayOrderList[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new ReqPayOrderList[0];
          }
        }
      }
      return _emptyArray;
    }

    // required string openId = 1;
    public java.lang.String openId;

    // required string token = 2;
    public java.lang.String token;

    // required string times = 3;
    public java.lang.String times;

    // required int32 page = 4;
    public int page;

    // required int32 operation = 5;
    public int operation;

    public ReqPayOrderList() {
      clear();
    }

    public ReqPayOrderList clear() {
      openId = "";
      token = "";
      times = "";
      page = 0;
      operation = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeString(1, this.openId);
      output.writeString(2, this.token);
      output.writeString(3, this.times);
      output.writeInt32(4, this.page);
      output.writeInt32(5, this.operation);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(1, this.openId);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(2, this.token);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(3, this.times);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(4, this.page);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(5, this.operation);
      return size;
    }

    @Override
    public ReqPayOrderList mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.openId = input.readString();
            break;
          }
          case 18: {
            this.token = input.readString();
            break;
          }
          case 26: {
            this.times = input.readString();
            break;
          }
          case 32: {
            this.page = input.readInt32();
            break;
          }
          case 40: {
            this.operation = input.readInt32();
            break;
          }
        }
      }
    }

    public static ReqPayOrderList parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new ReqPayOrderList(), data);
    }

    public static ReqPayOrderList parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new ReqPayOrderList().mergeFrom(input);
    }
  }

  public static final class RspPayOrderList extends
      com.google.protobuf.nano.MessageNano {

    private static volatile RspPayOrderList[] _emptyArray;
    public static RspPayOrderList[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new RspPayOrderList[0];
          }
        }
      }
      return _emptyArray;
    }

    // required int32 rescode = 1;
    public int rescode;

    // required string resmsg = 2;
    public java.lang.String resmsg;

    // repeated .PayOrder orderList = 3;
    public Pay.PayOrder[] orderList;

    public RspPayOrderList() {
      clear();
    }

    public RspPayOrderList clear() {
      rescode = 0;
      resmsg = "";
      orderList = Pay.PayOrder.emptyArray();
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeInt32(1, this.rescode);
      output.writeString(2, this.resmsg);
      if (this.orderList != null && this.orderList.length > 0) {
        for (int i = 0; i < this.orderList.length; i++) {
          Pay.PayOrder element = this.orderList[i];
          if (element != null) {
            output.writeMessage(3, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.rescode);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(2, this.resmsg);
      if (this.orderList != null && this.orderList.length > 0) {
        for (int i = 0; i < this.orderList.length; i++) {
          Pay.PayOrder element = this.orderList[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(3, element);
          }
        }
      }
      return size;
    }

    @Override
    public RspPayOrderList mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.rescode = input.readInt32();
            break;
          }
          case 18: {
            this.resmsg = input.readString();
            break;
          }
          case 26: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 26);
            int i = this.orderList == null ? 0 : this.orderList.length;
            Pay.PayOrder[] newArray =
                new Pay.PayOrder[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.orderList, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new Pay.PayOrder();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new Pay.PayOrder();
            input.readMessage(newArray[i]);
            this.orderList = newArray;
            break;
          }
        }
      }
    }

    public static RspPayOrderList parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new RspPayOrderList(), data);
    }

    public static RspPayOrderList parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new RspPayOrderList().mergeFrom(input);
    }
  }

  public static final class ReqPayNotice extends
      com.google.protobuf.nano.MessageNano {

    private static volatile ReqPayNotice[] _emptyArray;
    public static ReqPayNotice[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new ReqPayNotice[0];
          }
        }
      }
      return _emptyArray;
    }

    // required string openId = 1;
    public java.lang.String openId;

    // required string orderNo = 2;
    public java.lang.String orderNo;

    // required int32 operation = 3;
    public int operation;

    public ReqPayNotice() {
      clear();
    }

    public ReqPayNotice clear() {
      openId = "";
      orderNo = "";
      operation = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeString(1, this.openId);
      output.writeString(2, this.orderNo);
      output.writeInt32(3, this.operation);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(1, this.openId);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(2, this.orderNo);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(3, this.operation);
      return size;
    }

    @Override
    public ReqPayNotice mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.openId = input.readString();
            break;
          }
          case 18: {
            this.orderNo = input.readString();
            break;
          }
          case 24: {
            this.operation = input.readInt32();
            break;
          }
        }
      }
    }

    public static ReqPayNotice parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new ReqPayNotice(), data);
    }

    public static ReqPayNotice parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new ReqPayNotice().mergeFrom(input);
    }
  }

  public static final class RspPayNotice extends
      com.google.protobuf.nano.MessageNano {

    private static volatile RspPayNotice[] _emptyArray;
    public static RspPayNotice[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new RspPayNotice[0];
          }
        }
      }
      return _emptyArray;
    }

    // required int32 rescode = 1;
    public int rescode;

    // required string resmsg = 2;
    public java.lang.String resmsg;

    public RspPayNotice() {
      clear();
    }

    public RspPayNotice clear() {
      rescode = 0;
      resmsg = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeInt32(1, this.rescode);
      output.writeString(2, this.resmsg);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.rescode);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(2, this.resmsg);
      return size;
    }

    @Override
    public RspPayNotice mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.rescode = input.readInt32();
            break;
          }
          case 18: {
            this.resmsg = input.readString();
            break;
          }
        }
      }
    }

    public static RspPayNotice parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new RspPayNotice(), data);
    }

    public static RspPayNotice parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new RspPayNotice().mergeFrom(input);
    }
  }

  public static final class ReqPayType extends
      com.google.protobuf.nano.MessageNano {

    private static volatile ReqPayType[] _emptyArray;
    public static ReqPayType[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new ReqPayType[0];
          }
        }
      }
      return _emptyArray;
    }

    // required string openId = 1;
    public java.lang.String openId;

    public ReqPayType() {
      clear();
    }

    public ReqPayType clear() {
      openId = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeString(1, this.openId);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(1, this.openId);
      return size;
    }

    @Override
    public ReqPayType mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.openId = input.readString();
            break;
          }
        }
      }
    }

    public static ReqPayType parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new ReqPayType(), data);
    }

    public static ReqPayType parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new ReqPayType().mergeFrom(input);
    }
  }

  public static final class RspPayType extends
      com.google.protobuf.nano.MessageNano {

    private static volatile RspPayType[] _emptyArray;
    public static RspPayType[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new RspPayType[0];
          }
        }
      }
      return _emptyArray;
    }

    // required int32 rescode = 1;
    public int rescode;

    // required string resmsg = 2;
    public java.lang.String resmsg;

    // repeated .PayTypeInfo typeInfo = 3;
    public Pay.PayTypeInfo[] typeInfo;

    public RspPayType() {
      clear();
    }

    public RspPayType clear() {
      rescode = 0;
      resmsg = "";
      typeInfo = Pay.PayTypeInfo.emptyArray();
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeInt32(1, this.rescode);
      output.writeString(2, this.resmsg);
      if (this.typeInfo != null && this.typeInfo.length > 0) {
        for (int i = 0; i < this.typeInfo.length; i++) {
          Pay.PayTypeInfo element = this.typeInfo[i];
          if (element != null) {
            output.writeMessage(3, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.rescode);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(2, this.resmsg);
      if (this.typeInfo != null && this.typeInfo.length > 0) {
        for (int i = 0; i < this.typeInfo.length; i++) {
          Pay.PayTypeInfo element = this.typeInfo[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(3, element);
          }
        }
      }
      return size;
    }

    @Override
    public RspPayType mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.rescode = input.readInt32();
            break;
          }
          case 18: {
            this.resmsg = input.readString();
            break;
          }
          case 26: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 26);
            int i = this.typeInfo == null ? 0 : this.typeInfo.length;
            Pay.PayTypeInfo[] newArray =
                new Pay.PayTypeInfo[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.typeInfo, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new Pay.PayTypeInfo();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new Pay.PayTypeInfo();
            input.readMessage(newArray[i]);
            this.typeInfo = newArray;
            break;
          }
        }
      }
    }

    public static RspPayType parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new RspPayType(), data);
    }

    public static RspPayType parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new RspPayType().mergeFrom(input);
    }
  }

  public static final class ReqUserAccInfo extends
      com.google.protobuf.nano.MessageNano {

    private static volatile ReqUserAccInfo[] _emptyArray;
    public static ReqUserAccInfo[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new ReqUserAccInfo[0];
          }
        }
      }
      return _emptyArray;
    }

    // required string openId = 1;
    public java.lang.String openId;

    // required string token = 2;
    public java.lang.String token;

    public ReqUserAccInfo() {
      clear();
    }

    public ReqUserAccInfo clear() {
      openId = "";
      token = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeString(1, this.openId);
      output.writeString(2, this.token);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(1, this.openId);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(2, this.token);
      return size;
    }

    @Override
    public ReqUserAccInfo mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.openId = input.readString();
            break;
          }
          case 18: {
            this.token = input.readString();
            break;
          }
        }
      }
    }

    public static ReqUserAccInfo parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new ReqUserAccInfo(), data);
    }

    public static ReqUserAccInfo parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new ReqUserAccInfo().mergeFrom(input);
    }
  }

  public static final class RspUserAccInfo extends
      com.google.protobuf.nano.MessageNano {

    private static volatile RspUserAccInfo[] _emptyArray;
    public static RspUserAccInfo[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new RspUserAccInfo[0];
          }
        }
      }
      return _emptyArray;
    }

    // required int32 rescode = 1;
    public int rescode;

    // required string resmsg = 2;
    public java.lang.String resmsg;

    // optional .UserAccInfo userAccInfo = 3;
    public Pay.UserAccInfo userAccInfo;

    public RspUserAccInfo() {
      clear();
    }

    public RspUserAccInfo clear() {
      rescode = 0;
      resmsg = "";
      userAccInfo = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeInt32(1, this.rescode);
      output.writeString(2, this.resmsg);
      if (this.userAccInfo != null) {
        output.writeMessage(3, this.userAccInfo);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.rescode);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(2, this.resmsg);
      if (this.userAccInfo != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(3, this.userAccInfo);
      }
      return size;
    }

    @Override
    public RspUserAccInfo mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.rescode = input.readInt32();
            break;
          }
          case 18: {
            this.resmsg = input.readString();
            break;
          }
          case 26: {
            if (this.userAccInfo == null) {
              this.userAccInfo = new Pay.UserAccInfo();
            }
            input.readMessage(this.userAccInfo);
            break;
          }
        }
      }
    }

    public static RspUserAccInfo parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new RspUserAccInfo(), data);
    }

    public static RspUserAccInfo parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new RspUserAccInfo().mergeFrom(input);
    }
  }

  public static final class UserAccInfo extends
      com.google.protobuf.nano.MessageNano {

    private static volatile UserAccInfo[] _emptyArray;
    public static UserAccInfo[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new UserAccInfo[0];
          }
        }
      }
      return _emptyArray;
    }

    // required string openId = 1;
    public java.lang.String openId;

    // optional int32 newCoin = 2;
    public int newCoin;

    // optional int32 rechargeCount = 3;
    public int rechargeCount;

    // optional int32 consumeCount = 4;
    public int consumeCount;

    // optional int32 status = 5;
    public int status;

    // optional string activateTime = 6;
    public java.lang.String activateTime;

    public UserAccInfo() {
      clear();
    }

    public UserAccInfo clear() {
      openId = "";
      newCoin = 0;
      rechargeCount = 0;
      consumeCount = 0;
      status = 0;
      activateTime = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeString(1, this.openId);
      if (this.newCoin != 0) {
        output.writeInt32(2, this.newCoin);
      }
      if (this.rechargeCount != 0) {
        output.writeInt32(3, this.rechargeCount);
      }
      if (this.consumeCount != 0) {
        output.writeInt32(4, this.consumeCount);
      }
      if (this.status != 0) {
        output.writeInt32(5, this.status);
      }
      if (!this.activateTime.equals("")) {
        output.writeString(6, this.activateTime);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(1, this.openId);
      if (this.newCoin != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(2, this.newCoin);
      }
      if (this.rechargeCount != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(3, this.rechargeCount);
      }
      if (this.consumeCount != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(4, this.consumeCount);
      }
      if (this.status != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(5, this.status);
      }
      if (!this.activateTime.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(6, this.activateTime);
      }
      return size;
    }

    @Override
    public UserAccInfo mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.openId = input.readString();
            break;
          }
          case 16: {
            this.newCoin = input.readInt32();
            break;
          }
          case 24: {
            this.rechargeCount = input.readInt32();
            break;
          }
          case 32: {
            this.consumeCount = input.readInt32();
            break;
          }
          case 40: {
            this.status = input.readInt32();
            break;
          }
          case 50: {
            this.activateTime = input.readString();
            break;
          }
        }
      }
    }

    public static UserAccInfo parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new UserAccInfo(), data);
    }

    public static UserAccInfo parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new UserAccInfo().mergeFrom(input);
    }
  }

  public static final class ReqGetUserAppRoles extends
      com.google.protobuf.nano.MessageNano {

    private static volatile ReqGetUserAppRoles[] _emptyArray;
    public static ReqGetUserAppRoles[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new ReqGetUserAppRoles[0];
          }
        }
      }
      return _emptyArray;
    }

    // required string openId = 1;
    public java.lang.String openId;

    // required string token = 2;
    public java.lang.String token;

    // required int32 appId = 3;
    public int appId;

    // required string appToken = 4;
    public java.lang.String appToken;

    public ReqGetUserAppRoles() {
      clear();
    }

    public ReqGetUserAppRoles clear() {
      openId = "";
      token = "";
      appId = 0;
      appToken = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeString(1, this.openId);
      output.writeString(2, this.token);
      output.writeInt32(3, this.appId);
      output.writeString(4, this.appToken);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(1, this.openId);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(2, this.token);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(3, this.appId);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(4, this.appToken);
      return size;
    }

    @Override
    public ReqGetUserAppRoles mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.openId = input.readString();
            break;
          }
          case 18: {
            this.token = input.readString();
            break;
          }
          case 24: {
            this.appId = input.readInt32();
            break;
          }
          case 34: {
            this.appToken = input.readString();
            break;
          }
        }
      }
    }

    public static ReqGetUserAppRoles parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new ReqGetUserAppRoles(), data);
    }

    public static ReqGetUserAppRoles parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new ReqGetUserAppRoles().mergeFrom(input);
    }
  }

  public static final class RspGetUserAppRoles extends
      com.google.protobuf.nano.MessageNano {

    private static volatile RspGetUserAppRoles[] _emptyArray;
    public static RspGetUserAppRoles[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new RspGetUserAppRoles[0];
          }
        }
      }
      return _emptyArray;
    }

    // required int32 rescode = 1;
    public int rescode;

    // required string resmsg = 2;
    public java.lang.String resmsg;

    // optional .UserAppRoleInfo roleInfo = 3;
    public Pay.UserAppRoleInfo roleInfo;

    public RspGetUserAppRoles() {
      clear();
    }

    public RspGetUserAppRoles clear() {
      rescode = 0;
      resmsg = "";
      roleInfo = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeInt32(1, this.rescode);
      output.writeString(2, this.resmsg);
      if (this.roleInfo != null) {
        output.writeMessage(3, this.roleInfo);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.rescode);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(2, this.resmsg);
      if (this.roleInfo != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(3, this.roleInfo);
      }
      return size;
    }

    @Override
    public RspGetUserAppRoles mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.rescode = input.readInt32();
            break;
          }
          case 18: {
            this.resmsg = input.readString();
            break;
          }
          case 26: {
            if (this.roleInfo == null) {
              this.roleInfo = new Pay.UserAppRoleInfo();
            }
            input.readMessage(this.roleInfo);
            break;
          }
        }
      }
    }

    public static RspGetUserAppRoles parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new RspGetUserAppRoles(), data);
    }

    public static RspGetUserAppRoles parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new RspGetUserAppRoles().mergeFrom(input);
    }
  }

  public static final class UserAppRoleInfo extends
      com.google.protobuf.nano.MessageNano {

    private static volatile UserAppRoleInfo[] _emptyArray;
    public static UserAppRoleInfo[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new UserAppRoleInfo[0];
          }
        }
      }
      return _emptyArray;
    }

    // required string roleId = 1;
    public java.lang.String roleId;

    // optional string roleToken = 2;
    public java.lang.String roleToken;

    // optional string fstLogTime = 3;
    public java.lang.String fstLogTime;

    // optional string lastLogTime = 4;
    public java.lang.String lastLogTime;

    public UserAppRoleInfo() {
      clear();
    }

    public UserAppRoleInfo clear() {
      roleId = "";
      roleToken = "";
      fstLogTime = "";
      lastLogTime = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeString(1, this.roleId);
      if (!this.roleToken.equals("")) {
        output.writeString(2, this.roleToken);
      }
      if (!this.fstLogTime.equals("")) {
        output.writeString(3, this.fstLogTime);
      }
      if (!this.lastLogTime.equals("")) {
        output.writeString(4, this.lastLogTime);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(1, this.roleId);
      if (!this.roleToken.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.roleToken);
      }
      if (!this.fstLogTime.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.fstLogTime);
      }
      if (!this.lastLogTime.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(4, this.lastLogTime);
      }
      return size;
    }

    @Override
    public UserAppRoleInfo mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.roleId = input.readString();
            break;
          }
          case 18: {
            this.roleToken = input.readString();
            break;
          }
          case 26: {
            this.fstLogTime = input.readString();
            break;
          }
          case 34: {
            this.lastLogTime = input.readString();
            break;
          }
        }
      }
    }

    public static UserAppRoleInfo parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new UserAppRoleInfo(), data);
    }

    public static UserAppRoleInfo parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new UserAppRoleInfo().mergeFrom(input);
    }
  }

  public static final class ReqAccRecharge extends
      com.google.protobuf.nano.MessageNano {

    private static volatile ReqAccRecharge[] _emptyArray;
    public static ReqAccRecharge[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new ReqAccRecharge[0];
          }
        }
      }
      return _emptyArray;
    }

    // required string openId = 1;
    public java.lang.String openId;

    // required string token = 2;
    public java.lang.String token;

    // required int32 paytype = 3;
    public int paytype;

    // required int32 rechargeAmt = 4;
    public int rechargeAmt;

    // optional string cardNo = 5;
    public java.lang.String cardNo;

    // optional string cardPwd = 6;
    public java.lang.String cardPwd;

    // optional string exinfo = 7;
    public java.lang.String exinfo;

    // optional string cardType = 8;
    public java.lang.String cardType;

    public ReqAccRecharge() {
      clear();
    }

    public ReqAccRecharge clear() {
      openId = "";
      token = "";
      paytype = 0;
      rechargeAmt = 0;
      cardNo = "";
      cardPwd = "";
      exinfo = "";
      cardType = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeString(1, this.openId);
      output.writeString(2, this.token);
      output.writeInt32(3, this.paytype);
      output.writeInt32(4, this.rechargeAmt);
      if (!this.cardNo.equals("")) {
        output.writeString(5, this.cardNo);
      }
      if (!this.cardPwd.equals("")) {
        output.writeString(6, this.cardPwd);
      }
      if (!this.exinfo.equals("")) {
        output.writeString(7, this.exinfo);
      }
      if (!this.cardType.equals("")) {
        output.writeString(8, this.cardType);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(1, this.openId);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(2, this.token);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(3, this.paytype);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(4, this.rechargeAmt);
      if (!this.cardNo.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(5, this.cardNo);
      }
      if (!this.cardPwd.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(6, this.cardPwd);
      }
      if (!this.exinfo.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(7, this.exinfo);
      }
      if (!this.cardType.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(8, this.cardType);
      }
      return size;
    }

    @Override
    public ReqAccRecharge mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.openId = input.readString();
            break;
          }
          case 18: {
            this.token = input.readString();
            break;
          }
          case 24: {
            this.paytype = input.readInt32();
            break;
          }
          case 32: {
            this.rechargeAmt = input.readInt32();
            break;
          }
          case 42: {
            this.cardNo = input.readString();
            break;
          }
          case 50: {
            this.cardPwd = input.readString();
            break;
          }
          case 58: {
            this.exinfo = input.readString();
            break;
          }
          case 66: {
            this.cardType = input.readString();
            break;
          }
        }
      }
    }

    public static ReqAccRecharge parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new ReqAccRecharge(), data);
    }

    public static ReqAccRecharge parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new ReqAccRecharge().mergeFrom(input);
    }
  }

  public static final class RspAccRecharge extends
      com.google.protobuf.nano.MessageNano {

    private static volatile RspAccRecharge[] _emptyArray;
    public static RspAccRecharge[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new RspAccRecharge[0];
          }
        }
      }
      return _emptyArray;
    }

    // required int32 rescode = 1;
    public int rescode;

    // required string resmsg = 2;
    public java.lang.String resmsg;

    // optional string orderNo = 3;
    public java.lang.String orderNo;

    // optional string rechargeAmt = 4;
    public java.lang.String rechargeAmt;

    // optional string orderTime = 5;
    public java.lang.String orderTime;

    // optional string orderDesc = 6;
    public java.lang.String orderDesc;

    // optional string orderExInfo = 7;
    public java.lang.String orderExInfo;

    // optional string noticeUrl = 8;
    public java.lang.String noticeUrl;

    public RspAccRecharge() {
      clear();
    }

    public RspAccRecharge clear() {
      rescode = 0;
      resmsg = "";
      orderNo = "";
      rechargeAmt = "";
      orderTime = "";
      orderDesc = "";
      orderExInfo = "";
      noticeUrl = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeInt32(1, this.rescode);
      output.writeString(2, this.resmsg);
      if (!this.orderNo.equals("")) {
        output.writeString(3, this.orderNo);
      }
      if (!this.rechargeAmt.equals("")) {
        output.writeString(4, this.rechargeAmt);
      }
      if (!this.orderTime.equals("")) {
        output.writeString(5, this.orderTime);
      }
      if (!this.orderDesc.equals("")) {
        output.writeString(6, this.orderDesc);
      }
      if (!this.orderExInfo.equals("")) {
        output.writeString(7, this.orderExInfo);
      }
      if (!this.noticeUrl.equals("")) {
        output.writeString(8, this.noticeUrl);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.rescode);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(2, this.resmsg);
      if (!this.orderNo.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.orderNo);
      }
      if (!this.rechargeAmt.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(4, this.rechargeAmt);
      }
      if (!this.orderTime.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(5, this.orderTime);
      }
      if (!this.orderDesc.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(6, this.orderDesc);
      }
      if (!this.orderExInfo.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(7, this.orderExInfo);
      }
      if (!this.noticeUrl.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(8, this.noticeUrl);
      }
      return size;
    }

    @Override
    public RspAccRecharge mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.rescode = input.readInt32();
            break;
          }
          case 18: {
            this.resmsg = input.readString();
            break;
          }
          case 26: {
            this.orderNo = input.readString();
            break;
          }
          case 34: {
            this.rechargeAmt = input.readString();
            break;
          }
          case 42: {
            this.orderTime = input.readString();
            break;
          }
          case 50: {
            this.orderDesc = input.readString();
            break;
          }
          case 58: {
            this.orderExInfo = input.readString();
            break;
          }
          case 66: {
            this.noticeUrl = input.readString();
            break;
          }
        }
      }
    }

    public static RspAccRecharge parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new RspAccRecharge(), data);
    }

    public static RspAccRecharge parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new RspAccRecharge().mergeFrom(input);
    }
  }

  public static final class ReqCheckAccRecharge extends
      com.google.protobuf.nano.MessageNano {

    private static volatile ReqCheckAccRecharge[] _emptyArray;
    public static ReqCheckAccRecharge[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new ReqCheckAccRecharge[0];
          }
        }
      }
      return _emptyArray;
    }

    // required string openId = 1;
    public java.lang.String openId;

    // required string token = 2;
    public java.lang.String token;

    // required string orderNo = 3;
    public java.lang.String orderNo;

    public ReqCheckAccRecharge() {
      clear();
    }

    public ReqCheckAccRecharge clear() {
      openId = "";
      token = "";
      orderNo = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeString(1, this.openId);
      output.writeString(2, this.token);
      output.writeString(3, this.orderNo);
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(1, this.openId);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(2, this.token);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(3, this.orderNo);
      return size;
    }

    @Override
    public ReqCheckAccRecharge mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.openId = input.readString();
            break;
          }
          case 18: {
            this.token = input.readString();
            break;
          }
          case 26: {
            this.orderNo = input.readString();
            break;
          }
        }
      }
    }

    public static ReqCheckAccRecharge parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new ReqCheckAccRecharge(), data);
    }

    public static ReqCheckAccRecharge parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new ReqCheckAccRecharge().mergeFrom(input);
    }
  }

  public static final class RspCheckAccRecharge extends
      com.google.protobuf.nano.MessageNano {

    private static volatile RspCheckAccRecharge[] _emptyArray;
    public static RspCheckAccRecharge[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new RspCheckAccRecharge[0];
          }
        }
      }
      return _emptyArray;
    }

    // required int32 rescode = 1;
    public int rescode;

    // required string resmsg = 2;
    public java.lang.String resmsg;

    // optional int32 rechargeStatus = 3;
    public int rechargeStatus;

    // optional string orderNo = 4;
    public java.lang.String orderNo;

    // optional int32 rechargeAmt = 5;
    public int rechargeAmt;

    // optional int32 rechargeNewCoin = 6;
    public int rechargeNewCoin;

    // optional int32 newCoin = 7;
    public int newCoin;

    public RspCheckAccRecharge() {
      clear();
    }

    public RspCheckAccRecharge clear() {
      rescode = 0;
      resmsg = "";
      rechargeStatus = 0;
      orderNo = "";
      rechargeAmt = 0;
      rechargeNewCoin = 0;
      newCoin = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeInt32(1, this.rescode);
      output.writeString(2, this.resmsg);
      if (this.rechargeStatus != 0) {
        output.writeInt32(3, this.rechargeStatus);
      }
      if (!this.orderNo.equals("")) {
        output.writeString(4, this.orderNo);
      }
      if (this.rechargeAmt != 0) {
        output.writeInt32(5, this.rechargeAmt);
      }
      if (this.rechargeNewCoin != 0) {
        output.writeInt32(6, this.rechargeNewCoin);
      }
      if (this.newCoin != 0) {
        output.writeInt32(7, this.newCoin);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.rescode);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(2, this.resmsg);
      if (this.rechargeStatus != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(3, this.rechargeStatus);
      }
      if (!this.orderNo.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(4, this.orderNo);
      }
      if (this.rechargeAmt != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(5, this.rechargeAmt);
      }
      if (this.rechargeNewCoin != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(6, this.rechargeNewCoin);
      }
      if (this.newCoin != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(7, this.newCoin);
      }
      return size;
    }

    @Override
    public RspCheckAccRecharge mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.rescode = input.readInt32();
            break;
          }
          case 18: {
            this.resmsg = input.readString();
            break;
          }
          case 24: {
            this.rechargeStatus = input.readInt32();
            break;
          }
          case 34: {
            this.orderNo = input.readString();
            break;
          }
          case 40: {
            this.rechargeAmt = input.readInt32();
            break;
          }
          case 48: {
            this.rechargeNewCoin = input.readInt32();
            break;
          }
          case 56: {
            this.newCoin = input.readInt32();
            break;
          }
        }
      }
    }

    public static RspCheckAccRecharge parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new RspCheckAccRecharge(), data);
    }

    public static RspCheckAccRecharge parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new RspCheckAccRecharge().mergeFrom(input);
    }
  }

  public static final class AccRechargeInfo extends
      com.google.protobuf.nano.MessageNano {

    private static volatile AccRechargeInfo[] _emptyArray;
    public static AccRechargeInfo[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new AccRechargeInfo[0];
          }
        }
      }
      return _emptyArray;
    }

    // required string orderNO = 1;
    public java.lang.String orderNO;

    // optional int32 rechargeAmt = 2;
    public int rechargeAmt;

    // optional int32 confirmAmt = 3;
    public int confirmAmt;

    // optional int32 confirmNewCoin = 4;
    public int confirmNewCoin;

    // optional int32 channelType = 5;
    public int channelType;

    // optional string channelFlag = 6;
    public java.lang.String channelFlag;

    // optional string chargeAccount = 7;
    public java.lang.String chargeAccount;

    // optional string submitTime = 8;
    public java.lang.String submitTime;

    // optional string confirmTime = 9;
    public java.lang.String confirmTime;

    // optional int32 rechargeStatus = 10;
    public int rechargeStatus;

    // optional string resMsg = 11;
    public java.lang.String resMsg;

    public AccRechargeInfo() {
      clear();
    }

    public AccRechargeInfo clear() {
      orderNO = "";
      rechargeAmt = 0;
      confirmAmt = 0;
      confirmNewCoin = 0;
      channelType = 0;
      channelFlag = "";
      chargeAccount = "";
      submitTime = "";
      confirmTime = "";
      rechargeStatus = 0;
      resMsg = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeString(1, this.orderNO);
      if (this.rechargeAmt != 0) {
        output.writeInt32(2, this.rechargeAmt);
      }
      if (this.confirmAmt != 0) {
        output.writeInt32(3, this.confirmAmt);
      }
      if (this.confirmNewCoin != 0) {
        output.writeInt32(4, this.confirmNewCoin);
      }
      if (this.channelType != 0) {
        output.writeInt32(5, this.channelType);
      }
      if (!this.channelFlag.equals("")) {
        output.writeString(6, this.channelFlag);
      }
      if (!this.chargeAccount.equals("")) {
        output.writeString(7, this.chargeAccount);
      }
      if (!this.submitTime.equals("")) {
        output.writeString(8, this.submitTime);
      }
      if (!this.confirmTime.equals("")) {
        output.writeString(9, this.confirmTime);
      }
      if (this.rechargeStatus != 0) {
        output.writeInt32(10, this.rechargeStatus);
      }
      if (!this.resMsg.equals("")) {
        output.writeString(11, this.resMsg);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(1, this.orderNO);
      if (this.rechargeAmt != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(2, this.rechargeAmt);
      }
      if (this.confirmAmt != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(3, this.confirmAmt);
      }
      if (this.confirmNewCoin != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(4, this.confirmNewCoin);
      }
      if (this.channelType != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(5, this.channelType);
      }
      if (!this.channelFlag.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(6, this.channelFlag);
      }
      if (!this.chargeAccount.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(7, this.chargeAccount);
      }
      if (!this.submitTime.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(8, this.submitTime);
      }
      if (!this.confirmTime.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(9, this.confirmTime);
      }
      if (this.rechargeStatus != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(10, this.rechargeStatus);
      }
      if (!this.resMsg.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(11, this.resMsg);
      }
      return size;
    }

    @Override
    public AccRechargeInfo mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.orderNO = input.readString();
            break;
          }
          case 16: {
            this.rechargeAmt = input.readInt32();
            break;
          }
          case 24: {
            this.confirmAmt = input.readInt32();
            break;
          }
          case 32: {
            this.confirmNewCoin = input.readInt32();
            break;
          }
          case 40: {
            this.channelType = input.readInt32();
            break;
          }
          case 50: {
            this.channelFlag = input.readString();
            break;
          }
          case 58: {
            this.chargeAccount = input.readString();
            break;
          }
          case 66: {
            this.submitTime = input.readString();
            break;
          }
          case 74: {
            this.confirmTime = input.readString();
            break;
          }
          case 80: {
            this.rechargeStatus = input.readInt32();
            break;
          }
          case 90: {
            this.resMsg = input.readString();
            break;
          }
        }
      }
    }

    public static AccRechargeInfo parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new AccRechargeInfo(), data);
    }

    public static AccRechargeInfo parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new AccRechargeInfo().mergeFrom(input);
    }
  }

  public static final class ReqAccRechargeList extends
      com.google.protobuf.nano.MessageNano {

    private static volatile ReqAccRechargeList[] _emptyArray;
    public static ReqAccRechargeList[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new ReqAccRechargeList[0];
          }
        }
      }
      return _emptyArray;
    }

    // required string openId = 1;
    public java.lang.String openId;

    // required string token = 2;
    public java.lang.String token;

    // optional string times = 3;
    public java.lang.String times;

    // optional int32 page = 4;
    public int page;

    public ReqAccRechargeList() {
      clear();
    }

    public ReqAccRechargeList clear() {
      openId = "";
      token = "";
      times = "";
      page = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeString(1, this.openId);
      output.writeString(2, this.token);
      if (!this.times.equals("")) {
        output.writeString(3, this.times);
      }
      if (this.page != 0) {
        output.writeInt32(4, this.page);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(1, this.openId);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(2, this.token);
      if (!this.times.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.times);
      }
      if (this.page != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(4, this.page);
      }
      return size;
    }

    @Override
    public ReqAccRechargeList mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.openId = input.readString();
            break;
          }
          case 18: {
            this.token = input.readString();
            break;
          }
          case 26: {
            this.times = input.readString();
            break;
          }
          case 32: {
            this.page = input.readInt32();
            break;
          }
        }
      }
    }

    public static ReqAccRechargeList parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new ReqAccRechargeList(), data);
    }

    public static ReqAccRechargeList parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new ReqAccRechargeList().mergeFrom(input);
    }
  }

  public static final class RspAccRechargeList extends
      com.google.protobuf.nano.MessageNano {

    private static volatile RspAccRechargeList[] _emptyArray;
    public static RspAccRechargeList[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new RspAccRechargeList[0];
          }
        }
      }
      return _emptyArray;
    }

    // required int32 rescode = 1;
    public int rescode;

    // required string resmsg = 2;
    public java.lang.String resmsg;

    // optional int32 newCoin = 3;
    public int newCoin;

    // optional int32 rechargeTimes = 4;
    public int rechargeTimes;

    // optional int32 listCount = 5;
    public int listCount;

    // repeated .AccRechargeInfo accRechargeInfo = 6;
    public Pay.AccRechargeInfo[] accRechargeInfo;

    public RspAccRechargeList() {
      clear();
    }

    public RspAccRechargeList clear() {
      rescode = 0;
      resmsg = "";
      newCoin = 0;
      rechargeTimes = 0;
      listCount = 0;
      accRechargeInfo = Pay.AccRechargeInfo.emptyArray();
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeInt32(1, this.rescode);
      output.writeString(2, this.resmsg);
      if (this.newCoin != 0) {
        output.writeInt32(3, this.newCoin);
      }
      if (this.rechargeTimes != 0) {
        output.writeInt32(4, this.rechargeTimes);
      }
      if (this.listCount != 0) {
        output.writeInt32(5, this.listCount);
      }
      if (this.accRechargeInfo != null && this.accRechargeInfo.length > 0) {
        for (int i = 0; i < this.accRechargeInfo.length; i++) {
          Pay.AccRechargeInfo element = this.accRechargeInfo[i];
          if (element != null) {
            output.writeMessage(6, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.rescode);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(2, this.resmsg);
      if (this.newCoin != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(3, this.newCoin);
      }
      if (this.rechargeTimes != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(4, this.rechargeTimes);
      }
      if (this.listCount != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(5, this.listCount);
      }
      if (this.accRechargeInfo != null && this.accRechargeInfo.length > 0) {
        for (int i = 0; i < this.accRechargeInfo.length; i++) {
          Pay.AccRechargeInfo element = this.accRechargeInfo[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(6, element);
          }
        }
      }
      return size;
    }

    @Override
    public RspAccRechargeList mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.rescode = input.readInt32();
            break;
          }
          case 18: {
            this.resmsg = input.readString();
            break;
          }
          case 24: {
            this.newCoin = input.readInt32();
            break;
          }
          case 32: {
            this.rechargeTimes = input.readInt32();
            break;
          }
          case 40: {
            this.listCount = input.readInt32();
            break;
          }
          case 50: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 50);
            int i = this.accRechargeInfo == null ? 0 : this.accRechargeInfo.length;
            Pay.AccRechargeInfo[] newArray =
                new Pay.AccRechargeInfo[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.accRechargeInfo, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new Pay.AccRechargeInfo();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new Pay.AccRechargeInfo();
            input.readMessage(newArray[i]);
            this.accRechargeInfo = newArray;
            break;
          }
        }
      }
    }

    public static RspAccRechargeList parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new RspAccRechargeList(), data);
    }

    public static RspAccRechargeList parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new RspAccRechargeList().mergeFrom(input);
    }
  }

  public static final class ReqConsume extends
      com.google.protobuf.nano.MessageNano {

    private static volatile ReqConsume[] _emptyArray;
    public static ReqConsume[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new ReqConsume[0];
          }
        }
      }
      return _emptyArray;
    }

    // required string openId = 1;
    public java.lang.String openId;

    // required string token = 2;
    public java.lang.String token;

    // required int32 appId = 3;
    public int appId;

    // required string appToken = 4;
    public java.lang.String appToken;

    // required string roleId = 5;
    public java.lang.String roleId;

    // required string roleToken = 6;
    public java.lang.String roleToken;

    // required int32 consumeNewCoin = 7;
    public int consumeNewCoin;

    // optional string cpOrderNo = 8;
    public java.lang.String cpOrderNo;

    // optional string productCode = 9;
    public java.lang.String productCode;

    // optional string productName = 10;
    public java.lang.String productName;

    // optional int32 productCount = 11;
    public int productCount;

    // optional string packName = 12;
    public java.lang.String packName;

    // optional string exInfo = 13;
    public java.lang.String exInfo;

    public ReqConsume() {
      clear();
    }

    public ReqConsume clear() {
      openId = "";
      token = "";
      appId = 0;
      appToken = "";
      roleId = "";
      roleToken = "";
      consumeNewCoin = 0;
      cpOrderNo = "";
      productCode = "";
      productName = "";
      productCount = 0;
      packName = "";
      exInfo = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeString(1, this.openId);
      output.writeString(2, this.token);
      output.writeInt32(3, this.appId);
      output.writeString(4, this.appToken);
      output.writeString(5, this.roleId);
      output.writeString(6, this.roleToken);
      output.writeInt32(7, this.consumeNewCoin);
      if (!this.cpOrderNo.equals("")) {
        output.writeString(8, this.cpOrderNo);
      }
      if (!this.productCode.equals("")) {
        output.writeString(9, this.productCode);
      }
      if (!this.productName.equals("")) {
        output.writeString(10, this.productName);
      }
      if (this.productCount != 0) {
        output.writeInt32(11, this.productCount);
      }
      if (!this.packName.equals("")) {
        output.writeString(12, this.packName);
      }
      if (!this.exInfo.equals("")) {
        output.writeString(13, this.exInfo);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(1, this.openId);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(2, this.token);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(3, this.appId);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(4, this.appToken);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(5, this.roleId);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(6, this.roleToken);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(7, this.consumeNewCoin);
      if (!this.cpOrderNo.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(8, this.cpOrderNo);
      }
      if (!this.productCode.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(9, this.productCode);
      }
      if (!this.productName.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(10, this.productName);
      }
      if (this.productCount != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(11, this.productCount);
      }
      if (!this.packName.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(12, this.packName);
      }
      if (!this.exInfo.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(13, this.exInfo);
      }
      return size;
    }

    @Override
    public ReqConsume mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.openId = input.readString();
            break;
          }
          case 18: {
            this.token = input.readString();
            break;
          }
          case 24: {
            this.appId = input.readInt32();
            break;
          }
          case 34: {
            this.appToken = input.readString();
            break;
          }
          case 42: {
            this.roleId = input.readString();
            break;
          }
          case 50: {
            this.roleToken = input.readString();
            break;
          }
          case 56: {
            this.consumeNewCoin = input.readInt32();
            break;
          }
          case 66: {
            this.cpOrderNo = input.readString();
            break;
          }
          case 74: {
            this.productCode = input.readString();
            break;
          }
          case 82: {
            this.productName = input.readString();
            break;
          }
          case 88: {
            this.productCount = input.readInt32();
            break;
          }
          case 98: {
            this.packName = input.readString();
            break;
          }
          case 106: {
            this.exInfo = input.readString();
            break;
          }
        }
      }
    }

    public static ReqConsume parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new ReqConsume(), data);
    }

    public static ReqConsume parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new ReqConsume().mergeFrom(input);
    }
  }

  public static final class RspConsume extends
      com.google.protobuf.nano.MessageNano {

    private static volatile RspConsume[] _emptyArray;
    public static RspConsume[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new RspConsume[0];
          }
        }
      }
      return _emptyArray;
    }

    // required int32 rescode = 1;
    public int rescode;

    // required string resmsg = 2;
    public java.lang.String resmsg;

    // optional int32 newCoin = 3;
    public int newCoin;

    // optional int32 consumeNewCoin = 4;
    public int consumeNewCoin;

    // optional string orderNo = 5;
    public java.lang.String orderNo;

    // optional string orderDate = 6;
    public java.lang.String orderDate;

    public RspConsume() {
      clear();
    }

    public RspConsume clear() {
      rescode = 0;
      resmsg = "";
      newCoin = 0;
      consumeNewCoin = 0;
      orderNo = "";
      orderDate = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeInt32(1, this.rescode);
      output.writeString(2, this.resmsg);
      if (this.newCoin != 0) {
        output.writeInt32(3, this.newCoin);
      }
      if (this.consumeNewCoin != 0) {
        output.writeInt32(4, this.consumeNewCoin);
      }
      if (!this.orderNo.equals("")) {
        output.writeString(5, this.orderNo);
      }
      if (!this.orderDate.equals("")) {
        output.writeString(6, this.orderDate);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.rescode);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(2, this.resmsg);
      if (this.newCoin != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(3, this.newCoin);
      }
      if (this.consumeNewCoin != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(4, this.consumeNewCoin);
      }
      if (!this.orderNo.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(5, this.orderNo);
      }
      if (!this.orderDate.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(6, this.orderDate);
      }
      return size;
    }

    @Override
    public RspConsume mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.rescode = input.readInt32();
            break;
          }
          case 18: {
            this.resmsg = input.readString();
            break;
          }
          case 24: {
            this.newCoin = input.readInt32();
            break;
          }
          case 32: {
            this.consumeNewCoin = input.readInt32();
            break;
          }
          case 42: {
            this.orderNo = input.readString();
            break;
          }
          case 50: {
            this.orderDate = input.readString();
            break;
          }
        }
      }
    }

    public static RspConsume parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new RspConsume(), data);
    }

    public static RspConsume parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new RspConsume().mergeFrom(input);
    }
  }

  public static final class ReqCheckConsume extends
      com.google.protobuf.nano.MessageNano {

    private static volatile ReqCheckConsume[] _emptyArray;
    public static ReqCheckConsume[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new ReqCheckConsume[0];
          }
        }
      }
      return _emptyArray;
    }

    // required string openId = 1;
    public java.lang.String openId;

    // required string token = 2;
    public java.lang.String token;

    // required string orderNo = 3;
    public java.lang.String orderNo;

    // optional string cpOrderNo = 4;
    public java.lang.String cpOrderNo;

    // optional string checkTime = 5;
    public java.lang.String checkTime;

    public ReqCheckConsume() {
      clear();
    }

    public ReqCheckConsume clear() {
      openId = "";
      token = "";
      orderNo = "";
      cpOrderNo = "";
      checkTime = "";
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeString(1, this.openId);
      output.writeString(2, this.token);
      output.writeString(3, this.orderNo);
      if (!this.cpOrderNo.equals("")) {
        output.writeString(4, this.cpOrderNo);
      }
      if (!this.checkTime.equals("")) {
        output.writeString(5, this.checkTime);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(1, this.openId);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(2, this.token);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(3, this.orderNo);
      if (!this.cpOrderNo.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(4, this.cpOrderNo);
      }
      if (!this.checkTime.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(5, this.checkTime);
      }
      return size;
    }

    @Override
    public ReqCheckConsume mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.openId = input.readString();
            break;
          }
          case 18: {
            this.token = input.readString();
            break;
          }
          case 26: {
            this.orderNo = input.readString();
            break;
          }
          case 34: {
            this.cpOrderNo = input.readString();
            break;
          }
          case 42: {
            this.checkTime = input.readString();
            break;
          }
        }
      }
    }

    public static ReqCheckConsume parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new ReqCheckConsume(), data);
    }

    public static ReqCheckConsume parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new ReqCheckConsume().mergeFrom(input);
    }
  }

  public static final class RspCheckConsume extends
      com.google.protobuf.nano.MessageNano {

    private static volatile RspCheckConsume[] _emptyArray;
    public static RspCheckConsume[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new RspCheckConsume[0];
          }
        }
      }
      return _emptyArray;
    }

    // required int32 rescode = 1;
    public int rescode;

    // required string resmsg = 2;
    public java.lang.String resmsg;

    // optional .ConsumeInfo consumeInfo = 3;
    public Pay.ConsumeInfo consumeInfo;

    public RspCheckConsume() {
      clear();
    }

    public RspCheckConsume clear() {
      rescode = 0;
      resmsg = "";
      consumeInfo = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeInt32(1, this.rescode);
      output.writeString(2, this.resmsg);
      if (this.consumeInfo != null) {
        output.writeMessage(3, this.consumeInfo);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.rescode);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(2, this.resmsg);
      if (this.consumeInfo != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(3, this.consumeInfo);
      }
      return size;
    }

    @Override
    public RspCheckConsume mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.rescode = input.readInt32();
            break;
          }
          case 18: {
            this.resmsg = input.readString();
            break;
          }
          case 26: {
            if (this.consumeInfo == null) {
              this.consumeInfo = new Pay.ConsumeInfo();
            }
            input.readMessage(this.consumeInfo);
            break;
          }
        }
      }
    }

    public static RspCheckConsume parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new RspCheckConsume(), data);
    }

    public static RspCheckConsume parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new RspCheckConsume().mergeFrom(input);
    }
  }

  public static final class ReqConsumeList extends
      com.google.protobuf.nano.MessageNano {

    private static volatile ReqConsumeList[] _emptyArray;
    public static ReqConsumeList[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new ReqConsumeList[0];
          }
        }
      }
      return _emptyArray;
    }

    // required string openId = 1;
    public java.lang.String openId;

    // required string token = 2;
    public java.lang.String token;

    // optional string times = 3;
    public java.lang.String times;

    // optional int32 page = 4;
    public int page;

    public ReqConsumeList() {
      clear();
    }

    public ReqConsumeList clear() {
      openId = "";
      token = "";
      times = "";
      page = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeString(1, this.openId);
      output.writeString(2, this.token);
      if (!this.times.equals("")) {
        output.writeString(3, this.times);
      }
      if (this.page != 0) {
        output.writeInt32(4, this.page);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(1, this.openId);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(2, this.token);
      if (!this.times.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.times);
      }
      if (this.page != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(4, this.page);
      }
      return size;
    }

    @Override
    public ReqConsumeList mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.openId = input.readString();
            break;
          }
          case 18: {
            this.token = input.readString();
            break;
          }
          case 26: {
            this.times = input.readString();
            break;
          }
          case 32: {
            this.page = input.readInt32();
            break;
          }
        }
      }
    }

    public static ReqConsumeList parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new ReqConsumeList(), data);
    }

    public static ReqConsumeList parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new ReqConsumeList().mergeFrom(input);
    }
  }

  public static final class RspConsumeList extends
      com.google.protobuf.nano.MessageNano {

    private static volatile RspConsumeList[] _emptyArray;
    public static RspConsumeList[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new RspConsumeList[0];
          }
        }
      }
      return _emptyArray;
    }

    // required int32 rescode = 1;
    public int rescode;

    // required string resmsg = 2;
    public java.lang.String resmsg;

    // optional int32 newCoin = 3;
    public int newCoin;

    // optional int32 consumeTimes = 4;
    public int consumeTimes;

    // optional int32 listCount = 5;
    public int listCount;

    // repeated .ConsumeInfo consumeInfo = 6;
    public Pay.ConsumeInfo[] consumeInfo;

    public RspConsumeList() {
      clear();
    }

    public RspConsumeList clear() {
      rescode = 0;
      resmsg = "";
      newCoin = 0;
      consumeTimes = 0;
      listCount = 0;
      consumeInfo = Pay.ConsumeInfo.emptyArray();
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeInt32(1, this.rescode);
      output.writeString(2, this.resmsg);
      if (this.newCoin != 0) {
        output.writeInt32(3, this.newCoin);
      }
      if (this.consumeTimes != 0) {
        output.writeInt32(4, this.consumeTimes);
      }
      if (this.listCount != 0) {
        output.writeInt32(5, this.listCount);
      }
      if (this.consumeInfo != null && this.consumeInfo.length > 0) {
        for (int i = 0; i < this.consumeInfo.length; i++) {
          Pay.ConsumeInfo element = this.consumeInfo[i];
          if (element != null) {
            output.writeMessage(6, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(1, this.rescode);
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(2, this.resmsg);
      if (this.newCoin != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(3, this.newCoin);
      }
      if (this.consumeTimes != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(4, this.consumeTimes);
      }
      if (this.listCount != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(5, this.listCount);
      }
      if (this.consumeInfo != null && this.consumeInfo.length > 0) {
        for (int i = 0; i < this.consumeInfo.length; i++) {
          Pay.ConsumeInfo element = this.consumeInfo[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(6, element);
          }
        }
      }
      return size;
    }

    @Override
    public RspConsumeList mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.rescode = input.readInt32();
            break;
          }
          case 18: {
            this.resmsg = input.readString();
            break;
          }
          case 24: {
            this.newCoin = input.readInt32();
            break;
          }
          case 32: {
            this.consumeTimes = input.readInt32();
            break;
          }
          case 40: {
            this.listCount = input.readInt32();
            break;
          }
          case 50: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 50);
            int i = this.consumeInfo == null ? 0 : this.consumeInfo.length;
            Pay.ConsumeInfo[] newArray =
                new Pay.ConsumeInfo[i + arrayLength];
            if (i != 0) {
              java.lang.System.arraycopy(this.consumeInfo, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new Pay.ConsumeInfo();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new Pay.ConsumeInfo();
            input.readMessage(newArray[i]);
            this.consumeInfo = newArray;
            break;
          }
        }
      }
    }

    public static RspConsumeList parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new RspConsumeList(), data);
    }

    public static RspConsumeList parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new RspConsumeList().mergeFrom(input);
    }
  }

  public static final class ConsumeInfo extends
      com.google.protobuf.nano.MessageNano {

    private static volatile ConsumeInfo[] _emptyArray;
    public static ConsumeInfo[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new ConsumeInfo[0];
          }
        }
      }
      return _emptyArray;
    }

    // required string orderNo = 1;
    public java.lang.String orderNo;

    // optional string roleId = 2;
    public java.lang.String roleId;

    // optional string cpOrderNo = 3;
    public java.lang.String cpOrderNo;

    // optional int32 appId = 4;
    public int appId;

    // optional string appName = 5;
    public java.lang.String appName;

    // optional string packName = 6;
    public java.lang.String packName;

    // optional int32 consumeNewCoin = 7;
    public int consumeNewCoin;

    // optional string productCode = 8;
    public java.lang.String productCode;

    // optional string productName = 9;
    public java.lang.String productName;

    // optional int32 productCount = 10;
    public int productCount;

    // optional string consumeTime = 11;
    public java.lang.String consumeTime;

    // optional int32 consumeStatus = 12;
    public int consumeStatus;

    public ConsumeInfo() {
      clear();
    }

    public ConsumeInfo clear() {
      orderNo = "";
      roleId = "";
      cpOrderNo = "";
      appId = 0;
      appName = "";
      packName = "";
      consumeNewCoin = 0;
      productCode = "";
      productName = "";
      productCount = 0;
      consumeTime = "";
      consumeStatus = 0;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeString(1, this.orderNo);
      if (!this.roleId.equals("")) {
        output.writeString(2, this.roleId);
      }
      if (!this.cpOrderNo.equals("")) {
        output.writeString(3, this.cpOrderNo);
      }
      if (this.appId != 0) {
        output.writeInt32(4, this.appId);
      }
      if (!this.appName.equals("")) {
        output.writeString(5, this.appName);
      }
      if (!this.packName.equals("")) {
        output.writeString(6, this.packName);
      }
      if (this.consumeNewCoin != 0) {
        output.writeInt32(7, this.consumeNewCoin);
      }
      if (!this.productCode.equals("")) {
        output.writeString(8, this.productCode);
      }
      if (!this.productName.equals("")) {
        output.writeString(9, this.productName);
      }
      if (this.productCount != 0) {
        output.writeInt32(10, this.productCount);
      }
      if (!this.consumeTime.equals("")) {
        output.writeString(11, this.consumeTime);
      }
      if (this.consumeStatus != 0) {
        output.writeInt32(12, this.consumeStatus);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(1, this.orderNo);
      if (!this.roleId.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(2, this.roleId);
      }
      if (!this.cpOrderNo.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.cpOrderNo);
      }
      if (this.appId != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(4, this.appId);
      }
      if (!this.appName.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(5, this.appName);
      }
      if (!this.packName.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(6, this.packName);
      }
      if (this.consumeNewCoin != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(7, this.consumeNewCoin);
      }
      if (!this.productCode.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(8, this.productCode);
      }
      if (!this.productName.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(9, this.productName);
      }
      if (this.productCount != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(10, this.productCount);
      }
      if (!this.consumeTime.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(11, this.consumeTime);
      }
      if (this.consumeStatus != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(12, this.consumeStatus);
      }
      return size;
    }

    @Override
    public ConsumeInfo mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.orderNo = input.readString();
            break;
          }
          case 18: {
            this.roleId = input.readString();
            break;
          }
          case 26: {
            this.cpOrderNo = input.readString();
            break;
          }
          case 32: {
            this.appId = input.readInt32();
            break;
          }
          case 42: {
            this.appName = input.readString();
            break;
          }
          case 50: {
            this.packName = input.readString();
            break;
          }
          case 56: {
            this.consumeNewCoin = input.readInt32();
            break;
          }
          case 66: {
            this.productCode = input.readString();
            break;
          }
          case 74: {
            this.productName = input.readString();
            break;
          }
          case 80: {
            this.productCount = input.readInt32();
            break;
          }
          case 90: {
            this.consumeTime = input.readString();
            break;
          }
          case 96: {
            this.consumeStatus = input.readInt32();
            break;
          }
        }
      }
    }

    public static ConsumeInfo parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new ConsumeInfo(), data);
    }

    public static ConsumeInfo parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new ConsumeInfo().mergeFrom(input);
    }
  }
}
