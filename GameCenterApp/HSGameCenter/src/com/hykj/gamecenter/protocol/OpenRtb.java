// Generated by the protocol buffer compiler.  DO NOT EDIT!

package com.hykj.gamecenter.protocol;

@SuppressWarnings("hiding")
public interface OpenRtb {

  // enum ContentCategory
  public static final int IAB1 = 1;
  public static final int IAB1_1 = 2;
  public static final int IAB1_2 = 3;
  public static final int IAB1_3 = 4;
  public static final int IAB1_4 = 5;
  public static final int IAB1_5 = 6;
  public static final int IAB1_6 = 7;
  public static final int IAB1_7 = 8;
  public static final int IAB2 = 9;
  public static final int IAB2_1 = 10;
  public static final int IAB2_2 = 11;
  public static final int IAB2_3 = 12;
  public static final int IAB2_4 = 13;
  public static final int IAB2_5 = 14;
  public static final int IAB2_6 = 15;
  public static final int IAB2_7 = 16;
  public static final int IAB2_8 = 17;
  public static final int IAB2_9 = 18;
  public static final int IAB2_10 = 19;
  public static final int IAB2_11 = 20;
  public static final int IAB2_12 = 21;
  public static final int IAB2_13 = 22;
  public static final int IAB2_14 = 23;
  public static final int IAB2_15 = 24;
  public static final int IAB2_16 = 25;
  public static final int IAB2_17 = 26;
  public static final int IAB2_18 = 27;
  public static final int IAB2_19 = 28;
  public static final int IAB2_20 = 29;
  public static final int IAB2_21 = 30;
  public static final int IAB2_22 = 31;
  public static final int IAB2_23 = 32;
  public static final int IAB3 = 33;
  public static final int IAB3_1 = 34;
  public static final int IAB3_2 = 35;
  public static final int IAB3_3 = 36;
  public static final int IAB3_4 = 37;
  public static final int IAB3_5 = 38;
  public static final int IAB3_6 = 39;
  public static final int IAB3_7 = 40;
  public static final int IAB3_8 = 41;
  public static final int IAB3_9 = 42;
  public static final int IAB3_10 = 43;
  public static final int IAB3_11 = 44;
  public static final int IAB3_12 = 45;
  public static final int IAB4 = 46;
  public static final int IAB4_1 = 47;
  public static final int IAB4_2 = 48;
  public static final int IAB4_3 = 49;
  public static final int IAB4_4 = 50;
  public static final int IAB4_5 = 51;
  public static final int IAB4_6 = 52;
  public static final int IAB4_7 = 53;
  public static final int IAB4_8 = 54;
  public static final int IAB4_9 = 55;
  public static final int IAB4_10 = 56;
  public static final int IAB4_11 = 57;
  public static final int IAB5 = 58;
  public static final int IAB5_1 = 59;
  public static final int IAB5_2 = 60;
  public static final int IAB5_3 = 61;
  public static final int IAB5_4 = 62;
  public static final int IAB5_5 = 63;
  public static final int IAB5_6 = 64;
  public static final int IAB5_7 = 65;
  public static final int IAB5_8 = 66;
  public static final int IAB5_9 = 67;
  public static final int IAB5_10 = 68;
  public static final int IAB5_11 = 69;
  public static final int IAB5_12 = 70;
  public static final int IAB5_13 = 71;
  public static final int IAB5_14 = 72;
  public static final int IAB5_15 = 73;
  public static final int IAB6 = 74;
  public static final int IAB6_1 = 75;
  public static final int IAB6_2 = 76;
  public static final int IAB6_3 = 77;
  public static final int IAB6_4 = 78;
  public static final int IAB6_5 = 79;
  public static final int IAB6_6 = 80;
  public static final int IAB6_7 = 81;
  public static final int IAB6_8 = 82;
  public static final int IAB6_9 = 83;
  public static final int IAB7 = 84;
  public static final int IAB7_1 = 85;
  public static final int IAB7_2 = 86;
  public static final int IAB7_3 = 87;
  public static final int IAB7_4 = 88;
  public static final int IAB7_5 = 89;
  public static final int IAB7_6 = 90;
  public static final int IAB7_7 = 91;
  public static final int IAB7_8 = 92;
  public static final int IAB7_9 = 93;
  public static final int IAB7_10 = 94;
  public static final int IAB7_11 = 95;
  public static final int IAB7_12 = 96;
  public static final int IAB7_13 = 97;
  public static final int IAB7_14 = 98;
  public static final int IAB7_15 = 99;
  public static final int IAB7_16 = 100;
  public static final int IAB7_17 = 101;
  public static final int IAB7_18 = 102;
  public static final int IAB7_19 = 103;
  public static final int IAB7_20 = 104;
  public static final int IAB7_21 = 105;
  public static final int IAB7_22 = 106;
  public static final int IAB7_23 = 107;
  public static final int IAB7_24 = 108;
  public static final int IAB7_25 = 109;
  public static final int IAB7_26 = 110;
  public static final int IAB7_27 = 111;
  public static final int IAB7_28 = 112;
  public static final int IAB7_29 = 113;
  public static final int IAB7_30 = 114;
  public static final int IAB7_31 = 115;
  public static final int IAB7_32 = 116;
  public static final int IAB7_33 = 117;
  public static final int IAB7_34 = 118;
  public static final int IAB7_35 = 119;
  public static final int IAB7_36 = 120;
  public static final int IAB7_37 = 121;
  public static final int IAB7_38 = 122;
  public static final int IAB7_39 = 123;
  public static final int IAB7_40 = 124;
  public static final int IAB7_41 = 125;
  public static final int IAB7_42 = 126;
  public static final int IAB7_43 = 127;
  public static final int IAB7_44 = 128;
  public static final int IAB7_45 = 129;
  public static final int IAB8 = 130;
  public static final int IAB8_1 = 131;
  public static final int IAB8_2 = 132;
  public static final int IAB8_3 = 133;
  public static final int IAB8_4 = 134;
  public static final int IAB8_5 = 135;
  public static final int IAB8_6 = 136;
  public static final int IAB8_7 = 137;
  public static final int IAB8_8 = 138;
  public static final int IAB8_9 = 139;
  public static final int IAB8_10 = 140;
  public static final int IAB8_11 = 141;
  public static final int IAB8_12 = 142;
  public static final int IAB8_13 = 143;
  public static final int IAB8_14 = 144;
  public static final int IAB8_15 = 145;
  public static final int IAB8_16 = 146;
  public static final int IAB8_17 = 147;
  public static final int IAB8_18 = 148;
  public static final int IAB9 = 149;
  public static final int IAB9_1 = 150;
  public static final int IAB9_2 = 151;
  public static final int IAB9_3 = 152;
  public static final int IAB9_4 = 153;
  public static final int IAB9_5 = 154;
  public static final int IAB9_6 = 155;
  public static final int IAB9_7 = 156;
  public static final int IAB9_8 = 157;
  public static final int IAB9_9 = 158;
  public static final int IAB9_10 = 159;
  public static final int IAB9_11 = 160;
  public static final int IAB9_12 = 161;
  public static final int IAB9_13 = 162;
  public static final int IAB9_14 = 163;
  public static final int IAB9_15 = 164;
  public static final int IAB9_16 = 165;
  public static final int IAB9_17 = 166;
  public static final int IAB9_18 = 167;
  public static final int IAB9_19 = 168;
  public static final int IAB9_20 = 169;
  public static final int IAB9_21 = 170;
  public static final int IAB9_22 = 171;
  public static final int IAB9_23 = 172;
  public static final int IAB9_24 = 173;
  public static final int IAB9_25 = 174;
  public static final int IAB9_26 = 175;
  public static final int IAB9_27 = 176;
  public static final int IAB9_28 = 177;
  public static final int IAB9_29 = 178;
  public static final int IAB9_30 = 179;
  public static final int IAB9_31 = 180;
  public static final int IAB10 = 181;
  public static final int IAB10_1 = 182;
  public static final int IAB10_2 = 183;
  public static final int IAB10_3 = 184;
  public static final int IAB10_4 = 185;
  public static final int IAB10_5 = 186;
  public static final int IAB10_6 = 187;
  public static final int IAB10_7 = 188;
  public static final int IAB10_8 = 189;
  public static final int IAB10_9 = 190;
  public static final int IAB11 = 191;
  public static final int IAB11_1 = 192;
  public static final int IAB11_2 = 193;
  public static final int IAB11_3 = 194;
  public static final int IAB11_4 = 195;
  public static final int IAB11_5 = 196;
  public static final int IAB12 = 197;
  public static final int IAB12_1 = 198;
  public static final int IAB12_2 = 199;
  public static final int IAB12_3 = 200;
  public static final int IAB13 = 201;
  public static final int IAB13_1 = 202;
  public static final int IAB13_2 = 203;
  public static final int IAB13_3 = 204;
  public static final int IAB13_4 = 205;
  public static final int IAB13_5 = 206;
  public static final int IAB13_6 = 207;
  public static final int IAB13_7 = 208;
  public static final int IAB13_8 = 209;
  public static final int IAB13_9 = 210;
  public static final int IAB13_10 = 211;
  public static final int IAB13_11 = 212;
  public static final int IAB13_12 = 213;
  public static final int IAB14 = 214;
  public static final int IAB14_1 = 215;
  public static final int IAB14_2 = 216;
  public static final int IAB14_3 = 217;
  public static final int IAB14_4 = 218;
  public static final int IAB14_5 = 219;
  public static final int IAB14_6 = 220;
  public static final int IAB14_7 = 221;
  public static final int IAB14_8 = 222;
  public static final int IAB15 = 223;
  public static final int IAB15_1 = 224;
  public static final int IAB15_2 = 225;
  public static final int IAB15_3 = 226;
  public static final int IAB15_4 = 227;
  public static final int IAB15_5 = 228;
  public static final int IAB15_6 = 229;
  public static final int IAB15_7 = 230;
  public static final int IAB15_8 = 231;
  public static final int IAB15_9 = 232;
  public static final int IAB15_10 = 233;
  public static final int IAB16 = 234;
  public static final int IAB16_1 = 235;
  public static final int IAB16_2 = 236;
  public static final int IAB16_3 = 237;
  public static final int IAB16_4 = 238;
  public static final int IAB16_5 = 239;
  public static final int IAB16_6 = 240;
  public static final int IAB16_7 = 241;
  public static final int IAB17 = 242;
  public static final int IAB17_1 = 243;
  public static final int IAB17_2 = 244;
  public static final int IAB17_3 = 245;
  public static final int IAB17_4 = 246;
  public static final int IAB17_5 = 247;
  public static final int IAB17_6 = 248;
  public static final int IAB17_7 = 249;
  public static final int IAB17_8 = 250;
  public static final int IAB17_9 = 251;
  public static final int IAB17_10 = 252;
  public static final int IAB17_11 = 253;
  public static final int IAB17_12 = 254;
  public static final int IAB17_13 = 255;
  public static final int IAB17_14 = 256;
  public static final int IAB17_15 = 257;
  public static final int IAB17_16 = 258;
  public static final int IAB17_17 = 259;
  public static final int IAB17_18 = 260;
  public static final int IAB17_19 = 261;
  public static final int IAB17_20 = 262;
  public static final int IAB17_21 = 263;
  public static final int IAB17_22 = 264;
  public static final int IAB17_23 = 265;
  public static final int IAB17_24 = 266;
  public static final int IAB17_25 = 267;
  public static final int IAB17_26 = 268;
  public static final int IAB17_27 = 269;
  public static final int IAB17_28 = 270;
  public static final int IAB17_29 = 271;
  public static final int IAB17_30 = 272;
  public static final int IAB17_31 = 273;
  public static final int IAB17_32 = 274;
  public static final int IAB17_33 = 275;
  public static final int IAB17_34 = 276;
  public static final int IAB17_35 = 277;
  public static final int IAB17_36 = 278;
  public static final int IAB17_37 = 279;
  public static final int IAB17_38 = 280;
  public static final int IAB17_39 = 281;
  public static final int IAB17_40 = 282;
  public static final int IAB17_41 = 283;
  public static final int IAB17_42 = 284;
  public static final int IAB17_43 = 285;
  public static final int IAB17_44 = 286;
  public static final int IAB18 = 287;
  public static final int IAB18_1 = 288;
  public static final int IAB18_2 = 289;
  public static final int IAB18_3 = 290;
  public static final int IAB18_4 = 291;
  public static final int IAB18_5 = 292;
  public static final int IAB18_6 = 293;
  public static final int IAB19 = 294;
  public static final int IAB19_1 = 295;
  public static final int IAB19_2 = 296;
  public static final int IAB19_3 = 297;
  public static final int IAB19_4 = 298;
  public static final int IAB19_5 = 299;
  public static final int IAB19_6 = 300;
  public static final int IAB19_7 = 301;
  public static final int IAB19_8 = 302;
  public static final int IAB19_9 = 303;
  public static final int IAB19_10 = 304;
  public static final int IAB19_11 = 305;
  public static final int IAB19_12 = 306;
  public static final int IAB19_13 = 307;
  public static final int IAB19_14 = 308;
  public static final int IAB19_15 = 309;
  public static final int IAB19_16 = 310;
  public static final int IAB19_17 = 311;
  public static final int IAB19_18 = 312;
  public static final int IAB19_19 = 313;
  public static final int IAB19_20 = 314;
  public static final int IAB19_21 = 315;
  public static final int IAB19_22 = 316;
  public static final int IAB19_23 = 317;
  public static final int IAB19_24 = 318;
  public static final int IAB19_25 = 319;
  public static final int IAB19_26 = 320;
  public static final int IAB19_27 = 321;
  public static final int IAB19_28 = 322;
  public static final int IAB19_29 = 323;
  public static final int IAB19_30 = 324;
  public static final int IAB19_31 = 325;
  public static final int IAB19_32 = 326;
  public static final int IAB19_33 = 327;
  public static final int IAB19_34 = 328;
  public static final int IAB19_35 = 329;
  public static final int IAB19_36 = 330;
  public static final int IAB20 = 331;
  public static final int IAB20_1 = 332;
  public static final int IAB20_2 = 333;
  public static final int IAB20_3 = 334;
  public static final int IAB20_4 = 335;
  public static final int IAB20_5 = 336;
  public static final int IAB20_6 = 337;
  public static final int IAB20_7 = 338;
  public static final int IAB20_8 = 339;
  public static final int IAB20_9 = 340;
  public static final int IAB20_10 = 341;
  public static final int IAB20_11 = 342;
  public static final int IAB20_12 = 343;
  public static final int IAB20_13 = 344;
  public static final int IAB20_14 = 345;
  public static final int IAB20_15 = 346;
  public static final int IAB20_16 = 347;
  public static final int IAB20_17 = 348;
  public static final int IAB20_18 = 349;
  public static final int IAB20_19 = 350;
  public static final int IAB20_20 = 351;
  public static final int IAB20_21 = 352;
  public static final int IAB20_22 = 353;
  public static final int IAB20_23 = 354;
  public static final int IAB20_24 = 355;
  public static final int IAB20_25 = 356;
  public static final int IAB20_26 = 357;
  public static final int IAB20_27 = 358;
  public static final int IAB21 = 359;
  public static final int IAB21_1 = 360;
  public static final int IAB21_2 = 361;
  public static final int IAB21_3 = 362;
  public static final int IAB22 = 363;
  public static final int IAB22_1 = 364;
  public static final int IAB22_2 = 365;
  public static final int IAB22_3 = 366;
  public static final int IAB22_4 = 367;
  public static final int IAB23 = 368;
  public static final int IAB23_1 = 369;
  public static final int IAB23_2 = 370;
  public static final int IAB23_3 = 371;
  public static final int IAB23_4 = 372;
  public static final int IAB23_5 = 373;
  public static final int IAB23_6 = 374;
  public static final int IAB23_7 = 375;
  public static final int IAB23_8 = 376;
  public static final int IAB23_9 = 377;
  public static final int IAB23_10 = 378;
  public static final int IAB24 = 379;
  public static final int IAB25 = 380;
  public static final int IAB25_1 = 381;
  public static final int IAB25_2 = 382;
  public static final int IAB25_3 = 383;
  public static final int IAB25_4 = 384;
  public static final int IAB25_5 = 385;
  public static final int IAB25_6 = 386;
  public static final int IAB25_7 = 387;
  public static final int IAB26 = 388;
  public static final int IAB26_1 = 389;
  public static final int IAB26_2 = 390;
  public static final int IAB26_3 = 391;
  public static final int IAB26_4 = 392;

  // enum CreativeAttribute
  public static final int AUDIO_AUTO_PLAY = 1;
  public static final int AUDIO_USER_INITIATED = 2;
  public static final int EXPANDABLE_AUTOMATIC = 3;
  public static final int EXPANDABLE_CLICK_INITIATED = 4;
  public static final int EXPANDABLE_ROLLOVER_INITIATED = 5;
  public static final int VIDEO_IN_BANNER_AUTO_PLAY = 6;
  public static final int VIDEO_IN_BANNER_USER_INITIATED = 7;
  public static final int POP = 8;
  public static final int PROVOCATIVE_OR_SUGGESTIVE = 9;
  public static final int ANNOYING = 10;
  public static final int SURVEYS = 11;
  public static final int TEXT_ONLY = 12;
  public static final int USER_INTERACTIVE = 13;
  public static final int WINDOWS_DIALOG_OR_ALERT_STYLE = 14;
  public static final int HAS_AUDIO_ON_OFF_BUTTON = 15;
  public static final int AD_CAN_BE_SKIPPED = 16;

  public static final class BidRequest extends
      com.google.protobuf.nano.ExtendableMessageNano<BidRequest> {

    // enum AuctionType
    public static final int FIRST_PRICE = 1;
    public static final int SECOND_PRICE = 2;
    public static final int FIXED_PRICE = 3;

    public static final class Imp extends
        com.google.protobuf.nano.ExtendableMessageNano<Imp> {

      // enum AdPosition
      public static final int UNKNOWN = 0;
      public static final int ABOVE_THE_FOLD = 1;
      public static final int DEPRECATED_LIKELY_BELOW_THE_FOLD = 2;
      public static final int BELOW_THE_FOLD = 3;
      public static final int HEADER = 4;
      public static final int FOOTER = 5;
      public static final int SIDEBAR = 6;
      public static final int AD_POSITION_FULLSCREEN = 7;

      // enum APIFramework
      public static final int VPAID_1 = 1;
      public static final int VPAID_2 = 2;
      public static final int MRAID_1 = 3;
      public static final int ORMMA = 4;
      public static final int MRAID_2 = 5;

      public static final class Banner extends
          com.google.protobuf.nano.ExtendableMessageNano<Banner> {

        // enum BannerAdType
        public static final int XHTML_TEXT_AD = 1;
        public static final int XHTML_BANNER_AD = 2;
        public static final int JAVASCRIPT_AD = 3;
        public static final int IFRAME = 4;

        // enum ExpandableDirection
        public static final int LEFT = 1;
        public static final int RIGHT = 2;
        public static final int UP = 3;
        public static final int DOWN = 4;
        public static final int EXPANDABLE_FULLSCREEN = 5;

        private static volatile Banner[] _emptyArray;
        public static Banner[] emptyArray() {
          // Lazily initializes the empty array
          if (_emptyArray == null) {
            synchronized (
                com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
              if (_emptyArray == null) {
                _emptyArray = new Banner[0];
              }
            }
          }
          return _emptyArray;
        }

        // optional int32 w = 1;
        public int w;

        // optional int32 h = 2;
        public int h;

        // optional int32 wmax = 11;
        public int wmax;

        // optional int32 hmax = 12;
        public int hmax;

        // optional int32 wmin = 13;
        public int wmin;

        // optional int32 hmin = 14;
        public int hmin;

        // optional string id = 3;
        public String id;

        // optional .com.hykj.gamecenter.protocol.BidRequest.Imp.AdPosition pos = 4;
        public int pos;

        // repeated .com.hykj.gamecenter.protocol.BidRequest.Imp.Banner.BannerAdType btype = 5 [packed = true];
        public int[] btype;

        // repeated .com.hykj.gamecenter.protocol.CreativeAttribute battr = 6 [packed = true];
        public int[] battr;

        // repeated string mimes = 7;
        public String[] mimes;

        // optional bool topframe = 8;
        public boolean topframe;

        // repeated .com.hykj.gamecenter.protocol.BidRequest.Imp.Banner.ExpandableDirection expdir = 9 [packed = true];
        public int[] expdir;

        // repeated .com.hykj.gamecenter.protocol.BidRequest.Imp.APIFramework api = 10 [packed = true];
        public int[] api;

        public Banner() {
          clear();
        }

        public Banner clear() {
          w = 0;
          h = 0;
          wmax = 0;
          hmax = 0;
          wmin = 0;
          hmin = 0;
          id = "";
          pos = Imp.UNKNOWN;
          btype = com.google.protobuf.nano.WireFormatNano.EMPTY_INT_ARRAY;
          battr = com.google.protobuf.nano.WireFormatNano.EMPTY_INT_ARRAY;
          mimes = com.google.protobuf.nano.WireFormatNano.EMPTY_STRING_ARRAY;
          topframe = false;
          expdir = com.google.protobuf.nano.WireFormatNano.EMPTY_INT_ARRAY;
          api = com.google.protobuf.nano.WireFormatNano.EMPTY_INT_ARRAY;
          unknownFieldData = null;
          cachedSize = -1;
          return this;
        }

        @Override
        public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
            throws java.io.IOException {
          if (this.w != 0) {
            output.writeInt32(1, this.w);
          }
          if (this.h != 0) {
            output.writeInt32(2, this.h);
          }
          if (!this.id.equals("")) {
            output.writeString(3, this.id);
          }
          if (this.pos != Imp.UNKNOWN) {
            output.writeInt32(4, this.pos);
          }
          if (this.btype != null && this.btype.length > 0) {
            int dataSize = 0;
            for (int i = 0; i < this.btype.length; i++) {
              int element = this.btype[i];
              dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                  .computeInt32SizeNoTag(element);
            }
            output.writeRawVarint32(42);
            output.writeRawVarint32(dataSize);
            for (int i = 0; i < this.btype.length; i++) {
              output.writeRawVarint32(this.btype[i]);
            }
          }
          if (this.battr != null && this.battr.length > 0) {
            int dataSize = 0;
            for (int i = 0; i < this.battr.length; i++) {
              int element = this.battr[i];
              dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                  .computeInt32SizeNoTag(element);
            }
            output.writeRawVarint32(50);
            output.writeRawVarint32(dataSize);
            for (int i = 0; i < this.battr.length; i++) {
              output.writeRawVarint32(this.battr[i]);
            }
          }
          if (this.mimes != null && this.mimes.length > 0) {
            for (int i = 0; i < this.mimes.length; i++) {
              String element = this.mimes[i];
              if (element != null) {
                output.writeString(7, element);
              }
            }
          }
          if (this.topframe != false) {
            output.writeBool(8, this.topframe);
          }
          if (this.expdir != null && this.expdir.length > 0) {
            int dataSize = 0;
            for (int i = 0; i < this.expdir.length; i++) {
              int element = this.expdir[i];
              dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                  .computeInt32SizeNoTag(element);
            }
            output.writeRawVarint32(74);
            output.writeRawVarint32(dataSize);
            for (int i = 0; i < this.expdir.length; i++) {
              output.writeRawVarint32(this.expdir[i]);
            }
          }
          if (this.api != null && this.api.length > 0) {
            int dataSize = 0;
            for (int i = 0; i < this.api.length; i++) {
              int element = this.api[i];
              dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                  .computeInt32SizeNoTag(element);
            }
            output.writeRawVarint32(82);
            output.writeRawVarint32(dataSize);
            for (int i = 0; i < this.api.length; i++) {
              output.writeRawVarint32(this.api[i]);
            }
          }
          if (this.wmax != 0) {
            output.writeInt32(11, this.wmax);
          }
          if (this.hmax != 0) {
            output.writeInt32(12, this.hmax);
          }
          if (this.wmin != 0) {
            output.writeInt32(13, this.wmin);
          }
          if (this.hmin != 0) {
            output.writeInt32(14, this.hmin);
          }
          super.writeTo(output);
        }

        @Override
        protected int computeSerializedSize() {
          int size = super.computeSerializedSize();
          if (this.w != 0) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeInt32Size(1, this.w);
          }
          if (this.h != 0) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeInt32Size(2, this.h);
          }
          if (!this.id.equals("")) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeStringSize(3, this.id);
          }
          if (this.pos != Imp.UNKNOWN) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeInt32Size(4, this.pos);
          }
          if (this.btype != null && this.btype.length > 0) {
            int dataSize = 0;
            for (int i = 0; i < this.btype.length; i++) {
              int element = this.btype[i];
              dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                  .computeInt32SizeNoTag(element);
            }
            size += dataSize;
            size += 1;
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeRawVarint32Size(dataSize);
          }
          if (this.battr != null && this.battr.length > 0) {
            int dataSize = 0;
            for (int i = 0; i < this.battr.length; i++) {
              int element = this.battr[i];
              dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                  .computeInt32SizeNoTag(element);
            }
            size += dataSize;
            size += 1;
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeRawVarint32Size(dataSize);
          }
          if (this.mimes != null && this.mimes.length > 0) {
            int dataCount = 0;
            int dataSize = 0;
            for (int i = 0; i < this.mimes.length; i++) {
              String element = this.mimes[i];
              if (element != null) {
                dataCount++;
                dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                    .computeStringSizeNoTag(element);
              }
            }
            size += dataSize;
            size += 1 * dataCount;
          }
          if (this.topframe != false) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeBoolSize(8, this.topframe);
          }
          if (this.expdir != null && this.expdir.length > 0) {
            int dataSize = 0;
            for (int i = 0; i < this.expdir.length; i++) {
              int element = this.expdir[i];
              dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                  .computeInt32SizeNoTag(element);
            }
            size += dataSize;
            size += 1;
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeRawVarint32Size(dataSize);
          }
          if (this.api != null && this.api.length > 0) {
            int dataSize = 0;
            for (int i = 0; i < this.api.length; i++) {
              int element = this.api[i];
              dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                  .computeInt32SizeNoTag(element);
            }
            size += dataSize;
            size += 1;
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeRawVarint32Size(dataSize);
          }
          if (this.wmax != 0) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeInt32Size(11, this.wmax);
          }
          if (this.hmax != 0) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeInt32Size(12, this.hmax);
          }
          if (this.wmin != 0) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeInt32Size(13, this.wmin);
          }
          if (this.hmin != 0) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeInt32Size(14, this.hmin);
          }
          return size;
        }

        @Override
        public Banner mergeFrom(
                com.google.protobuf.nano.CodedInputByteBufferNano input)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                return this;
              default: {
                if (!storeUnknownField(input, tag)) {
                  return this;
                }
                break;
              }
              case 8: {
                this.w = input.readInt32();
                break;
              }
              case 16: {
                this.h = input.readInt32();
                break;
              }
              case 26: {
                this.id = input.readString();
                break;
              }
              case 32: {
                int value = input.readInt32();
                switch (value) {
                  case Imp.UNKNOWN:
                  case Imp.ABOVE_THE_FOLD:
                  case Imp.DEPRECATED_LIKELY_BELOW_THE_FOLD:
                  case Imp.BELOW_THE_FOLD:
                  case Imp.HEADER:
                  case Imp.FOOTER:
                  case Imp.SIDEBAR:
                  case Imp.AD_POSITION_FULLSCREEN:
                    this.pos = value;
                    break;
                }
                break;
              }
              case 40: {
                int length = com.google.protobuf.nano.WireFormatNano
                    .getRepeatedFieldArrayLength(input, 40);
                int[] validValues = new int[length];
                int validCount = 0;
                for (int i = 0; i < length; i++) {
                  if (i != 0) { // tag for first value already consumed.
                    input.readTag();
                  }
                  int value = input.readInt32();
                  switch (value) {
                    case Banner.XHTML_TEXT_AD:
                    case Banner.XHTML_BANNER_AD:
                    case Banner.JAVASCRIPT_AD:
                    case Banner.IFRAME:
                      validValues[validCount++] = value;
                      break;
                  }
                }
                if (validCount != 0) {
                  int i = this.btype == null ? 0 : this.btype.length;
                  if (i == 0 && validCount == validValues.length) {
                    this.btype = validValues;
                  } else {
                    int[] newArray = new int[i + validCount];
                    if (i != 0) {
                      System.arraycopy(this.btype, 0, newArray, 0, i);
                    }
                    System.arraycopy(validValues, 0, newArray, i, validCount);
                    this.btype = newArray;
                  }
                }
                break;
              }
              case 42: {
                int bytes = input.readRawVarint32();
                int limit = input.pushLimit(bytes);
                // First pass to compute array length.
                int arrayLength = 0;
                int startPos = input.getPosition();
                while (input.getBytesUntilLimit() > 0) {
                  switch (input.readInt32()) {
                    case Banner.XHTML_TEXT_AD:
                    case Banner.XHTML_BANNER_AD:
                    case Banner.JAVASCRIPT_AD:
                    case Banner.IFRAME:
                      arrayLength++;
                      break;
                  }
                }
                if (arrayLength != 0) {
                  input.rewindToPosition(startPos);
                  int i = this.btype == null ? 0 : this.btype.length;
                  int[] newArray = new int[i + arrayLength];
                  if (i != 0) {
                    System.arraycopy(this.btype, 0, newArray, 0, i);
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    int value = input.readInt32();
                    switch (value) {
                      case Banner.XHTML_TEXT_AD:
                      case Banner.XHTML_BANNER_AD:
                      case Banner.JAVASCRIPT_AD:
                      case Banner.IFRAME:
                        newArray[i++] = value;
                        break;
                    }
                  }
                  this.btype = newArray;
                }
                input.popLimit(limit);
                break;
              }
              case 48: {
                int length = com.google.protobuf.nano.WireFormatNano
                    .getRepeatedFieldArrayLength(input, 48);
                int[] validValues = new int[length];
                int validCount = 0;
                for (int i = 0; i < length; i++) {
                  if (i != 0) { // tag for first value already consumed.
                    input.readTag();
                  }
                  int value = input.readInt32();
                  switch (value) {
                    case OpenRtb.AUDIO_AUTO_PLAY:
                    case OpenRtb.AUDIO_USER_INITIATED:
                    case OpenRtb.EXPANDABLE_AUTOMATIC:
                    case OpenRtb.EXPANDABLE_CLICK_INITIATED:
                    case OpenRtb.EXPANDABLE_ROLLOVER_INITIATED:
                    case OpenRtb.VIDEO_IN_BANNER_AUTO_PLAY:
                    case OpenRtb.VIDEO_IN_BANNER_USER_INITIATED:
                    case OpenRtb.POP:
                    case OpenRtb.PROVOCATIVE_OR_SUGGESTIVE:
                    case OpenRtb.ANNOYING:
                    case OpenRtb.SURVEYS:
                    case OpenRtb.TEXT_ONLY:
                    case OpenRtb.USER_INTERACTIVE:
                    case OpenRtb.WINDOWS_DIALOG_OR_ALERT_STYLE:
                    case OpenRtb.HAS_AUDIO_ON_OFF_BUTTON:
                    case OpenRtb.AD_CAN_BE_SKIPPED:
                      validValues[validCount++] = value;
                      break;
                  }
                }
                if (validCount != 0) {
                  int i = this.battr == null ? 0 : this.battr.length;
                  if (i == 0 && validCount == validValues.length) {
                    this.battr = validValues;
                  } else {
                    int[] newArray = new int[i + validCount];
                    if (i != 0) {
                      System.arraycopy(this.battr, 0, newArray, 0, i);
                    }
                    System.arraycopy(validValues, 0, newArray, i, validCount);
                    this.battr = newArray;
                  }
                }
                break;
              }
              case 50: {
                int bytes = input.readRawVarint32();
                int limit = input.pushLimit(bytes);
                // First pass to compute array length.
                int arrayLength = 0;
                int startPos = input.getPosition();
                while (input.getBytesUntilLimit() > 0) {
                  switch (input.readInt32()) {
                    case OpenRtb.AUDIO_AUTO_PLAY:
                    case OpenRtb.AUDIO_USER_INITIATED:
                    case OpenRtb.EXPANDABLE_AUTOMATIC:
                    case OpenRtb.EXPANDABLE_CLICK_INITIATED:
                    case OpenRtb.EXPANDABLE_ROLLOVER_INITIATED:
                    case OpenRtb.VIDEO_IN_BANNER_AUTO_PLAY:
                    case OpenRtb.VIDEO_IN_BANNER_USER_INITIATED:
                    case OpenRtb.POP:
                    case OpenRtb.PROVOCATIVE_OR_SUGGESTIVE:
                    case OpenRtb.ANNOYING:
                    case OpenRtb.SURVEYS:
                    case OpenRtb.TEXT_ONLY:
                    case OpenRtb.USER_INTERACTIVE:
                    case OpenRtb.WINDOWS_DIALOG_OR_ALERT_STYLE:
                    case OpenRtb.HAS_AUDIO_ON_OFF_BUTTON:
                    case OpenRtb.AD_CAN_BE_SKIPPED:
                      arrayLength++;
                      break;
                  }
                }
                if (arrayLength != 0) {
                  input.rewindToPosition(startPos);
                  int i = this.battr == null ? 0 : this.battr.length;
                  int[] newArray = new int[i + arrayLength];
                  if (i != 0) {
                    System.arraycopy(this.battr, 0, newArray, 0, i);
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    int value = input.readInt32();
                    switch (value) {
                      case OpenRtb.AUDIO_AUTO_PLAY:
                      case OpenRtb.AUDIO_USER_INITIATED:
                      case OpenRtb.EXPANDABLE_AUTOMATIC:
                      case OpenRtb.EXPANDABLE_CLICK_INITIATED:
                      case OpenRtb.EXPANDABLE_ROLLOVER_INITIATED:
                      case OpenRtb.VIDEO_IN_BANNER_AUTO_PLAY:
                      case OpenRtb.VIDEO_IN_BANNER_USER_INITIATED:
                      case OpenRtb.POP:
                      case OpenRtb.PROVOCATIVE_OR_SUGGESTIVE:
                      case OpenRtb.ANNOYING:
                      case OpenRtb.SURVEYS:
                      case OpenRtb.TEXT_ONLY:
                      case OpenRtb.USER_INTERACTIVE:
                      case OpenRtb.WINDOWS_DIALOG_OR_ALERT_STYLE:
                      case OpenRtb.HAS_AUDIO_ON_OFF_BUTTON:
                      case OpenRtb.AD_CAN_BE_SKIPPED:
                        newArray[i++] = value;
                        break;
                    }
                  }
                  this.battr = newArray;
                }
                input.popLimit(limit);
                break;
              }
              case 58: {
                int arrayLength = com.google.protobuf.nano.WireFormatNano
                    .getRepeatedFieldArrayLength(input, 58);
                int i = this.mimes == null ? 0 : this.mimes.length;
                String[] newArray = new String[i + arrayLength];
                if (i != 0) {
                  System.arraycopy(this.mimes, 0, newArray, 0, i);
                }
                for (; i < newArray.length - 1; i++) {
                  newArray[i] = input.readString();
                  input.readTag();
                }
                // Last one without readTag.
                newArray[i] = input.readString();
                this.mimes = newArray;
                break;
              }
              case 64: {
                this.topframe = input.readBool();
                break;
              }
              case 72: {
                int length = com.google.protobuf.nano.WireFormatNano
                    .getRepeatedFieldArrayLength(input, 72);
                int[] validValues = new int[length];
                int validCount = 0;
                for (int i = 0; i < length; i++) {
                  if (i != 0) { // tag for first value already consumed.
                    input.readTag();
                  }
                  int value = input.readInt32();
                  switch (value) {
                    case Banner.LEFT:
                    case Banner.RIGHT:
                    case Banner.UP:
                    case Banner.DOWN:
                    case Banner.EXPANDABLE_FULLSCREEN:
                      validValues[validCount++] = value;
                      break;
                  }
                }
                if (validCount != 0) {
                  int i = this.expdir == null ? 0 : this.expdir.length;
                  if (i == 0 && validCount == validValues.length) {
                    this.expdir = validValues;
                  } else {
                    int[] newArray = new int[i + validCount];
                    if (i != 0) {
                      System.arraycopy(this.expdir, 0, newArray, 0, i);
                    }
                    System.arraycopy(validValues, 0, newArray, i, validCount);
                    this.expdir = newArray;
                  }
                }
                break;
              }
              case 74: {
                int bytes = input.readRawVarint32();
                int limit = input.pushLimit(bytes);
                // First pass to compute array length.
                int arrayLength = 0;
                int startPos = input.getPosition();
                while (input.getBytesUntilLimit() > 0) {
                  switch (input.readInt32()) {
                    case Banner.LEFT:
                    case Banner.RIGHT:
                    case Banner.UP:
                    case Banner.DOWN:
                    case Banner.EXPANDABLE_FULLSCREEN:
                      arrayLength++;
                      break;
                  }
                }
                if (arrayLength != 0) {
                  input.rewindToPosition(startPos);
                  int i = this.expdir == null ? 0 : this.expdir.length;
                  int[] newArray = new int[i + arrayLength];
                  if (i != 0) {
                    System.arraycopy(this.expdir, 0, newArray, 0, i);
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    int value = input.readInt32();
                    switch (value) {
                      case Banner.LEFT:
                      case Banner.RIGHT:
                      case Banner.UP:
                      case Banner.DOWN:
                      case Banner.EXPANDABLE_FULLSCREEN:
                        newArray[i++] = value;
                        break;
                    }
                  }
                  this.expdir = newArray;
                }
                input.popLimit(limit);
                break;
              }
              case 80: {
                int length = com.google.protobuf.nano.WireFormatNano
                    .getRepeatedFieldArrayLength(input, 80);
                int[] validValues = new int[length];
                int validCount = 0;
                for (int i = 0; i < length; i++) {
                  if (i != 0) { // tag for first value already consumed.
                    input.readTag();
                  }
                  int value = input.readInt32();
                  switch (value) {
                    case Imp.VPAID_1:
                    case Imp.VPAID_2:
                    case Imp.MRAID_1:
                    case Imp.ORMMA:
                    case Imp.MRAID_2:
                      validValues[validCount++] = value;
                      break;
                  }
                }
                if (validCount != 0) {
                  int i = this.api == null ? 0 : this.api.length;
                  if (i == 0 && validCount == validValues.length) {
                    this.api = validValues;
                  } else {
                    int[] newArray = new int[i + validCount];
                    if (i != 0) {
                      System.arraycopy(this.api, 0, newArray, 0, i);
                    }
                    System.arraycopy(validValues, 0, newArray, i, validCount);
                    this.api = newArray;
                  }
                }
                break;
              }
              case 82: {
                int bytes = input.readRawVarint32();
                int limit = input.pushLimit(bytes);
                // First pass to compute array length.
                int arrayLength = 0;
                int startPos = input.getPosition();
                while (input.getBytesUntilLimit() > 0) {
                  switch (input.readInt32()) {
                    case Imp.VPAID_1:
                    case Imp.VPAID_2:
                    case Imp.MRAID_1:
                    case Imp.ORMMA:
                    case Imp.MRAID_2:
                      arrayLength++;
                      break;
                  }
                }
                if (arrayLength != 0) {
                  input.rewindToPosition(startPos);
                  int i = this.api == null ? 0 : this.api.length;
                  int[] newArray = new int[i + arrayLength];
                  if (i != 0) {
                    System.arraycopy(this.api, 0, newArray, 0, i);
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    int value = input.readInt32();
                    switch (value) {
                      case Imp.VPAID_1:
                      case Imp.VPAID_2:
                      case Imp.MRAID_1:
                      case Imp.ORMMA:
                      case Imp.MRAID_2:
                        newArray[i++] = value;
                        break;
                    }
                  }
                  this.api = newArray;
                }
                input.popLimit(limit);
                break;
              }
              case 88: {
                this.wmax = input.readInt32();
                break;
              }
              case 96: {
                this.hmax = input.readInt32();
                break;
              }
              case 104: {
                this.wmin = input.readInt32();
                break;
              }
              case 112: {
                this.hmin = input.readInt32();
                break;
              }
            }
          }
        }

        public static Banner parseFrom(byte[] data)
            throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
          return com.google.protobuf.nano.MessageNano.mergeFrom(new Banner(), data);
        }

        public static Banner parseFrom(
                com.google.protobuf.nano.CodedInputByteBufferNano input)
            throws java.io.IOException {
          return new Banner().mergeFrom(input);
        }
      }

      public static final class Video extends
          com.google.protobuf.nano.ExtendableMessageNano<Video> {

        // enum VideoLinearity
        public static final int LINEAR = 1;
        public static final int NON_LINEAR = 2;

        // enum VideoBidResponseProtocol
        public static final int VAST_1_0 = 1;
        public static final int VAST_2_0 = 2;
        public static final int VAST_3_0 = 3;
        public static final int VAST_1_0_WRAPPER = 4;
        public static final int VAST_2_0_WRAPPER = 5;
        public static final int VAST_3_0_WRAPPER = 6;

        // enum VideoPlaybackMethod
        public static final int AUTO_PLAY_SOUND_ON = 1;
        public static final int AUTO_PLAY_SOUND_OFF = 2;
        public static final int CLICK_TO_PLAY = 3;
        public static final int MOUSE_OVER = 4;

        // enum VideoStartDelay
        public static final int PRE_ROLL = 0;
        public static final int GENERIC_MID_ROLL = -1;
        public static final int GENERIC_POST_ROLL = -2;

        // enum VASTCompanionType
        public static final int STATIC = 1;
        public static final int HTML = 2;
        public static final int COMPANION_IFRAME = 3;

        // enum ContentDeliveryMethod
        public static final int STREAMING = 1;
        public static final int PROGRESSIVE = 2;

        public static final class CompanionAd extends
            com.google.protobuf.nano.ExtendableMessageNano<CompanionAd> {

          private static volatile CompanionAd[] _emptyArray;
          public static CompanionAd[] emptyArray() {
            // Lazily initializes the empty array
            if (_emptyArray == null) {
              synchronized (
                  com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
                if (_emptyArray == null) {
                  _emptyArray = new CompanionAd[0];
                }
              }
            }
            return _emptyArray;
          }

          // repeated .com.hykj.gamecenter.protocol.BidRequest.Imp.Banner banner = 1;
          public Banner[] banner;

          public CompanionAd() {
            clear();
          }

          public CompanionAd clear() {
            banner = Banner.emptyArray();
            unknownFieldData = null;
            cachedSize = -1;
            return this;
          }

          @Override
          public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
              throws java.io.IOException {
            if (this.banner != null && this.banner.length > 0) {
              for (int i = 0; i < this.banner.length; i++) {
                Banner element = this.banner[i];
                if (element != null) {
                  output.writeMessage(1, element);
                }
              }
            }
            super.writeTo(output);
          }

          @Override
          protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            if (this.banner != null && this.banner.length > 0) {
              for (int i = 0; i < this.banner.length; i++) {
                Banner element = this.banner[i];
                if (element != null) {
                  size += com.google.protobuf.nano.CodedOutputByteBufferNano
                    .computeMessageSize(1, element);
                }
              }
            }
            return size;
          }

          @Override
          public CompanionAd mergeFrom(
                  com.google.protobuf.nano.CodedInputByteBufferNano input)
              throws java.io.IOException {
            while (true) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  return this;
                default: {
                  if (!storeUnknownField(input, tag)) {
                    return this;
                  }
                  break;
                }
                case 10: {
                  int arrayLength = com.google.protobuf.nano.WireFormatNano
                      .getRepeatedFieldArrayLength(input, 10);
                  int i = this.banner == null ? 0 : this.banner.length;
                  Banner[] newArray =
                      new Banner[i + arrayLength];
                  if (i != 0) {
                    System.arraycopy(this.banner, 0, newArray, 0, i);
                  }
                  for (; i < newArray.length - 1; i++) {
                    newArray[i] = new Banner();
                    input.readMessage(newArray[i]);
                    input.readTag();
                  }
                  // Last one without readTag.
                  newArray[i] = new Banner();
                  input.readMessage(newArray[i]);
                  this.banner = newArray;
                  break;
                }
              }
            }
          }

          public static CompanionAd parseFrom(byte[] data)
              throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
            return com.google.protobuf.nano.MessageNano.mergeFrom(new CompanionAd(), data);
          }

          public static CompanionAd parseFrom(
                  com.google.protobuf.nano.CodedInputByteBufferNano input)
              throws java.io.IOException {
            return new CompanionAd().mergeFrom(input);
          }
        }

        private static volatile Video[] _emptyArray;
        public static Video[] emptyArray() {
          // Lazily initializes the empty array
          if (_emptyArray == null) {
            synchronized (
                com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
              if (_emptyArray == null) {
                _emptyArray = new Video[0];
              }
            }
          }
          return _emptyArray;
        }

        // repeated string mimes = 1;
        public String[] mimes;

        // optional .com.hykj.gamecenter.protocol.BidRequest.Imp.Video.VideoLinearity linearity = 2;
        public int linearity;

        // optional int32 minduration = 3;
        public int minduration;

        // optional int32 maxduration = 4;
        public int maxduration;

        // optional .com.hykj.gamecenter.protocol.BidRequest.Imp.Video.VideoBidResponseProtocol protocol = 5 [deprecated = true];
        public int protocol;

        // repeated .com.hykj.gamecenter.protocol.BidRequest.Imp.Video.VideoBidResponseProtocol protocols = 21 [packed = true];
        public int[] protocols;

        // optional int32 w = 6;
        public int w;

        // optional int32 h = 7;
        public int h;

        // optional int32 startdelay = 8;
        public int startdelay;

        // optional int32 sequence = 9 [default = 1];
        public int sequence;

        // repeated .com.hykj.gamecenter.protocol.CreativeAttribute battr = 10 [packed = true];
        public int[] battr;

        // optional int32 maxextended = 11;
        public int maxextended;

        // optional int32 minbitrate = 12;
        public int minbitrate;

        // optional int32 maxbitrate = 13;
        public int maxbitrate;

        // optional bool boxingallowed = 14 [default = true];
        public boolean boxingallowed;

        // repeated .com.hykj.gamecenter.protocol.BidRequest.Imp.Video.VideoPlaybackMethod playbackmethod = 15 [packed = true];
        public int[] playbackmethod;

        // repeated .com.hykj.gamecenter.protocol.BidRequest.Imp.Video.ContentDeliveryMethod delivery = 16 [packed = true];
        public int[] delivery;

        // optional .com.hykj.gamecenter.protocol.BidRequest.Imp.AdPosition pos = 17;
        public int pos;

        // repeated .com.hykj.gamecenter.protocol.BidRequest.Imp.Banner companionad = 18;
        public Banner[] companionad;

        // optional .com.hykj.gamecenter.protocol.BidRequest.Imp.Video.CompanionAd companionad_21 = 22 [deprecated = true];
        public CompanionAd companionad21;

        // repeated .com.hykj.gamecenter.protocol.BidRequest.Imp.APIFramework api = 19 [packed = true];
        public int[] api;

        // repeated .com.hykj.gamecenter.protocol.BidRequest.Imp.Video.VASTCompanionType companiontype = 20 [packed = true];
        public int[] companiontype;

        public Video() {
          clear();
        }

        public Video clear() {
          mimes = com.google.protobuf.nano.WireFormatNano.EMPTY_STRING_ARRAY;
          linearity = Video.LINEAR;
          minduration = 0;
          maxduration = 0;
          protocol = Video.VAST_1_0;
          protocols = com.google.protobuf.nano.WireFormatNano.EMPTY_INT_ARRAY;
          w = 0;
          h = 0;
          startdelay = 0;
          sequence = 1;
          battr = com.google.protobuf.nano.WireFormatNano.EMPTY_INT_ARRAY;
          maxextended = 0;
          minbitrate = 0;
          maxbitrate = 0;
          boxingallowed = true;
          playbackmethod = com.google.protobuf.nano.WireFormatNano.EMPTY_INT_ARRAY;
          delivery = com.google.protobuf.nano.WireFormatNano.EMPTY_INT_ARRAY;
          pos = Imp.UNKNOWN;
          companionad = Banner.emptyArray();
          companionad21 = null;
          api = com.google.protobuf.nano.WireFormatNano.EMPTY_INT_ARRAY;
          companiontype = com.google.protobuf.nano.WireFormatNano.EMPTY_INT_ARRAY;
          unknownFieldData = null;
          cachedSize = -1;
          return this;
        }

        @Override
        public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
            throws java.io.IOException {
          if (this.mimes != null && this.mimes.length > 0) {
            for (int i = 0; i < this.mimes.length; i++) {
              String element = this.mimes[i];
              if (element != null) {
                output.writeString(1, element);
              }
            }
          }
          if (this.linearity != Video.LINEAR) {
            output.writeInt32(2, this.linearity);
          }
          if (this.minduration != 0) {
            output.writeInt32(3, this.minduration);
          }
          if (this.maxduration != 0) {
            output.writeInt32(4, this.maxduration);
          }
          if (this.protocol != Video.VAST_1_0) {
            output.writeInt32(5, this.protocol);
          }
          if (this.w != 0) {
            output.writeInt32(6, this.w);
          }
          if (this.h != 0) {
            output.writeInt32(7, this.h);
          }
          if (this.startdelay != 0) {
            output.writeInt32(8, this.startdelay);
          }
          if (this.sequence != 1) {
            output.writeInt32(9, this.sequence);
          }
          if (this.battr != null && this.battr.length > 0) {
            int dataSize = 0;
            for (int i = 0; i < this.battr.length; i++) {
              int element = this.battr[i];
              dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                  .computeInt32SizeNoTag(element);
            }
            output.writeRawVarint32(82);
            output.writeRawVarint32(dataSize);
            for (int i = 0; i < this.battr.length; i++) {
              output.writeRawVarint32(this.battr[i]);
            }
          }
          if (this.maxextended != 0) {
            output.writeInt32(11, this.maxextended);
          }
          if (this.minbitrate != 0) {
            output.writeInt32(12, this.minbitrate);
          }
          if (this.maxbitrate != 0) {
            output.writeInt32(13, this.maxbitrate);
          }
          if (this.boxingallowed != true) {
            output.writeBool(14, this.boxingallowed);
          }
          if (this.playbackmethod != null && this.playbackmethod.length > 0) {
            int dataSize = 0;
            for (int i = 0; i < this.playbackmethod.length; i++) {
              int element = this.playbackmethod[i];
              dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                  .computeInt32SizeNoTag(element);
            }
            output.writeRawVarint32(122);
            output.writeRawVarint32(dataSize);
            for (int i = 0; i < this.playbackmethod.length; i++) {
              output.writeRawVarint32(this.playbackmethod[i]);
            }
          }
          if (this.delivery != null && this.delivery.length > 0) {
            int dataSize = 0;
            for (int i = 0; i < this.delivery.length; i++) {
              int element = this.delivery[i];
              dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                  .computeInt32SizeNoTag(element);
            }
            output.writeRawVarint32(130);
            output.writeRawVarint32(dataSize);
            for (int i = 0; i < this.delivery.length; i++) {
              output.writeRawVarint32(this.delivery[i]);
            }
          }
          if (this.pos != Imp.UNKNOWN) {
            output.writeInt32(17, this.pos);
          }
          if (this.companionad != null && this.companionad.length > 0) {
            for (int i = 0; i < this.companionad.length; i++) {
              Banner element = this.companionad[i];
              if (element != null) {
                output.writeMessage(18, element);
              }
            }
          }
          if (this.api != null && this.api.length > 0) {
            int dataSize = 0;
            for (int i = 0; i < this.api.length; i++) {
              int element = this.api[i];
              dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                  .computeInt32SizeNoTag(element);
            }
            output.writeRawVarint32(154);
            output.writeRawVarint32(dataSize);
            for (int i = 0; i < this.api.length; i++) {
              output.writeRawVarint32(this.api[i]);
            }
          }
          if (this.companiontype != null && this.companiontype.length > 0) {
            int dataSize = 0;
            for (int i = 0; i < this.companiontype.length; i++) {
              int element = this.companiontype[i];
              dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                  .computeInt32SizeNoTag(element);
            }
            output.writeRawVarint32(162);
            output.writeRawVarint32(dataSize);
            for (int i = 0; i < this.companiontype.length; i++) {
              output.writeRawVarint32(this.companiontype[i]);
            }
          }
          if (this.protocols != null && this.protocols.length > 0) {
            int dataSize = 0;
            for (int i = 0; i < this.protocols.length; i++) {
              int element = this.protocols[i];
              dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                  .computeInt32SizeNoTag(element);
            }
            output.writeRawVarint32(170);
            output.writeRawVarint32(dataSize);
            for (int i = 0; i < this.protocols.length; i++) {
              output.writeRawVarint32(this.protocols[i]);
            }
          }
          if (this.companionad21 != null) {
            output.writeMessage(22, this.companionad21);
          }
          super.writeTo(output);
        }

        @Override
        protected int computeSerializedSize() {
          int size = super.computeSerializedSize();
          if (this.mimes != null && this.mimes.length > 0) {
            int dataCount = 0;
            int dataSize = 0;
            for (int i = 0; i < this.mimes.length; i++) {
              String element = this.mimes[i];
              if (element != null) {
                dataCount++;
                dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                    .computeStringSizeNoTag(element);
              }
            }
            size += dataSize;
            size += 1 * dataCount;
          }
          if (this.linearity != Video.LINEAR) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeInt32Size(2, this.linearity);
          }
          if (this.minduration != 0) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeInt32Size(3, this.minduration);
          }
          if (this.maxduration != 0) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeInt32Size(4, this.maxduration);
          }
          if (this.protocol != Video.VAST_1_0) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeInt32Size(5, this.protocol);
          }
          if (this.w != 0) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeInt32Size(6, this.w);
          }
          if (this.h != 0) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeInt32Size(7, this.h);
          }
          if (this.startdelay != 0) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeInt32Size(8, this.startdelay);
          }
          if (this.sequence != 1) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeInt32Size(9, this.sequence);
          }
          if (this.battr != null && this.battr.length > 0) {
            int dataSize = 0;
            for (int i = 0; i < this.battr.length; i++) {
              int element = this.battr[i];
              dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                  .computeInt32SizeNoTag(element);
            }
            size += dataSize;
            size += 1;
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeRawVarint32Size(dataSize);
          }
          if (this.maxextended != 0) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeInt32Size(11, this.maxextended);
          }
          if (this.minbitrate != 0) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeInt32Size(12, this.minbitrate);
          }
          if (this.maxbitrate != 0) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeInt32Size(13, this.maxbitrate);
          }
          if (this.boxingallowed != true) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeBoolSize(14, this.boxingallowed);
          }
          if (this.playbackmethod != null && this.playbackmethod.length > 0) {
            int dataSize = 0;
            for (int i = 0; i < this.playbackmethod.length; i++) {
              int element = this.playbackmethod[i];
              dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                  .computeInt32SizeNoTag(element);
            }
            size += dataSize;
            size += 1;
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeRawVarint32Size(dataSize);
          }
          if (this.delivery != null && this.delivery.length > 0) {
            int dataSize = 0;
            for (int i = 0; i < this.delivery.length; i++) {
              int element = this.delivery[i];
              dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                  .computeInt32SizeNoTag(element);
            }
            size += dataSize;
            size += 2;
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeRawVarint32Size(dataSize);
          }
          if (this.pos != Imp.UNKNOWN) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeInt32Size(17, this.pos);
          }
          if (this.companionad != null && this.companionad.length > 0) {
            for (int i = 0; i < this.companionad.length; i++) {
              Banner element = this.companionad[i];
              if (element != null) {
                size += com.google.protobuf.nano.CodedOutputByteBufferNano
                  .computeMessageSize(18, element);
              }
            }
          }
          if (this.api != null && this.api.length > 0) {
            int dataSize = 0;
            for (int i = 0; i < this.api.length; i++) {
              int element = this.api[i];
              dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                  .computeInt32SizeNoTag(element);
            }
            size += dataSize;
            size += 2;
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeRawVarint32Size(dataSize);
          }
          if (this.companiontype != null && this.companiontype.length > 0) {
            int dataSize = 0;
            for (int i = 0; i < this.companiontype.length; i++) {
              int element = this.companiontype[i];
              dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                  .computeInt32SizeNoTag(element);
            }
            size += dataSize;
            size += 2;
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeRawVarint32Size(dataSize);
          }
          if (this.protocols != null && this.protocols.length > 0) {
            int dataSize = 0;
            for (int i = 0; i < this.protocols.length; i++) {
              int element = this.protocols[i];
              dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                  .computeInt32SizeNoTag(element);
            }
            size += dataSize;
            size += 2;
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeRawVarint32Size(dataSize);
          }
          if (this.companionad21 != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(22, this.companionad21);
          }
          return size;
        }

        @Override
        public Video mergeFrom(
                com.google.protobuf.nano.CodedInputByteBufferNano input)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                return this;
              default: {
                if (!storeUnknownField(input, tag)) {
                  return this;
                }
                break;
              }
              case 10: {
                int arrayLength = com.google.protobuf.nano.WireFormatNano
                    .getRepeatedFieldArrayLength(input, 10);
                int i = this.mimes == null ? 0 : this.mimes.length;
                String[] newArray = new String[i + arrayLength];
                if (i != 0) {
                  System.arraycopy(this.mimes, 0, newArray, 0, i);
                }
                for (; i < newArray.length - 1; i++) {
                  newArray[i] = input.readString();
                  input.readTag();
                }
                // Last one without readTag.
                newArray[i] = input.readString();
                this.mimes = newArray;
                break;
              }
              case 16: {
                int value = input.readInt32();
                switch (value) {
                  case Video.LINEAR:
                  case Video.NON_LINEAR:
                    this.linearity = value;
                    break;
                }
                break;
              }
              case 24: {
                this.minduration = input.readInt32();
                break;
              }
              case 32: {
                this.maxduration = input.readInt32();
                break;
              }
              case 40: {
                int value = input.readInt32();
                switch (value) {
                  case Video.VAST_1_0:
                  case Video.VAST_2_0:
                  case Video.VAST_3_0:
                  case Video.VAST_1_0_WRAPPER:
                  case Video.VAST_2_0_WRAPPER:
                  case Video.VAST_3_0_WRAPPER:
                    this.protocol = value;
                    break;
                }
                break;
              }
              case 48: {
                this.w = input.readInt32();
                break;
              }
              case 56: {
                this.h = input.readInt32();
                break;
              }
              case 64: {
                this.startdelay = input.readInt32();
                break;
              }
              case 72: {
                this.sequence = input.readInt32();
                break;
              }
              case 80: {
                int length = com.google.protobuf.nano.WireFormatNano
                    .getRepeatedFieldArrayLength(input, 80);
                int[] validValues = new int[length];
                int validCount = 0;
                for (int i = 0; i < length; i++) {
                  if (i != 0) { // tag for first value already consumed.
                    input.readTag();
                  }
                  int value = input.readInt32();
                  switch (value) {
                    case OpenRtb.AUDIO_AUTO_PLAY:
                    case OpenRtb.AUDIO_USER_INITIATED:
                    case OpenRtb.EXPANDABLE_AUTOMATIC:
                    case OpenRtb.EXPANDABLE_CLICK_INITIATED:
                    case OpenRtb.EXPANDABLE_ROLLOVER_INITIATED:
                    case OpenRtb.VIDEO_IN_BANNER_AUTO_PLAY:
                    case OpenRtb.VIDEO_IN_BANNER_USER_INITIATED:
                    case OpenRtb.POP:
                    case OpenRtb.PROVOCATIVE_OR_SUGGESTIVE:
                    case OpenRtb.ANNOYING:
                    case OpenRtb.SURVEYS:
                    case OpenRtb.TEXT_ONLY:
                    case OpenRtb.USER_INTERACTIVE:
                    case OpenRtb.WINDOWS_DIALOG_OR_ALERT_STYLE:
                    case OpenRtb.HAS_AUDIO_ON_OFF_BUTTON:
                    case OpenRtb.AD_CAN_BE_SKIPPED:
                      validValues[validCount++] = value;
                      break;
                  }
                }
                if (validCount != 0) {
                  int i = this.battr == null ? 0 : this.battr.length;
                  if (i == 0 && validCount == validValues.length) {
                    this.battr = validValues;
                  } else {
                    int[] newArray = new int[i + validCount];
                    if (i != 0) {
                      System.arraycopy(this.battr, 0, newArray, 0, i);
                    }
                    System.arraycopy(validValues, 0, newArray, i, validCount);
                    this.battr = newArray;
                  }
                }
                break;
              }
              case 82: {
                int bytes = input.readRawVarint32();
                int limit = input.pushLimit(bytes);
                // First pass to compute array length.
                int arrayLength = 0;
                int startPos = input.getPosition();
                while (input.getBytesUntilLimit() > 0) {
                  switch (input.readInt32()) {
                    case OpenRtb.AUDIO_AUTO_PLAY:
                    case OpenRtb.AUDIO_USER_INITIATED:
                    case OpenRtb.EXPANDABLE_AUTOMATIC:
                    case OpenRtb.EXPANDABLE_CLICK_INITIATED:
                    case OpenRtb.EXPANDABLE_ROLLOVER_INITIATED:
                    case OpenRtb.VIDEO_IN_BANNER_AUTO_PLAY:
                    case OpenRtb.VIDEO_IN_BANNER_USER_INITIATED:
                    case OpenRtb.POP:
                    case OpenRtb.PROVOCATIVE_OR_SUGGESTIVE:
                    case OpenRtb.ANNOYING:
                    case OpenRtb.SURVEYS:
                    case OpenRtb.TEXT_ONLY:
                    case OpenRtb.USER_INTERACTIVE:
                    case OpenRtb.WINDOWS_DIALOG_OR_ALERT_STYLE:
                    case OpenRtb.HAS_AUDIO_ON_OFF_BUTTON:
                    case OpenRtb.AD_CAN_BE_SKIPPED:
                      arrayLength++;
                      break;
                  }
                }
                if (arrayLength != 0) {
                  input.rewindToPosition(startPos);
                  int i = this.battr == null ? 0 : this.battr.length;
                  int[] newArray = new int[i + arrayLength];
                  if (i != 0) {
                    System.arraycopy(this.battr, 0, newArray, 0, i);
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    int value = input.readInt32();
                    switch (value) {
                      case OpenRtb.AUDIO_AUTO_PLAY:
                      case OpenRtb.AUDIO_USER_INITIATED:
                      case OpenRtb.EXPANDABLE_AUTOMATIC:
                      case OpenRtb.EXPANDABLE_CLICK_INITIATED:
                      case OpenRtb.EXPANDABLE_ROLLOVER_INITIATED:
                      case OpenRtb.VIDEO_IN_BANNER_AUTO_PLAY:
                      case OpenRtb.VIDEO_IN_BANNER_USER_INITIATED:
                      case OpenRtb.POP:
                      case OpenRtb.PROVOCATIVE_OR_SUGGESTIVE:
                      case OpenRtb.ANNOYING:
                      case OpenRtb.SURVEYS:
                      case OpenRtb.TEXT_ONLY:
                      case OpenRtb.USER_INTERACTIVE:
                      case OpenRtb.WINDOWS_DIALOG_OR_ALERT_STYLE:
                      case OpenRtb.HAS_AUDIO_ON_OFF_BUTTON:
                      case OpenRtb.AD_CAN_BE_SKIPPED:
                        newArray[i++] = value;
                        break;
                    }
                  }
                  this.battr = newArray;
                }
                input.popLimit(limit);
                break;
              }
              case 88: {
                this.maxextended = input.readInt32();
                break;
              }
              case 96: {
                this.minbitrate = input.readInt32();
                break;
              }
              case 104: {
                this.maxbitrate = input.readInt32();
                break;
              }
              case 112: {
                this.boxingallowed = input.readBool();
                break;
              }
              case 120: {
                int length = com.google.protobuf.nano.WireFormatNano
                    .getRepeatedFieldArrayLength(input, 120);
                int[] validValues = new int[length];
                int validCount = 0;
                for (int i = 0; i < length; i++) {
                  if (i != 0) { // tag for first value already consumed.
                    input.readTag();
                  }
                  int value = input.readInt32();
                  switch (value) {
                    case Video.AUTO_PLAY_SOUND_ON:
                    case Video.AUTO_PLAY_SOUND_OFF:
                    case Video.CLICK_TO_PLAY:
                    case Video.MOUSE_OVER:
                      validValues[validCount++] = value;
                      break;
                  }
                }
                if (validCount != 0) {
                  int i = this.playbackmethod == null ? 0 : this.playbackmethod.length;
                  if (i == 0 && validCount == validValues.length) {
                    this.playbackmethod = validValues;
                  } else {
                    int[] newArray = new int[i + validCount];
                    if (i != 0) {
                      System.arraycopy(this.playbackmethod, 0, newArray, 0, i);
                    }
                    System.arraycopy(validValues, 0, newArray, i, validCount);
                    this.playbackmethod = newArray;
                  }
                }
                break;
              }
              case 122: {
                int bytes = input.readRawVarint32();
                int limit = input.pushLimit(bytes);
                // First pass to compute array length.
                int arrayLength = 0;
                int startPos = input.getPosition();
                while (input.getBytesUntilLimit() > 0) {
                  switch (input.readInt32()) {
                    case Video.AUTO_PLAY_SOUND_ON:
                    case Video.AUTO_PLAY_SOUND_OFF:
                    case Video.CLICK_TO_PLAY:
                    case Video.MOUSE_OVER:
                      arrayLength++;
                      break;
                  }
                }
                if (arrayLength != 0) {
                  input.rewindToPosition(startPos);
                  int i = this.playbackmethod == null ? 0 : this.playbackmethod.length;
                  int[] newArray = new int[i + arrayLength];
                  if (i != 0) {
                    System.arraycopy(this.playbackmethod, 0, newArray, 0, i);
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    int value = input.readInt32();
                    switch (value) {
                      case Video.AUTO_PLAY_SOUND_ON:
                      case Video.AUTO_PLAY_SOUND_OFF:
                      case Video.CLICK_TO_PLAY:
                      case Video.MOUSE_OVER:
                        newArray[i++] = value;
                        break;
                    }
                  }
                  this.playbackmethod = newArray;
                }
                input.popLimit(limit);
                break;
              }
              case 128: {
                int length = com.google.protobuf.nano.WireFormatNano
                    .getRepeatedFieldArrayLength(input, 128);
                int[] validValues = new int[length];
                int validCount = 0;
                for (int i = 0; i < length; i++) {
                  if (i != 0) { // tag for first value already consumed.
                    input.readTag();
                  }
                  int value = input.readInt32();
                  switch (value) {
                    case Video.STREAMING:
                    case Video.PROGRESSIVE:
                      validValues[validCount++] = value;
                      break;
                  }
                }
                if (validCount != 0) {
                  int i = this.delivery == null ? 0 : this.delivery.length;
                  if (i == 0 && validCount == validValues.length) {
                    this.delivery = validValues;
                  } else {
                    int[] newArray = new int[i + validCount];
                    if (i != 0) {
                      System.arraycopy(this.delivery, 0, newArray, 0, i);
                    }
                    System.arraycopy(validValues, 0, newArray, i, validCount);
                    this.delivery = newArray;
                  }
                }
                break;
              }
              case 130: {
                int bytes = input.readRawVarint32();
                int limit = input.pushLimit(bytes);
                // First pass to compute array length.
                int arrayLength = 0;
                int startPos = input.getPosition();
                while (input.getBytesUntilLimit() > 0) {
                  switch (input.readInt32()) {
                    case Video.STREAMING:
                    case Video.PROGRESSIVE:
                      arrayLength++;
                      break;
                  }
                }
                if (arrayLength != 0) {
                  input.rewindToPosition(startPos);
                  int i = this.delivery == null ? 0 : this.delivery.length;
                  int[] newArray = new int[i + arrayLength];
                  if (i != 0) {
                    System.arraycopy(this.delivery, 0, newArray, 0, i);
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    int value = input.readInt32();
                    switch (value) {
                      case Video.STREAMING:
                      case Video.PROGRESSIVE:
                        newArray[i++] = value;
                        break;
                    }
                  }
                  this.delivery = newArray;
                }
                input.popLimit(limit);
                break;
              }
              case 136: {
                int value = input.readInt32();
                switch (value) {
                  case Imp.UNKNOWN:
                  case Imp.ABOVE_THE_FOLD:
                  case Imp.DEPRECATED_LIKELY_BELOW_THE_FOLD:
                  case Imp.BELOW_THE_FOLD:
                  case Imp.HEADER:
                  case Imp.FOOTER:
                  case Imp.SIDEBAR:
                  case Imp.AD_POSITION_FULLSCREEN:
                    this.pos = value;
                    break;
                }
                break;
              }
              case 146: {
                int arrayLength = com.google.protobuf.nano.WireFormatNano
                    .getRepeatedFieldArrayLength(input, 146);
                int i = this.companionad == null ? 0 : this.companionad.length;
                Banner[] newArray =
                    new Banner[i + arrayLength];
                if (i != 0) {
                  System.arraycopy(this.companionad, 0, newArray, 0, i);
                }
                for (; i < newArray.length - 1; i++) {
                  newArray[i] = new Banner();
                  input.readMessage(newArray[i]);
                  input.readTag();
                }
                // Last one without readTag.
                newArray[i] = new Banner();
                input.readMessage(newArray[i]);
                this.companionad = newArray;
                break;
              }
              case 152: {
                int length = com.google.protobuf.nano.WireFormatNano
                    .getRepeatedFieldArrayLength(input, 152);
                int[] validValues = new int[length];
                int validCount = 0;
                for (int i = 0; i < length; i++) {
                  if (i != 0) { // tag for first value already consumed.
                    input.readTag();
                  }
                  int value = input.readInt32();
                  switch (value) {
                    case Imp.VPAID_1:
                    case Imp.VPAID_2:
                    case Imp.MRAID_1:
                    case Imp.ORMMA:
                    case Imp.MRAID_2:
                      validValues[validCount++] = value;
                      break;
                  }
                }
                if (validCount != 0) {
                  int i = this.api == null ? 0 : this.api.length;
                  if (i == 0 && validCount == validValues.length) {
                    this.api = validValues;
                  } else {
                    int[] newArray = new int[i + validCount];
                    if (i != 0) {
                      System.arraycopy(this.api, 0, newArray, 0, i);
                    }
                    System.arraycopy(validValues, 0, newArray, i, validCount);
                    this.api = newArray;
                  }
                }
                break;
              }
              case 154: {
                int bytes = input.readRawVarint32();
                int limit = input.pushLimit(bytes);
                // First pass to compute array length.
                int arrayLength = 0;
                int startPos = input.getPosition();
                while (input.getBytesUntilLimit() > 0) {
                  switch (input.readInt32()) {
                    case Imp.VPAID_1:
                    case Imp.VPAID_2:
                    case Imp.MRAID_1:
                    case Imp.ORMMA:
                    case Imp.MRAID_2:
                      arrayLength++;
                      break;
                  }
                }
                if (arrayLength != 0) {
                  input.rewindToPosition(startPos);
                  int i = this.api == null ? 0 : this.api.length;
                  int[] newArray = new int[i + arrayLength];
                  if (i != 0) {
                    System.arraycopy(this.api, 0, newArray, 0, i);
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    int value = input.readInt32();
                    switch (value) {
                      case Imp.VPAID_1:
                      case Imp.VPAID_2:
                      case Imp.MRAID_1:
                      case Imp.ORMMA:
                      case Imp.MRAID_2:
                        newArray[i++] = value;
                        break;
                    }
                  }
                  this.api = newArray;
                }
                input.popLimit(limit);
                break;
              }
              case 160: {
                int length = com.google.protobuf.nano.WireFormatNano
                    .getRepeatedFieldArrayLength(input, 160);
                int[] validValues = new int[length];
                int validCount = 0;
                for (int i = 0; i < length; i++) {
                  if (i != 0) { // tag for first value already consumed.
                    input.readTag();
                  }
                  int value = input.readInt32();
                  switch (value) {
                    case Video.STATIC:
                    case Video.HTML:
                    case Video.COMPANION_IFRAME:
                      validValues[validCount++] = value;
                      break;
                  }
                }
                if (validCount != 0) {
                  int i = this.companiontype == null ? 0 : this.companiontype.length;
                  if (i == 0 && validCount == validValues.length) {
                    this.companiontype = validValues;
                  } else {
                    int[] newArray = new int[i + validCount];
                    if (i != 0) {
                      System.arraycopy(this.companiontype, 0, newArray, 0, i);
                    }
                    System.arraycopy(validValues, 0, newArray, i, validCount);
                    this.companiontype = newArray;
                  }
                }
                break;
              }
              case 162: {
                int bytes = input.readRawVarint32();
                int limit = input.pushLimit(bytes);
                // First pass to compute array length.
                int arrayLength = 0;
                int startPos = input.getPosition();
                while (input.getBytesUntilLimit() > 0) {
                  switch (input.readInt32()) {
                    case Video.STATIC:
                    case Video.HTML:
                    case Video.COMPANION_IFRAME:
                      arrayLength++;
                      break;
                  }
                }
                if (arrayLength != 0) {
                  input.rewindToPosition(startPos);
                  int i = this.companiontype == null ? 0 : this.companiontype.length;
                  int[] newArray = new int[i + arrayLength];
                  if (i != 0) {
                    System.arraycopy(this.companiontype, 0, newArray, 0, i);
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    int value = input.readInt32();
                    switch (value) {
                      case Video.STATIC:
                      case Video.HTML:
                      case Video.COMPANION_IFRAME:
                        newArray[i++] = value;
                        break;
                    }
                  }
                  this.companiontype = newArray;
                }
                input.popLimit(limit);
                break;
              }
              case 168: {
                int length = com.google.protobuf.nano.WireFormatNano
                    .getRepeatedFieldArrayLength(input, 168);
                int[] validValues = new int[length];
                int validCount = 0;
                for (int i = 0; i < length; i++) {
                  if (i != 0) { // tag for first value already consumed.
                    input.readTag();
                  }
                  int value = input.readInt32();
                  switch (value) {
                    case Video.VAST_1_0:
                    case Video.VAST_2_0:
                    case Video.VAST_3_0:
                    case Video.VAST_1_0_WRAPPER:
                    case Video.VAST_2_0_WRAPPER:
                    case Video.VAST_3_0_WRAPPER:
                      validValues[validCount++] = value;
                      break;
                  }
                }
                if (validCount != 0) {
                  int i = this.protocols == null ? 0 : this.protocols.length;
                  if (i == 0 && validCount == validValues.length) {
                    this.protocols = validValues;
                  } else {
                    int[] newArray = new int[i + validCount];
                    if (i != 0) {
                      System.arraycopy(this.protocols, 0, newArray, 0, i);
                    }
                    System.arraycopy(validValues, 0, newArray, i, validCount);
                    this.protocols = newArray;
                  }
                }
                break;
              }
              case 170: {
                int bytes = input.readRawVarint32();
                int limit = input.pushLimit(bytes);
                // First pass to compute array length.
                int arrayLength = 0;
                int startPos = input.getPosition();
                while (input.getBytesUntilLimit() > 0) {
                  switch (input.readInt32()) {
                    case Video.VAST_1_0:
                    case Video.VAST_2_0:
                    case Video.VAST_3_0:
                    case Video.VAST_1_0_WRAPPER:
                    case Video.VAST_2_0_WRAPPER:
                    case Video.VAST_3_0_WRAPPER:
                      arrayLength++;
                      break;
                  }
                }
                if (arrayLength != 0) {
                  input.rewindToPosition(startPos);
                  int i = this.protocols == null ? 0 : this.protocols.length;
                  int[] newArray = new int[i + arrayLength];
                  if (i != 0) {
                    System.arraycopy(this.protocols, 0, newArray, 0, i);
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    int value = input.readInt32();
                    switch (value) {
                      case Video.VAST_1_0:
                      case Video.VAST_2_0:
                      case Video.VAST_3_0:
                      case Video.VAST_1_0_WRAPPER:
                      case Video.VAST_2_0_WRAPPER:
                      case Video.VAST_3_0_WRAPPER:
                        newArray[i++] = value;
                        break;
                    }
                  }
                  this.protocols = newArray;
                }
                input.popLimit(limit);
                break;
              }
              case 178: {
                if (this.companionad21 == null) {
                  this.companionad21 = new CompanionAd();
                }
                input.readMessage(this.companionad21);
                break;
              }
            }
          }
        }

        public static Video parseFrom(byte[] data)
            throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
          return com.google.protobuf.nano.MessageNano.mergeFrom(new Video(), data);
        }

        public static Video parseFrom(
                com.google.protobuf.nano.CodedInputByteBufferNano input)
            throws java.io.IOException {
          return new Video().mergeFrom(input);
        }
      }

      public static final class Native extends
          com.google.protobuf.nano.ExtendableMessageNano<Native> {

        private static volatile Native[] _emptyArray;
        public static Native[] emptyArray() {
          // Lazily initializes the empty array
          if (_emptyArray == null) {
            synchronized (
                com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
              if (_emptyArray == null) {
                _emptyArray = new Native[0];
              }
            }
          }
          return _emptyArray;
        }

        // optional string request = 1;
        public String request;

        // optional .com.hykj.gamecenter.protocol.NativeRequest request_native = 50;
        public NativeRequest requestNative;

        // optional string ver = 2;
        public String ver;

        // repeated .com.hykj.gamecenter.protocol.BidRequest.Imp.APIFramework api = 3 [packed = true];
        public int[] api;

        // repeated .com.hykj.gamecenter.protocol.CreativeAttribute battr = 4 [packed = true];
        public int[] battr;

        public Native() {
          clear();
        }

        public Native clear() {
          request = "";
          requestNative = null;
          ver = "";
          api = com.google.protobuf.nano.WireFormatNano.EMPTY_INT_ARRAY;
          battr = com.google.protobuf.nano.WireFormatNano.EMPTY_INT_ARRAY;
          unknownFieldData = null;
          cachedSize = -1;
          return this;
        }

        @Override
        public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
            throws java.io.IOException {
          if (!this.request.equals("")) {
            output.writeString(1, this.request);
          }
          if (!this.ver.equals("")) {
            output.writeString(2, this.ver);
          }
          if (this.api != null && this.api.length > 0) {
            int dataSize = 0;
            for (int i = 0; i < this.api.length; i++) {
              int element = this.api[i];
              dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                  .computeInt32SizeNoTag(element);
            }
            output.writeRawVarint32(26);
            output.writeRawVarint32(dataSize);
            for (int i = 0; i < this.api.length; i++) {
              output.writeRawVarint32(this.api[i]);
            }
          }
          if (this.battr != null && this.battr.length > 0) {
            int dataSize = 0;
            for (int i = 0; i < this.battr.length; i++) {
              int element = this.battr[i];
              dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                  .computeInt32SizeNoTag(element);
            }
            output.writeRawVarint32(34);
            output.writeRawVarint32(dataSize);
            for (int i = 0; i < this.battr.length; i++) {
              output.writeRawVarint32(this.battr[i]);
            }
          }
          if (this.requestNative != null) {
            output.writeMessage(50, this.requestNative);
          }
          super.writeTo(output);
        }

        @Override
        protected int computeSerializedSize() {
          int size = super.computeSerializedSize();
          if (!this.request.equals("")) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeStringSize(1, this.request);
          }
          if (!this.ver.equals("")) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeStringSize(2, this.ver);
          }
          if (this.api != null && this.api.length > 0) {
            int dataSize = 0;
            for (int i = 0; i < this.api.length; i++) {
              int element = this.api[i];
              dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                  .computeInt32SizeNoTag(element);
            }
            size += dataSize;
            size += 1;
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeRawVarint32Size(dataSize);
          }
          if (this.battr != null && this.battr.length > 0) {
            int dataSize = 0;
            for (int i = 0; i < this.battr.length; i++) {
              int element = this.battr[i];
              dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                  .computeInt32SizeNoTag(element);
            }
            size += dataSize;
            size += 1;
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeRawVarint32Size(dataSize);
          }
          if (this.requestNative != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(50, this.requestNative);
          }
          return size;
        }

        @Override
        public Native mergeFrom(
                com.google.protobuf.nano.CodedInputByteBufferNano input)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                return this;
              default: {
                if (!storeUnknownField(input, tag)) {
                  return this;
                }
                break;
              }
              case 10: {
                this.request = input.readString();
                break;
              }
              case 18: {
                this.ver = input.readString();
                break;
              }
              case 24: {
                int length = com.google.protobuf.nano.WireFormatNano
                    .getRepeatedFieldArrayLength(input, 24);
                int[] validValues = new int[length];
                int validCount = 0;
                for (int i = 0; i < length; i++) {
                  if (i != 0) { // tag for first value already consumed.
                    input.readTag();
                  }
                  int value = input.readInt32();
                  switch (value) {
                    case Imp.VPAID_1:
                    case Imp.VPAID_2:
                    case Imp.MRAID_1:
                    case Imp.ORMMA:
                    case Imp.MRAID_2:
                      validValues[validCount++] = value;
                      break;
                  }
                }
                if (validCount != 0) {
                  int i = this.api == null ? 0 : this.api.length;
                  if (i == 0 && validCount == validValues.length) {
                    this.api = validValues;
                  } else {
                    int[] newArray = new int[i + validCount];
                    if (i != 0) {
                      System.arraycopy(this.api, 0, newArray, 0, i);
                    }
                    System.arraycopy(validValues, 0, newArray, i, validCount);
                    this.api = newArray;
                  }
                }
                break;
              }
              case 26: {
                int bytes = input.readRawVarint32();
                int limit = input.pushLimit(bytes);
                // First pass to compute array length.
                int arrayLength = 0;
                int startPos = input.getPosition();
                while (input.getBytesUntilLimit() > 0) {
                  switch (input.readInt32()) {
                    case Imp.VPAID_1:
                    case Imp.VPAID_2:
                    case Imp.MRAID_1:
                    case Imp.ORMMA:
                    case Imp.MRAID_2:
                      arrayLength++;
                      break;
                  }
                }
                if (arrayLength != 0) {
                  input.rewindToPosition(startPos);
                  int i = this.api == null ? 0 : this.api.length;
                  int[] newArray = new int[i + arrayLength];
                  if (i != 0) {
                    System.arraycopy(this.api, 0, newArray, 0, i);
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    int value = input.readInt32();
                    switch (value) {
                      case Imp.VPAID_1:
                      case Imp.VPAID_2:
                      case Imp.MRAID_1:
                      case Imp.ORMMA:
                      case Imp.MRAID_2:
                        newArray[i++] = value;
                        break;
                    }
                  }
                  this.api = newArray;
                }
                input.popLimit(limit);
                break;
              }
              case 32: {
                int length = com.google.protobuf.nano.WireFormatNano
                    .getRepeatedFieldArrayLength(input, 32);
                int[] validValues = new int[length];
                int validCount = 0;
                for (int i = 0; i < length; i++) {
                  if (i != 0) { // tag for first value already consumed.
                    input.readTag();
                  }
                  int value = input.readInt32();
                  switch (value) {
                    case OpenRtb.AUDIO_AUTO_PLAY:
                    case OpenRtb.AUDIO_USER_INITIATED:
                    case OpenRtb.EXPANDABLE_AUTOMATIC:
                    case OpenRtb.EXPANDABLE_CLICK_INITIATED:
                    case OpenRtb.EXPANDABLE_ROLLOVER_INITIATED:
                    case OpenRtb.VIDEO_IN_BANNER_AUTO_PLAY:
                    case OpenRtb.VIDEO_IN_BANNER_USER_INITIATED:
                    case OpenRtb.POP:
                    case OpenRtb.PROVOCATIVE_OR_SUGGESTIVE:
                    case OpenRtb.ANNOYING:
                    case OpenRtb.SURVEYS:
                    case OpenRtb.TEXT_ONLY:
                    case OpenRtb.USER_INTERACTIVE:
                    case OpenRtb.WINDOWS_DIALOG_OR_ALERT_STYLE:
                    case OpenRtb.HAS_AUDIO_ON_OFF_BUTTON:
                    case OpenRtb.AD_CAN_BE_SKIPPED:
                      validValues[validCount++] = value;
                      break;
                  }
                }
                if (validCount != 0) {
                  int i = this.battr == null ? 0 : this.battr.length;
                  if (i == 0 && validCount == validValues.length) {
                    this.battr = validValues;
                  } else {
                    int[] newArray = new int[i + validCount];
                    if (i != 0) {
                      System.arraycopy(this.battr, 0, newArray, 0, i);
                    }
                    System.arraycopy(validValues, 0, newArray, i, validCount);
                    this.battr = newArray;
                  }
                }
                break;
              }
              case 34: {
                int bytes = input.readRawVarint32();
                int limit = input.pushLimit(bytes);
                // First pass to compute array length.
                int arrayLength = 0;
                int startPos = input.getPosition();
                while (input.getBytesUntilLimit() > 0) {
                  switch (input.readInt32()) {
                    case OpenRtb.AUDIO_AUTO_PLAY:
                    case OpenRtb.AUDIO_USER_INITIATED:
                    case OpenRtb.EXPANDABLE_AUTOMATIC:
                    case OpenRtb.EXPANDABLE_CLICK_INITIATED:
                    case OpenRtb.EXPANDABLE_ROLLOVER_INITIATED:
                    case OpenRtb.VIDEO_IN_BANNER_AUTO_PLAY:
                    case OpenRtb.VIDEO_IN_BANNER_USER_INITIATED:
                    case OpenRtb.POP:
                    case OpenRtb.PROVOCATIVE_OR_SUGGESTIVE:
                    case OpenRtb.ANNOYING:
                    case OpenRtb.SURVEYS:
                    case OpenRtb.TEXT_ONLY:
                    case OpenRtb.USER_INTERACTIVE:
                    case OpenRtb.WINDOWS_DIALOG_OR_ALERT_STYLE:
                    case OpenRtb.HAS_AUDIO_ON_OFF_BUTTON:
                    case OpenRtb.AD_CAN_BE_SKIPPED:
                      arrayLength++;
                      break;
                  }
                }
                if (arrayLength != 0) {
                  input.rewindToPosition(startPos);
                  int i = this.battr == null ? 0 : this.battr.length;
                  int[] newArray = new int[i + arrayLength];
                  if (i != 0) {
                    System.arraycopy(this.battr, 0, newArray, 0, i);
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    int value = input.readInt32();
                    switch (value) {
                      case OpenRtb.AUDIO_AUTO_PLAY:
                      case OpenRtb.AUDIO_USER_INITIATED:
                      case OpenRtb.EXPANDABLE_AUTOMATIC:
                      case OpenRtb.EXPANDABLE_CLICK_INITIATED:
                      case OpenRtb.EXPANDABLE_ROLLOVER_INITIATED:
                      case OpenRtb.VIDEO_IN_BANNER_AUTO_PLAY:
                      case OpenRtb.VIDEO_IN_BANNER_USER_INITIATED:
                      case OpenRtb.POP:
                      case OpenRtb.PROVOCATIVE_OR_SUGGESTIVE:
                      case OpenRtb.ANNOYING:
                      case OpenRtb.SURVEYS:
                      case OpenRtb.TEXT_ONLY:
                      case OpenRtb.USER_INTERACTIVE:
                      case OpenRtb.WINDOWS_DIALOG_OR_ALERT_STYLE:
                      case OpenRtb.HAS_AUDIO_ON_OFF_BUTTON:
                      case OpenRtb.AD_CAN_BE_SKIPPED:
                        newArray[i++] = value;
                        break;
                    }
                  }
                  this.battr = newArray;
                }
                input.popLimit(limit);
                break;
              }
              case 402: {
                if (this.requestNative == null) {
                  this.requestNative = new NativeRequest();
                }
                input.readMessage(this.requestNative);
                break;
              }
            }
          }
        }

        public static Native parseFrom(byte[] data)
            throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
          return com.google.protobuf.nano.MessageNano.mergeFrom(new Native(), data);
        }

        public static Native parseFrom(
                com.google.protobuf.nano.CodedInputByteBufferNano input)
            throws java.io.IOException {
          return new Native().mergeFrom(input);
        }
      }

      public static final class Pmp extends
          com.google.protobuf.nano.ExtendableMessageNano<Pmp> {

        public static final class Deal extends
            com.google.protobuf.nano.ExtendableMessageNano<Deal> {

          private static volatile Deal[] _emptyArray;
          public static Deal[] emptyArray() {
            // Lazily initializes the empty array
            if (_emptyArray == null) {
              synchronized (
                  com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
                if (_emptyArray == null) {
                  _emptyArray = new Deal[0];
                }
              }
            }
            return _emptyArray;
          }

          // required string id = 1;
          public String id;

          // optional double bidfloor = 2 [default = 0];
          public double bidfloor;

          // optional string bidfloorcur = 3 [default = "USD"];
          public String bidfloorcur;

          // repeated string wseat = 4;
          public String[] wseat;

          // repeated string wadomain = 5;
          public String[] wadomain;

          // optional .com.hykj.gamecenter.protocol.BidRequest.AuctionType at = 6;
          public int at;

          public Deal() {
            clear();
          }

          public Deal clear() {
            id = "";
            bidfloor = 0D;
            bidfloorcur = "USD";
            wseat = com.google.protobuf.nano.WireFormatNano.EMPTY_STRING_ARRAY;
            wadomain = com.google.protobuf.nano.WireFormatNano.EMPTY_STRING_ARRAY;
            at = BidRequest.FIRST_PRICE;
            unknownFieldData = null;
            cachedSize = -1;
            return this;
          }

          @Override
          public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
              throws java.io.IOException {
            output.writeString(1, this.id);
            if (Double.doubleToLongBits(this.bidfloor)
                != Double.doubleToLongBits(0D)) {
              output.writeDouble(2, this.bidfloor);
            }
            if (!this.bidfloorcur.equals("USD")) {
              output.writeString(3, this.bidfloorcur);
            }
            if (this.wseat != null && this.wseat.length > 0) {
              for (int i = 0; i < this.wseat.length; i++) {
                String element = this.wseat[i];
                if (element != null) {
                  output.writeString(4, element);
                }
              }
            }
            if (this.wadomain != null && this.wadomain.length > 0) {
              for (int i = 0; i < this.wadomain.length; i++) {
                String element = this.wadomain[i];
                if (element != null) {
                  output.writeString(5, element);
                }
              }
            }
            if (this.at != BidRequest.FIRST_PRICE) {
              output.writeInt32(6, this.at);
            }
            super.writeTo(output);
          }

          @Override
          protected int computeSerializedSize() {
            int size = super.computeSerializedSize();
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeStringSize(1, this.id);
            if (Double.doubleToLongBits(this.bidfloor)
                != Double.doubleToLongBits(0D)) {
              size += com.google.protobuf.nano.CodedOutputByteBufferNano
                  .computeDoubleSize(2, this.bidfloor);
            }
            if (!this.bidfloorcur.equals("USD")) {
              size += com.google.protobuf.nano.CodedOutputByteBufferNano
                  .computeStringSize(3, this.bidfloorcur);
            }
            if (this.wseat != null && this.wseat.length > 0) {
              int dataCount = 0;
              int dataSize = 0;
              for (int i = 0; i < this.wseat.length; i++) {
                String element = this.wseat[i];
                if (element != null) {
                  dataCount++;
                  dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                      .computeStringSizeNoTag(element);
                }
              }
              size += dataSize;
              size += 1 * dataCount;
            }
            if (this.wadomain != null && this.wadomain.length > 0) {
              int dataCount = 0;
              int dataSize = 0;
              for (int i = 0; i < this.wadomain.length; i++) {
                String element = this.wadomain[i];
                if (element != null) {
                  dataCount++;
                  dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                      .computeStringSizeNoTag(element);
                }
              }
              size += dataSize;
              size += 1 * dataCount;
            }
            if (this.at != BidRequest.FIRST_PRICE) {
              size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeInt32Size(6, this.at);
            }
            return size;
          }

          @Override
          public Deal mergeFrom(
                  com.google.protobuf.nano.CodedInputByteBufferNano input)
              throws java.io.IOException {
            while (true) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  return this;
                default: {
                  if (!storeUnknownField(input, tag)) {
                    return this;
                  }
                  break;
                }
                case 10: {
                  this.id = input.readString();
                  break;
                }
                case 17: {
                  this.bidfloor = input.readDouble();
                  break;
                }
                case 26: {
                  this.bidfloorcur = input.readString();
                  break;
                }
                case 34: {
                  int arrayLength = com.google.protobuf.nano.WireFormatNano
                      .getRepeatedFieldArrayLength(input, 34);
                  int i = this.wseat == null ? 0 : this.wseat.length;
                  String[] newArray = new String[i + arrayLength];
                  if (i != 0) {
                    System.arraycopy(this.wseat, 0, newArray, 0, i);
                  }
                  for (; i < newArray.length - 1; i++) {
                    newArray[i] = input.readString();
                    input.readTag();
                  }
                  // Last one without readTag.
                  newArray[i] = input.readString();
                  this.wseat = newArray;
                  break;
                }
                case 42: {
                  int arrayLength = com.google.protobuf.nano.WireFormatNano
                      .getRepeatedFieldArrayLength(input, 42);
                  int i = this.wadomain == null ? 0 : this.wadomain.length;
                  String[] newArray = new String[i + arrayLength];
                  if (i != 0) {
                    System.arraycopy(this.wadomain, 0, newArray, 0, i);
                  }
                  for (; i < newArray.length - 1; i++) {
                    newArray[i] = input.readString();
                    input.readTag();
                  }
                  // Last one without readTag.
                  newArray[i] = input.readString();
                  this.wadomain = newArray;
                  break;
                }
                case 48: {
                  int value = input.readInt32();
                  switch (value) {
                    case BidRequest.FIRST_PRICE:
                    case BidRequest.SECOND_PRICE:
                    case BidRequest.FIXED_PRICE:
                      this.at = value;
                      break;
                  }
                  break;
                }
              }
            }
          }

          public static Deal parseFrom(byte[] data)
              throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
            return com.google.protobuf.nano.MessageNano.mergeFrom(new Deal(), data);
          }

          public static Deal parseFrom(
                  com.google.protobuf.nano.CodedInputByteBufferNano input)
              throws java.io.IOException {
            return new Deal().mergeFrom(input);
          }
        }

        private static volatile Pmp[] _emptyArray;
        public static Pmp[] emptyArray() {
          // Lazily initializes the empty array
          if (_emptyArray == null) {
            synchronized (
                com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
              if (_emptyArray == null) {
                _emptyArray = new Pmp[0];
              }
            }
          }
          return _emptyArray;
        }

        // optional bool private_auction = 1;
        public boolean privateAuction;

        // repeated .com.hykj.gamecenter.protocol.BidRequest.Imp.Pmp.Deal deals = 2;
        public Deal[] deals;

        public Pmp() {
          clear();
        }

        public Pmp clear() {
          privateAuction = false;
          deals = Deal.emptyArray();
          unknownFieldData = null;
          cachedSize = -1;
          return this;
        }

        @Override
        public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
            throws java.io.IOException {
          if (this.privateAuction != false) {
            output.writeBool(1, this.privateAuction);
          }
          if (this.deals != null && this.deals.length > 0) {
            for (int i = 0; i < this.deals.length; i++) {
              Deal element = this.deals[i];
              if (element != null) {
                output.writeMessage(2, element);
              }
            }
          }
          super.writeTo(output);
        }

        @Override
        protected int computeSerializedSize() {
          int size = super.computeSerializedSize();
          if (this.privateAuction != false) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeBoolSize(1, this.privateAuction);
          }
          if (this.deals != null && this.deals.length > 0) {
            for (int i = 0; i < this.deals.length; i++) {
              Deal element = this.deals[i];
              if (element != null) {
                size += com.google.protobuf.nano.CodedOutputByteBufferNano
                  .computeMessageSize(2, element);
              }
            }
          }
          return size;
        }

        @Override
        public Pmp mergeFrom(
                com.google.protobuf.nano.CodedInputByteBufferNano input)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                return this;
              default: {
                if (!storeUnknownField(input, tag)) {
                  return this;
                }
                break;
              }
              case 8: {
                this.privateAuction = input.readBool();
                break;
              }
              case 18: {
                int arrayLength = com.google.protobuf.nano.WireFormatNano
                    .getRepeatedFieldArrayLength(input, 18);
                int i = this.deals == null ? 0 : this.deals.length;
                Deal[] newArray =
                    new Deal[i + arrayLength];
                if (i != 0) {
                  System.arraycopy(this.deals, 0, newArray, 0, i);
                }
                for (; i < newArray.length - 1; i++) {
                  newArray[i] = new Deal();
                  input.readMessage(newArray[i]);
                  input.readTag();
                }
                // Last one without readTag.
                newArray[i] = new Deal();
                input.readMessage(newArray[i]);
                this.deals = newArray;
                break;
              }
            }
          }
        }

        public static Pmp parseFrom(byte[] data)
            throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
          return com.google.protobuf.nano.MessageNano.mergeFrom(new Pmp(), data);
        }

        public static Pmp parseFrom(
                com.google.protobuf.nano.CodedInputByteBufferNano input)
            throws java.io.IOException {
          return new Pmp().mergeFrom(input);
        }
      }

      private static volatile Imp[] _emptyArray;
      public static Imp[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new Imp[0];
            }
          }
        }
        return _emptyArray;
      }

      // required string id = 1;
      public String id;

      // optional .com.hykj.gamecenter.protocol.BidRequest.Imp.Banner banner = 2;
      public Banner banner;

      // optional .com.hykj.gamecenter.protocol.BidRequest.Imp.Video video = 3;
      public Video video;

      // optional string displaymanager = 4;
      public String displaymanager;

      // optional string displaymanagerver = 5;
      public String displaymanagerver;

      // optional bool instl = 6;
      public boolean instl;

      // optional string tagid = 7;
      public String tagid;

      // optional double bidfloor = 8 [default = 0];
      public double bidfloor;

      // optional string bidfloorcur = 9 [default = "USD"];
      public String bidfloorcur;

      // optional bool secure = 12;
      public boolean secure;

      // repeated string iframebuster = 10;
      public String[] iframebuster;

      // optional .com.hykj.gamecenter.protocol.BidRequest.Imp.Pmp pmp = 11;
      public Pmp pmp;

      // optional .com.hykj.gamecenter.protocol.BidRequest.Imp.Native native = 13;
      public Native native_;

      public Imp() {
        clear();
      }

      public Imp clear() {
        id = "";
        banner = null;
        video = null;
        displaymanager = "";
        displaymanagerver = "";
        instl = false;
        tagid = "";
        bidfloor = 0D;
        bidfloorcur = "USD";
        secure = false;
        iframebuster = com.google.protobuf.nano.WireFormatNano.EMPTY_STRING_ARRAY;
        pmp = null;
        native_ = null;
        unknownFieldData = null;
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        output.writeString(1, this.id);
        if (this.banner != null) {
          output.writeMessage(2, this.banner);
        }
        if (this.video != null) {
          output.writeMessage(3, this.video);
        }
        if (!this.displaymanager.equals("")) {
          output.writeString(4, this.displaymanager);
        }
        if (!this.displaymanagerver.equals("")) {
          output.writeString(5, this.displaymanagerver);
        }
        if (this.instl != false) {
          output.writeBool(6, this.instl);
        }
        if (!this.tagid.equals("")) {
          output.writeString(7, this.tagid);
        }
        if (Double.doubleToLongBits(this.bidfloor)
            != Double.doubleToLongBits(0D)) {
          output.writeDouble(8, this.bidfloor);
        }
        if (!this.bidfloorcur.equals("USD")) {
          output.writeString(9, this.bidfloorcur);
        }
        if (this.iframebuster != null && this.iframebuster.length > 0) {
          for (int i = 0; i < this.iframebuster.length; i++) {
            String element = this.iframebuster[i];
            if (element != null) {
              output.writeString(10, element);
            }
          }
        }
        if (this.pmp != null) {
          output.writeMessage(11, this.pmp);
        }
        if (this.secure != false) {
          output.writeBool(12, this.secure);
        }
        if (this.native_ != null) {
          output.writeMessage(13, this.native_);
        }
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.id);
        if (this.banner != null) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeMessageSize(2, this.banner);
        }
        if (this.video != null) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeMessageSize(3, this.video);
        }
        if (!this.displaymanager.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(4, this.displaymanager);
        }
        if (!this.displaymanagerver.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(5, this.displaymanagerver);
        }
        if (this.instl != false) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeBoolSize(6, this.instl);
        }
        if (!this.tagid.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(7, this.tagid);
        }
        if (Double.doubleToLongBits(this.bidfloor)
            != Double.doubleToLongBits(0D)) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeDoubleSize(8, this.bidfloor);
        }
        if (!this.bidfloorcur.equals("USD")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(9, this.bidfloorcur);
        }
        if (this.iframebuster != null && this.iframebuster.length > 0) {
          int dataCount = 0;
          int dataSize = 0;
          for (int i = 0; i < this.iframebuster.length; i++) {
            String element = this.iframebuster[i];
            if (element != null) {
              dataCount++;
              dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                  .computeStringSizeNoTag(element);
            }
          }
          size += dataSize;
          size += 1 * dataCount;
        }
        if (this.pmp != null) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeMessageSize(11, this.pmp);
        }
        if (this.secure != false) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeBoolSize(12, this.secure);
        }
        if (this.native_ != null) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeMessageSize(13, this.native_);
        }
        return size;
      }

      @Override
      public Imp mergeFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!storeUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              this.id = input.readString();
              break;
            }
            case 18: {
              if (this.banner == null) {
                this.banner = new Banner();
              }
              input.readMessage(this.banner);
              break;
            }
            case 26: {
              if (this.video == null) {
                this.video = new Video();
              }
              input.readMessage(this.video);
              break;
            }
            case 34: {
              this.displaymanager = input.readString();
              break;
            }
            case 42: {
              this.displaymanagerver = input.readString();
              break;
            }
            case 48: {
              this.instl = input.readBool();
              break;
            }
            case 58: {
              this.tagid = input.readString();
              break;
            }
            case 65: {
              this.bidfloor = input.readDouble();
              break;
            }
            case 74: {
              this.bidfloorcur = input.readString();
              break;
            }
            case 82: {
              int arrayLength = com.google.protobuf.nano.WireFormatNano
                  .getRepeatedFieldArrayLength(input, 82);
              int i = this.iframebuster == null ? 0 : this.iframebuster.length;
              String[] newArray = new String[i + arrayLength];
              if (i != 0) {
                System.arraycopy(this.iframebuster, 0, newArray, 0, i);
              }
              for (; i < newArray.length - 1; i++) {
                newArray[i] = input.readString();
                input.readTag();
              }
              // Last one without readTag.
              newArray[i] = input.readString();
              this.iframebuster = newArray;
              break;
            }
            case 90: {
              if (this.pmp == null) {
                this.pmp = new Pmp();
              }
              input.readMessage(this.pmp);
              break;
            }
            case 96: {
              this.secure = input.readBool();
              break;
            }
            case 106: {
              if (this.native_ == null) {
                this.native_ = new Native();
              }
              input.readMessage(this.native_);
              break;
            }
          }
        }
      }

      public static Imp parseFrom(byte[] data)
          throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
        return com.google.protobuf.nano.MessageNano.mergeFrom(new Imp(), data);
      }

      public static Imp parseFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new Imp().mergeFrom(input);
      }
    }

    public static final class Site extends
        com.google.protobuf.nano.ExtendableMessageNano<Site> {

      private static volatile Site[] _emptyArray;
      public static Site[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new Site[0];
            }
          }
        }
        return _emptyArray;
      }

      // optional string id = 1;
      public String id;

      // optional string name = 2;
      public String name;

      // optional string domain = 3;
      public String domain;

      // repeated string cat = 4;
      public String[] cat;

      // repeated string sectioncat = 5;
      public String[] sectioncat;

      // repeated string pagecat = 6;
      public String[] pagecat;

      // optional string page = 7;
      public String page;

      // optional bool privacypolicy = 8;
      public boolean privacypolicy;

      // optional string ref = 9;
      public String ref;

      // optional string search = 10;
      public String search;

      // optional .com.hykj.gamecenter.protocol.BidRequest.Publisher publisher = 11;
      public Publisher publisher;

      // optional .com.hykj.gamecenter.protocol.BidRequest.Content content = 12;
      public Content content;

      // optional string keywords = 13;
      public String keywords;

      // optional bool mobile = 15;
      public boolean mobile;

      public Site() {
        clear();
      }

      public Site clear() {
        id = "";
        name = "";
        domain = "";
        cat = com.google.protobuf.nano.WireFormatNano.EMPTY_STRING_ARRAY;
        sectioncat = com.google.protobuf.nano.WireFormatNano.EMPTY_STRING_ARRAY;
        pagecat = com.google.protobuf.nano.WireFormatNano.EMPTY_STRING_ARRAY;
        page = "";
        privacypolicy = false;
        ref = "";
        search = "";
        publisher = null;
        content = null;
        keywords = "";
        mobile = false;
        unknownFieldData = null;
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        if (!this.id.equals("")) {
          output.writeString(1, this.id);
        }
        if (!this.name.equals("")) {
          output.writeString(2, this.name);
        }
        if (!this.domain.equals("")) {
          output.writeString(3, this.domain);
        }
        if (this.cat != null && this.cat.length > 0) {
          for (int i = 0; i < this.cat.length; i++) {
            String element = this.cat[i];
            if (element != null) {
              output.writeString(4, element);
            }
          }
        }
        if (this.sectioncat != null && this.sectioncat.length > 0) {
          for (int i = 0; i < this.sectioncat.length; i++) {
            String element = this.sectioncat[i];
            if (element != null) {
              output.writeString(5, element);
            }
          }
        }
        if (this.pagecat != null && this.pagecat.length > 0) {
          for (int i = 0; i < this.pagecat.length; i++) {
            String element = this.pagecat[i];
            if (element != null) {
              output.writeString(6, element);
            }
          }
        }
        if (!this.page.equals("")) {
          output.writeString(7, this.page);
        }
        if (this.privacypolicy != false) {
          output.writeBool(8, this.privacypolicy);
        }
        if (!this.ref.equals("")) {
          output.writeString(9, this.ref);
        }
        if (!this.search.equals("")) {
          output.writeString(10, this.search);
        }
        if (this.publisher != null) {
          output.writeMessage(11, this.publisher);
        }
        if (this.content != null) {
          output.writeMessage(12, this.content);
        }
        if (!this.keywords.equals("")) {
          output.writeString(13, this.keywords);
        }
        if (this.mobile != false) {
          output.writeBool(15, this.mobile);
        }
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        if (!this.id.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(1, this.id);
        }
        if (!this.name.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(2, this.name);
        }
        if (!this.domain.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(3, this.domain);
        }
        if (this.cat != null && this.cat.length > 0) {
          int dataCount = 0;
          int dataSize = 0;
          for (int i = 0; i < this.cat.length; i++) {
            String element = this.cat[i];
            if (element != null) {
              dataCount++;
              dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                  .computeStringSizeNoTag(element);
            }
          }
          size += dataSize;
          size += 1 * dataCount;
        }
        if (this.sectioncat != null && this.sectioncat.length > 0) {
          int dataCount = 0;
          int dataSize = 0;
          for (int i = 0; i < this.sectioncat.length; i++) {
            String element = this.sectioncat[i];
            if (element != null) {
              dataCount++;
              dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                  .computeStringSizeNoTag(element);
            }
          }
          size += dataSize;
          size += 1 * dataCount;
        }
        if (this.pagecat != null && this.pagecat.length > 0) {
          int dataCount = 0;
          int dataSize = 0;
          for (int i = 0; i < this.pagecat.length; i++) {
            String element = this.pagecat[i];
            if (element != null) {
              dataCount++;
              dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                  .computeStringSizeNoTag(element);
            }
          }
          size += dataSize;
          size += 1 * dataCount;
        }
        if (!this.page.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(7, this.page);
        }
        if (this.privacypolicy != false) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeBoolSize(8, this.privacypolicy);
        }
        if (!this.ref.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(9, this.ref);
        }
        if (!this.search.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(10, this.search);
        }
        if (this.publisher != null) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeMessageSize(11, this.publisher);
        }
        if (this.content != null) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeMessageSize(12, this.content);
        }
        if (!this.keywords.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(13, this.keywords);
        }
        if (this.mobile != false) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeBoolSize(15, this.mobile);
        }
        return size;
      }

      @Override
      public Site mergeFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!storeUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              this.id = input.readString();
              break;
            }
            case 18: {
              this.name = input.readString();
              break;
            }
            case 26: {
              this.domain = input.readString();
              break;
            }
            case 34: {
              int arrayLength = com.google.protobuf.nano.WireFormatNano
                  .getRepeatedFieldArrayLength(input, 34);
              int i = this.cat == null ? 0 : this.cat.length;
              String[] newArray = new String[i + arrayLength];
              if (i != 0) {
                System.arraycopy(this.cat, 0, newArray, 0, i);
              }
              for (; i < newArray.length - 1; i++) {
                newArray[i] = input.readString();
                input.readTag();
              }
              // Last one without readTag.
              newArray[i] = input.readString();
              this.cat = newArray;
              break;
            }
            case 42: {
              int arrayLength = com.google.protobuf.nano.WireFormatNano
                  .getRepeatedFieldArrayLength(input, 42);
              int i = this.sectioncat == null ? 0 : this.sectioncat.length;
              String[] newArray = new String[i + arrayLength];
              if (i != 0) {
                System.arraycopy(this.sectioncat, 0, newArray, 0, i);
              }
              for (; i < newArray.length - 1; i++) {
                newArray[i] = input.readString();
                input.readTag();
              }
              // Last one without readTag.
              newArray[i] = input.readString();
              this.sectioncat = newArray;
              break;
            }
            case 50: {
              int arrayLength = com.google.protobuf.nano.WireFormatNano
                  .getRepeatedFieldArrayLength(input, 50);
              int i = this.pagecat == null ? 0 : this.pagecat.length;
              String[] newArray = new String[i + arrayLength];
              if (i != 0) {
                System.arraycopy(this.pagecat, 0, newArray, 0, i);
              }
              for (; i < newArray.length - 1; i++) {
                newArray[i] = input.readString();
                input.readTag();
              }
              // Last one without readTag.
              newArray[i] = input.readString();
              this.pagecat = newArray;
              break;
            }
            case 58: {
              this.page = input.readString();
              break;
            }
            case 64: {
              this.privacypolicy = input.readBool();
              break;
            }
            case 74: {
              this.ref = input.readString();
              break;
            }
            case 82: {
              this.search = input.readString();
              break;
            }
            case 90: {
              if (this.publisher == null) {
                this.publisher = new Publisher();
              }
              input.readMessage(this.publisher);
              break;
            }
            case 98: {
              if (this.content == null) {
                this.content = new Content();
              }
              input.readMessage(this.content);
              break;
            }
            case 106: {
              this.keywords = input.readString();
              break;
            }
            case 120: {
              this.mobile = input.readBool();
              break;
            }
          }
        }
      }

      public static Site parseFrom(byte[] data)
          throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
        return com.google.protobuf.nano.MessageNano.mergeFrom(new Site(), data);
      }

      public static Site parseFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new Site().mergeFrom(input);
      }
    }

    public static final class App extends
        com.google.protobuf.nano.ExtendableMessageNano<App> {

      private static volatile App[] _emptyArray;
      public static App[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new App[0];
            }
          }
        }
        return _emptyArray;
      }

      // optional string id = 1;
      public String id;

      // optional string name = 2;
      public String name;

      // optional string domain = 3;
      public String domain;

      // repeated string cat = 4;
      public String[] cat;

      // repeated string sectioncat = 5;
      public String[] sectioncat;

      // repeated string pagecat = 6;
      public String[] pagecat;

      // optional string ver = 7;
      public String ver;

      // optional string bundle = 8;
      public String bundle;

      // optional bool privacypolicy = 9;
      public boolean privacypolicy;

      // optional bool paid = 10;
      public boolean paid;

      // optional .com.hykj.gamecenter.protocol.BidRequest.Publisher publisher = 11;
      public Publisher publisher;

      // optional .com.hykj.gamecenter.protocol.BidRequest.Content content = 12;
      public Content content;

      // optional string keywords = 13;
      public String keywords;

      // optional string storeurl = 16;
      public String storeurl;

      public App() {
        clear();
      }

      public App clear() {
        id = "";
        name = "";
        domain = "";
        cat = com.google.protobuf.nano.WireFormatNano.EMPTY_STRING_ARRAY;
        sectioncat = com.google.protobuf.nano.WireFormatNano.EMPTY_STRING_ARRAY;
        pagecat = com.google.protobuf.nano.WireFormatNano.EMPTY_STRING_ARRAY;
        ver = "";
        bundle = "";
        privacypolicy = false;
        paid = false;
        publisher = null;
        content = null;
        keywords = "";
        storeurl = "";
        unknownFieldData = null;
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        if (!this.id.equals("")) {
          output.writeString(1, this.id);
        }
        if (!this.name.equals("")) {
          output.writeString(2, this.name);
        }
        if (!this.domain.equals("")) {
          output.writeString(3, this.domain);
        }
        if (this.cat != null && this.cat.length > 0) {
          for (int i = 0; i < this.cat.length; i++) {
            String element = this.cat[i];
            if (element != null) {
              output.writeString(4, element);
            }
          }
        }
        if (this.sectioncat != null && this.sectioncat.length > 0) {
          for (int i = 0; i < this.sectioncat.length; i++) {
            String element = this.sectioncat[i];
            if (element != null) {
              output.writeString(5, element);
            }
          }
        }
        if (this.pagecat != null && this.pagecat.length > 0) {
          for (int i = 0; i < this.pagecat.length; i++) {
            String element = this.pagecat[i];
            if (element != null) {
              output.writeString(6, element);
            }
          }
        }
        if (!this.ver.equals("")) {
          output.writeString(7, this.ver);
        }
        if (!this.bundle.equals("")) {
          output.writeString(8, this.bundle);
        }
        if (this.privacypolicy != false) {
          output.writeBool(9, this.privacypolicy);
        }
        if (this.paid != false) {
          output.writeBool(10, this.paid);
        }
        if (this.publisher != null) {
          output.writeMessage(11, this.publisher);
        }
        if (this.content != null) {
          output.writeMessage(12, this.content);
        }
        if (!this.keywords.equals("")) {
          output.writeString(13, this.keywords);
        }
        if (!this.storeurl.equals("")) {
          output.writeString(16, this.storeurl);
        }
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        if (!this.id.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(1, this.id);
        }
        if (!this.name.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(2, this.name);
        }
        if (!this.domain.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(3, this.domain);
        }
        if (this.cat != null && this.cat.length > 0) {
          int dataCount = 0;
          int dataSize = 0;
          for (int i = 0; i < this.cat.length; i++) {
            String element = this.cat[i];
            if (element != null) {
              dataCount++;
              dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                  .computeStringSizeNoTag(element);
            }
          }
          size += dataSize;
          size += 1 * dataCount;
        }
        if (this.sectioncat != null && this.sectioncat.length > 0) {
          int dataCount = 0;
          int dataSize = 0;
          for (int i = 0; i < this.sectioncat.length; i++) {
            String element = this.sectioncat[i];
            if (element != null) {
              dataCount++;
              dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                  .computeStringSizeNoTag(element);
            }
          }
          size += dataSize;
          size += 1 * dataCount;
        }
        if (this.pagecat != null && this.pagecat.length > 0) {
          int dataCount = 0;
          int dataSize = 0;
          for (int i = 0; i < this.pagecat.length; i++) {
            String element = this.pagecat[i];
            if (element != null) {
              dataCount++;
              dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                  .computeStringSizeNoTag(element);
            }
          }
          size += dataSize;
          size += 1 * dataCount;
        }
        if (!this.ver.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(7, this.ver);
        }
        if (!this.bundle.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(8, this.bundle);
        }
        if (this.privacypolicy != false) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeBoolSize(9, this.privacypolicy);
        }
        if (this.paid != false) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeBoolSize(10, this.paid);
        }
        if (this.publisher != null) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeMessageSize(11, this.publisher);
        }
        if (this.content != null) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeMessageSize(12, this.content);
        }
        if (!this.keywords.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(13, this.keywords);
        }
        if (!this.storeurl.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(16, this.storeurl);
        }
        return size;
      }

      @Override
      public App mergeFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!storeUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              this.id = input.readString();
              break;
            }
            case 18: {
              this.name = input.readString();
              break;
            }
            case 26: {
              this.domain = input.readString();
              break;
            }
            case 34: {
              int arrayLength = com.google.protobuf.nano.WireFormatNano
                  .getRepeatedFieldArrayLength(input, 34);
              int i = this.cat == null ? 0 : this.cat.length;
              String[] newArray = new String[i + arrayLength];
              if (i != 0) {
                System.arraycopy(this.cat, 0, newArray, 0, i);
              }
              for (; i < newArray.length - 1; i++) {
                newArray[i] = input.readString();
                input.readTag();
              }
              // Last one without readTag.
              newArray[i] = input.readString();
              this.cat = newArray;
              break;
            }
            case 42: {
              int arrayLength = com.google.protobuf.nano.WireFormatNano
                  .getRepeatedFieldArrayLength(input, 42);
              int i = this.sectioncat == null ? 0 : this.sectioncat.length;
              String[] newArray = new String[i + arrayLength];
              if (i != 0) {
                System.arraycopy(this.sectioncat, 0, newArray, 0, i);
              }
              for (; i < newArray.length - 1; i++) {
                newArray[i] = input.readString();
                input.readTag();
              }
              // Last one without readTag.
              newArray[i] = input.readString();
              this.sectioncat = newArray;
              break;
            }
            case 50: {
              int arrayLength = com.google.protobuf.nano.WireFormatNano
                  .getRepeatedFieldArrayLength(input, 50);
              int i = this.pagecat == null ? 0 : this.pagecat.length;
              String[] newArray = new String[i + arrayLength];
              if (i != 0) {
                System.arraycopy(this.pagecat, 0, newArray, 0, i);
              }
              for (; i < newArray.length - 1; i++) {
                newArray[i] = input.readString();
                input.readTag();
              }
              // Last one without readTag.
              newArray[i] = input.readString();
              this.pagecat = newArray;
              break;
            }
            case 58: {
              this.ver = input.readString();
              break;
            }
            case 66: {
              this.bundle = input.readString();
              break;
            }
            case 72: {
              this.privacypolicy = input.readBool();
              break;
            }
            case 80: {
              this.paid = input.readBool();
              break;
            }
            case 90: {
              if (this.publisher == null) {
                this.publisher = new Publisher();
              }
              input.readMessage(this.publisher);
              break;
            }
            case 98: {
              if (this.content == null) {
                this.content = new Content();
              }
              input.readMessage(this.content);
              break;
            }
            case 106: {
              this.keywords = input.readString();
              break;
            }
            case 130: {
              this.storeurl = input.readString();
              break;
            }
          }
        }
      }

      public static App parseFrom(byte[] data)
          throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
        return com.google.protobuf.nano.MessageNano.mergeFrom(new App(), data);
      }

      public static App parseFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new App().mergeFrom(input);
      }
    }

    public static final class Publisher extends
        com.google.protobuf.nano.ExtendableMessageNano<Publisher> {

      private static volatile Publisher[] _emptyArray;
      public static Publisher[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new Publisher[0];
            }
          }
        }
        return _emptyArray;
      }

      // optional string id = 1;
      public String id;

      // optional string name = 2;
      public String name;

      // repeated string cat = 3;
      public String[] cat;

      // optional string domain = 4;
      public String domain;

      public Publisher() {
        clear();
      }

      public Publisher clear() {
        id = "";
        name = "";
        cat = com.google.protobuf.nano.WireFormatNano.EMPTY_STRING_ARRAY;
        domain = "";
        unknownFieldData = null;
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        if (!this.id.equals("")) {
          output.writeString(1, this.id);
        }
        if (!this.name.equals("")) {
          output.writeString(2, this.name);
        }
        if (this.cat != null && this.cat.length > 0) {
          for (int i = 0; i < this.cat.length; i++) {
            String element = this.cat[i];
            if (element != null) {
              output.writeString(3, element);
            }
          }
        }
        if (!this.domain.equals("")) {
          output.writeString(4, this.domain);
        }
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        if (!this.id.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(1, this.id);
        }
        if (!this.name.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(2, this.name);
        }
        if (this.cat != null && this.cat.length > 0) {
          int dataCount = 0;
          int dataSize = 0;
          for (int i = 0; i < this.cat.length; i++) {
            String element = this.cat[i];
            if (element != null) {
              dataCount++;
              dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                  .computeStringSizeNoTag(element);
            }
          }
          size += dataSize;
          size += 1 * dataCount;
        }
        if (!this.domain.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(4, this.domain);
        }
        return size;
      }

      @Override
      public Publisher mergeFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!storeUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              this.id = input.readString();
              break;
            }
            case 18: {
              this.name = input.readString();
              break;
            }
            case 26: {
              int arrayLength = com.google.protobuf.nano.WireFormatNano
                  .getRepeatedFieldArrayLength(input, 26);
              int i = this.cat == null ? 0 : this.cat.length;
              String[] newArray = new String[i + arrayLength];
              if (i != 0) {
                System.arraycopy(this.cat, 0, newArray, 0, i);
              }
              for (; i < newArray.length - 1; i++) {
                newArray[i] = input.readString();
                input.readTag();
              }
              // Last one without readTag.
              newArray[i] = input.readString();
              this.cat = newArray;
              break;
            }
            case 34: {
              this.domain = input.readString();
              break;
            }
          }
        }
      }

      public static Publisher parseFrom(byte[] data)
          throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
        return com.google.protobuf.nano.MessageNano.mergeFrom(new Publisher(), data);
      }

      public static Publisher parseFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new Publisher().mergeFrom(input);
      }
    }

    public static final class Content extends
        com.google.protobuf.nano.ExtendableMessageNano<Content> {

      // enum VideoQuality
      public static final int QUALITY_UNKNOWN = 0;
      public static final int PROFESSIONAL = 1;
      public static final int PROSUMER = 2;
      public static final int USER_GENERATED = 3;

      // enum ContentContext
      public static final int VIDEO = 1;
      public static final int GAME = 2;
      public static final int MUSIC = 3;
      public static final int APPLICATION = 4;
      public static final int TEXT = 5;
      public static final int OTHER = 6;
      public static final int CONTEXT_UNKNOWN = 7;

      // enum QAGMediaRating
      public static final int ALL_AUDIENCES = 1;
      public static final int EVERYONE_OVER_12 = 2;
      public static final int MATURE = 3;

      private static volatile Content[] _emptyArray;
      public static Content[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new Content[0];
            }
          }
        }
        return _emptyArray;
      }

      // optional string id = 1;
      public String id;

      // optional int32 episode = 2;
      public int episode;

      // optional string title = 3;
      public String title;

      // optional string series = 4;
      public String series;

      // optional string season = 5;
      public String season;

      // optional string url = 6;
      public String url;

      // repeated string cat = 7;
      public String[] cat;

      // optional .com.hykj.gamecenter.protocol.BidRequest.Content.VideoQuality videoquality = 8;
      public int videoquality;

      // optional string keywords = 9;
      public String keywords;

      // optional string contentrating = 10;
      public String contentrating;

      // optional string userrating = 11;
      public String userrating;

      // optional .com.hykj.gamecenter.protocol.BidRequest.Content.ContentContext context = 20;
      public int context;

      // optional string context_22 = 12;
      public String context22;

      // optional bool livestream = 13;
      public boolean livestream;

      // optional bool sourcerelationship = 14;
      public boolean sourcerelationship;

      // optional .com.hykj.gamecenter.protocol.BidRequest.Producer producer = 15;
      public Producer producer;

      // optional int32 len = 16;
      public int len;

      // optional .com.hykj.gamecenter.protocol.BidRequest.Content.QAGMediaRating qagmediarating = 17;
      public int qagmediarating;

      // optional bool embeddable = 18;
      public boolean embeddable;

      // optional string language = 19;
      public String language;

      public Content() {
        clear();
      }

      public Content clear() {
        id = "";
        episode = 0;
        title = "";
        series = "";
        season = "";
        url = "";
        cat = com.google.protobuf.nano.WireFormatNano.EMPTY_STRING_ARRAY;
        videoquality = Content.QUALITY_UNKNOWN;
        keywords = "";
        contentrating = "";
        userrating = "";
        context = Content.VIDEO;
        context22 = "";
        livestream = false;
        sourcerelationship = false;
        producer = null;
        len = 0;
        qagmediarating = Content.ALL_AUDIENCES;
        embeddable = false;
        language = "";
        unknownFieldData = null;
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        if (!this.id.equals("")) {
          output.writeString(1, this.id);
        }
        if (this.episode != 0) {
          output.writeInt32(2, this.episode);
        }
        if (!this.title.equals("")) {
          output.writeString(3, this.title);
        }
        if (!this.series.equals("")) {
          output.writeString(4, this.series);
        }
        if (!this.season.equals("")) {
          output.writeString(5, this.season);
        }
        if (!this.url.equals("")) {
          output.writeString(6, this.url);
        }
        if (this.cat != null && this.cat.length > 0) {
          for (int i = 0; i < this.cat.length; i++) {
            String element = this.cat[i];
            if (element != null) {
              output.writeString(7, element);
            }
          }
        }
        if (this.videoquality != Content.QUALITY_UNKNOWN) {
          output.writeInt32(8, this.videoquality);
        }
        if (!this.keywords.equals("")) {
          output.writeString(9, this.keywords);
        }
        if (!this.contentrating.equals("")) {
          output.writeString(10, this.contentrating);
        }
        if (!this.userrating.equals("")) {
          output.writeString(11, this.userrating);
        }
        if (!this.context22.equals("")) {
          output.writeString(12, this.context22);
        }
        if (this.livestream != false) {
          output.writeBool(13, this.livestream);
        }
        if (this.sourcerelationship != false) {
          output.writeBool(14, this.sourcerelationship);
        }
        if (this.producer != null) {
          output.writeMessage(15, this.producer);
        }
        if (this.len != 0) {
          output.writeInt32(16, this.len);
        }
        if (this.qagmediarating != Content.ALL_AUDIENCES) {
          output.writeInt32(17, this.qagmediarating);
        }
        if (this.embeddable != false) {
          output.writeBool(18, this.embeddable);
        }
        if (!this.language.equals("")) {
          output.writeString(19, this.language);
        }
        if (this.context != Content.VIDEO) {
          output.writeInt32(20, this.context);
        }
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        if (!this.id.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(1, this.id);
        }
        if (this.episode != 0) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeInt32Size(2, this.episode);
        }
        if (!this.title.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(3, this.title);
        }
        if (!this.series.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(4, this.series);
        }
        if (!this.season.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(5, this.season);
        }
        if (!this.url.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(6, this.url);
        }
        if (this.cat != null && this.cat.length > 0) {
          int dataCount = 0;
          int dataSize = 0;
          for (int i = 0; i < this.cat.length; i++) {
            String element = this.cat[i];
            if (element != null) {
              dataCount++;
              dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                  .computeStringSizeNoTag(element);
            }
          }
          size += dataSize;
          size += 1 * dataCount;
        }
        if (this.videoquality != Content.QUALITY_UNKNOWN) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(8, this.videoquality);
        }
        if (!this.keywords.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(9, this.keywords);
        }
        if (!this.contentrating.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(10, this.contentrating);
        }
        if (!this.userrating.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(11, this.userrating);
        }
        if (!this.context22.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(12, this.context22);
        }
        if (this.livestream != false) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeBoolSize(13, this.livestream);
        }
        if (this.sourcerelationship != false) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeBoolSize(14, this.sourcerelationship);
        }
        if (this.producer != null) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeMessageSize(15, this.producer);
        }
        if (this.len != 0) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeInt32Size(16, this.len);
        }
        if (this.qagmediarating != Content.ALL_AUDIENCES) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(17, this.qagmediarating);
        }
        if (this.embeddable != false) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeBoolSize(18, this.embeddable);
        }
        if (!this.language.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(19, this.language);
        }
        if (this.context != Content.VIDEO) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(20, this.context);
        }
        return size;
      }

      @Override
      public Content mergeFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!storeUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              this.id = input.readString();
              break;
            }
            case 16: {
              this.episode = input.readInt32();
              break;
            }
            case 26: {
              this.title = input.readString();
              break;
            }
            case 34: {
              this.series = input.readString();
              break;
            }
            case 42: {
              this.season = input.readString();
              break;
            }
            case 50: {
              this.url = input.readString();
              break;
            }
            case 58: {
              int arrayLength = com.google.protobuf.nano.WireFormatNano
                  .getRepeatedFieldArrayLength(input, 58);
              int i = this.cat == null ? 0 : this.cat.length;
              String[] newArray = new String[i + arrayLength];
              if (i != 0) {
                System.arraycopy(this.cat, 0, newArray, 0, i);
              }
              for (; i < newArray.length - 1; i++) {
                newArray[i] = input.readString();
                input.readTag();
              }
              // Last one without readTag.
              newArray[i] = input.readString();
              this.cat = newArray;
              break;
            }
            case 64: {
              int value = input.readInt32();
              switch (value) {
                case Content.QUALITY_UNKNOWN:
                case Content.PROFESSIONAL:
                case Content.PROSUMER:
                case Content.USER_GENERATED:
                  this.videoquality = value;
                  break;
              }
              break;
            }
            case 74: {
              this.keywords = input.readString();
              break;
            }
            case 82: {
              this.contentrating = input.readString();
              break;
            }
            case 90: {
              this.userrating = input.readString();
              break;
            }
            case 98: {
              this.context22 = input.readString();
              break;
            }
            case 104: {
              this.livestream = input.readBool();
              break;
            }
            case 112: {
              this.sourcerelationship = input.readBool();
              break;
            }
            case 122: {
              if (this.producer == null) {
                this.producer = new Producer();
              }
              input.readMessage(this.producer);
              break;
            }
            case 128: {
              this.len = input.readInt32();
              break;
            }
            case 136: {
              int value = input.readInt32();
              switch (value) {
                case Content.ALL_AUDIENCES:
                case Content.EVERYONE_OVER_12:
                case Content.MATURE:
                  this.qagmediarating = value;
                  break;
              }
              break;
            }
            case 144: {
              this.embeddable = input.readBool();
              break;
            }
            case 154: {
              this.language = input.readString();
              break;
            }
            case 160: {
              int value = input.readInt32();
              switch (value) {
                case Content.VIDEO:
                case Content.GAME:
                case Content.MUSIC:
                case Content.APPLICATION:
                case Content.TEXT:
                case Content.OTHER:
                case Content.CONTEXT_UNKNOWN:
                  this.context = value;
                  break;
              }
              break;
            }
          }
        }
      }

      public static Content parseFrom(byte[] data)
          throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
        return com.google.protobuf.nano.MessageNano.mergeFrom(new Content(), data);
      }

      public static Content parseFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new Content().mergeFrom(input);
      }
    }

    public static final class Producer extends
        com.google.protobuf.nano.ExtendableMessageNano<Producer> {

      private static volatile Producer[] _emptyArray;
      public static Producer[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new Producer[0];
            }
          }
        }
        return _emptyArray;
      }

      // optional string id = 1;
      public String id;

      // optional string name = 2;
      public String name;

      // repeated string cat = 3;
      public String[] cat;

      // optional string domain = 4;
      public String domain;

      public Producer() {
        clear();
      }

      public Producer clear() {
        id = "";
        name = "";
        cat = com.google.protobuf.nano.WireFormatNano.EMPTY_STRING_ARRAY;
        domain = "";
        unknownFieldData = null;
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        if (!this.id.equals("")) {
          output.writeString(1, this.id);
        }
        if (!this.name.equals("")) {
          output.writeString(2, this.name);
        }
        if (this.cat != null && this.cat.length > 0) {
          for (int i = 0; i < this.cat.length; i++) {
            String element = this.cat[i];
            if (element != null) {
              output.writeString(3, element);
            }
          }
        }
        if (!this.domain.equals("")) {
          output.writeString(4, this.domain);
        }
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        if (!this.id.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(1, this.id);
        }
        if (!this.name.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(2, this.name);
        }
        if (this.cat != null && this.cat.length > 0) {
          int dataCount = 0;
          int dataSize = 0;
          for (int i = 0; i < this.cat.length; i++) {
            String element = this.cat[i];
            if (element != null) {
              dataCount++;
              dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                  .computeStringSizeNoTag(element);
            }
          }
          size += dataSize;
          size += 1 * dataCount;
        }
        if (!this.domain.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(4, this.domain);
        }
        return size;
      }

      @Override
      public Producer mergeFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!storeUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              this.id = input.readString();
              break;
            }
            case 18: {
              this.name = input.readString();
              break;
            }
            case 26: {
              int arrayLength = com.google.protobuf.nano.WireFormatNano
                  .getRepeatedFieldArrayLength(input, 26);
              int i = this.cat == null ? 0 : this.cat.length;
              String[] newArray = new String[i + arrayLength];
              if (i != 0) {
                System.arraycopy(this.cat, 0, newArray, 0, i);
              }
              for (; i < newArray.length - 1; i++) {
                newArray[i] = input.readString();
                input.readTag();
              }
              // Last one without readTag.
              newArray[i] = input.readString();
              this.cat = newArray;
              break;
            }
            case 34: {
              this.domain = input.readString();
              break;
            }
          }
        }
      }

      public static Producer parseFrom(byte[] data)
          throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
        return com.google.protobuf.nano.MessageNano.mergeFrom(new Producer(), data);
      }

      public static Producer parseFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new Producer().mergeFrom(input);
      }
    }

    public static final class Device extends
        com.google.protobuf.nano.ExtendableMessageNano<Device> {

      // enum DeviceType
      public static final int MOBILE = 1;
      public static final int PERSONAL_COMPUTER = 2;
      public static final int CONNECTED_TV = 3;
      public static final int PHONE = 4;
      public static final int TABLET = 5;
      public static final int CONNECTED_DEVICE = 6;
      public static final int SET_TOP_BOX = 7;

      // enum ConnectionType
      public static final int CONNECTION_UNKNOWN = 0;
      public static final int ETHERNET = 1;
      public static final int WIFI = 2;
      public static final int CELL_UNKNOWN = 3;
      public static final int CELL_2G = 4;
      public static final int CELL_3G = 5;
      public static final int CELL_4G = 6;

      private static volatile Device[] _emptyArray;
      public static Device[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new Device[0];
            }
          }
        }
        return _emptyArray;
      }

      // optional bool dnt = 1;
      public boolean dnt;

      // optional string ua = 2;
      public String ua;

      // optional string ip = 3;
      public String ip;

      // optional .com.hykj.gamecenter.protocol.BidRequest.Geo geo = 4;
      public Geo geo;

      // optional string didsha1 = 5;
      public String didsha1;

      // optional string didmd5 = 6;
      public String didmd5;

      // optional string dpidsha1 = 7;
      public String dpidsha1;

      // optional string dpidmd5 = 8;
      public String dpidmd5;

      // optional string ipv6 = 9;
      public String ipv6;

      // optional string carrier = 10;
      public String carrier;

      // optional string language = 11;
      public String language;

      // optional string make = 12;
      public String make;

      // optional string model = 13;
      public String model;

      // optional string os = 14;
      public String os;

      // optional string osv = 15;
      public String osv;

      // optional string hwv = 24;
      public String hwv;

      // optional int32 w = 25;
      public int w;

      // optional int32 h = 26;
      public int h;

      // optional int32 ppi = 27;
      public int ppi;

      // optional double pxratio = 28;
      public double pxratio;

      // optional bool js = 16;
      public boolean js;

      // optional .com.hykj.gamecenter.protocol.BidRequest.Device.ConnectionType connectiontype = 17;
      public int connectiontype;

      // optional .com.hykj.gamecenter.protocol.BidRequest.Device.DeviceType devicetype = 18;
      public int devicetype;

      // optional string flashver = 19;
      public String flashver;

      // optional string ifa = 20;
      public String ifa;

      // optional string macsha1 = 21;
      public String macsha1;

      // optional string macmd5 = 22;
      public String macmd5;

      // optional bool lmt = 23;
      public boolean lmt;

      public Device() {
        clear();
      }

      public Device clear() {
        dnt = false;
        ua = "";
        ip = "";
        geo = null;
        didsha1 = "";
        didmd5 = "";
        dpidsha1 = "";
        dpidmd5 = "";
        ipv6 = "";
        carrier = "";
        language = "";
        make = "";
        model = "";
        os = "";
        osv = "";
        hwv = "";
        w = 0;
        h = 0;
        ppi = 0;
        pxratio = 0D;
        js = false;
        connectiontype = Device.CONNECTION_UNKNOWN;
        devicetype = Device.MOBILE;
        flashver = "";
        ifa = "";
        macsha1 = "";
        macmd5 = "";
        lmt = false;
        unknownFieldData = null;
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        if (this.dnt != false) {
          output.writeBool(1, this.dnt);
        }
        if (!this.ua.equals("")) {
          output.writeString(2, this.ua);
        }
        if (!this.ip.equals("")) {
          output.writeString(3, this.ip);
        }
        if (this.geo != null) {
          output.writeMessage(4, this.geo);
        }
        if (!this.didsha1.equals("")) {
          output.writeString(5, this.didsha1);
        }
        if (!this.didmd5.equals("")) {
          output.writeString(6, this.didmd5);
        }
        if (!this.dpidsha1.equals("")) {
          output.writeString(7, this.dpidsha1);
        }
        if (!this.dpidmd5.equals("")) {
          output.writeString(8, this.dpidmd5);
        }
        if (!this.ipv6.equals("")) {
          output.writeString(9, this.ipv6);
        }
        if (!this.carrier.equals("")) {
          output.writeString(10, this.carrier);
        }
        if (!this.language.equals("")) {
          output.writeString(11, this.language);
        }
        if (!this.make.equals("")) {
          output.writeString(12, this.make);
        }
        if (!this.model.equals("")) {
          output.writeString(13, this.model);
        }
        if (!this.os.equals("")) {
          output.writeString(14, this.os);
        }
        if (!this.osv.equals("")) {
          output.writeString(15, this.osv);
        }
        if (this.js != false) {
          output.writeBool(16, this.js);
        }
        if (this.connectiontype != Device.CONNECTION_UNKNOWN) {
          output.writeInt32(17, this.connectiontype);
        }
        if (this.devicetype != Device.MOBILE) {
          output.writeInt32(18, this.devicetype);
        }
        if (!this.flashver.equals("")) {
          output.writeString(19, this.flashver);
        }
        if (!this.ifa.equals("")) {
          output.writeString(20, this.ifa);
        }
        if (!this.macsha1.equals("")) {
          output.writeString(21, this.macsha1);
        }
        if (!this.macmd5.equals("")) {
          output.writeString(22, this.macmd5);
        }
        if (this.lmt != false) {
          output.writeBool(23, this.lmt);
        }
        if (!this.hwv.equals("")) {
          output.writeString(24, this.hwv);
        }
        if (this.w != 0) {
          output.writeInt32(25, this.w);
        }
        if (this.h != 0) {
          output.writeInt32(26, this.h);
        }
        if (this.ppi != 0) {
          output.writeInt32(27, this.ppi);
        }
        if (Double.doubleToLongBits(this.pxratio)
            != Double.doubleToLongBits(0D)) {
          output.writeDouble(28, this.pxratio);
        }
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        if (this.dnt != false) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeBoolSize(1, this.dnt);
        }
        if (!this.ua.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(2, this.ua);
        }
        if (!this.ip.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(3, this.ip);
        }
        if (this.geo != null) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeMessageSize(4, this.geo);
        }
        if (!this.didsha1.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(5, this.didsha1);
        }
        if (!this.didmd5.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(6, this.didmd5);
        }
        if (!this.dpidsha1.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(7, this.dpidsha1);
        }
        if (!this.dpidmd5.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(8, this.dpidmd5);
        }
        if (!this.ipv6.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(9, this.ipv6);
        }
        if (!this.carrier.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(10, this.carrier);
        }
        if (!this.language.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(11, this.language);
        }
        if (!this.make.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(12, this.make);
        }
        if (!this.model.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(13, this.model);
        }
        if (!this.os.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(14, this.os);
        }
        if (!this.osv.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(15, this.osv);
        }
        if (this.js != false) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeBoolSize(16, this.js);
        }
        if (this.connectiontype != Device.CONNECTION_UNKNOWN) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(17, this.connectiontype);
        }
        if (this.devicetype != Device.MOBILE) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(18, this.devicetype);
        }
        if (!this.flashver.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(19, this.flashver);
        }
        if (!this.ifa.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(20, this.ifa);
        }
        if (!this.macsha1.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(21, this.macsha1);
        }
        if (!this.macmd5.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(22, this.macmd5);
        }
        if (this.lmt != false) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeBoolSize(23, this.lmt);
        }
        if (!this.hwv.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(24, this.hwv);
        }
        if (this.w != 0) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeInt32Size(25, this.w);
        }
        if (this.h != 0) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeInt32Size(26, this.h);
        }
        if (this.ppi != 0) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeInt32Size(27, this.ppi);
        }
        if (Double.doubleToLongBits(this.pxratio)
            != Double.doubleToLongBits(0D)) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeDoubleSize(28, this.pxratio);
        }
        return size;
      }

      @Override
      public Device mergeFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!storeUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              this.dnt = input.readBool();
              break;
            }
            case 18: {
              this.ua = input.readString();
              break;
            }
            case 26: {
              this.ip = input.readString();
              break;
            }
            case 34: {
              if (this.geo == null) {
                this.geo = new Geo();
              }
              input.readMessage(this.geo);
              break;
            }
            case 42: {
              this.didsha1 = input.readString();
              break;
            }
            case 50: {
              this.didmd5 = input.readString();
              break;
            }
            case 58: {
              this.dpidsha1 = input.readString();
              break;
            }
            case 66: {
              this.dpidmd5 = input.readString();
              break;
            }
            case 74: {
              this.ipv6 = input.readString();
              break;
            }
            case 82: {
              this.carrier = input.readString();
              break;
            }
            case 90: {
              this.language = input.readString();
              break;
            }
            case 98: {
              this.make = input.readString();
              break;
            }
            case 106: {
              this.model = input.readString();
              break;
            }
            case 114: {
              this.os = input.readString();
              break;
            }
            case 122: {
              this.osv = input.readString();
              break;
            }
            case 128: {
              this.js = input.readBool();
              break;
            }
            case 136: {
              int value = input.readInt32();
              switch (value) {
                case Device.CONNECTION_UNKNOWN:
                case Device.ETHERNET:
                case Device.WIFI:
                case Device.CELL_UNKNOWN:
                case Device.CELL_2G:
                case Device.CELL_3G:
                case Device.CELL_4G:
                  this.connectiontype = value;
                  break;
              }
              break;
            }
            case 144: {
              int value = input.readInt32();
              switch (value) {
                case Device.MOBILE:
                case Device.PERSONAL_COMPUTER:
                case Device.CONNECTED_TV:
                case Device.PHONE:
                case Device.TABLET:
                case Device.CONNECTED_DEVICE:
                case Device.SET_TOP_BOX:
                  this.devicetype = value;
                  break;
              }
              break;
            }
            case 154: {
              this.flashver = input.readString();
              break;
            }
            case 162: {
              this.ifa = input.readString();
              break;
            }
            case 170: {
              this.macsha1 = input.readString();
              break;
            }
            case 178: {
              this.macmd5 = input.readString();
              break;
            }
            case 184: {
              this.lmt = input.readBool();
              break;
            }
            case 194: {
              this.hwv = input.readString();
              break;
            }
            case 200: {
              this.w = input.readInt32();
              break;
            }
            case 208: {
              this.h = input.readInt32();
              break;
            }
            case 216: {
              this.ppi = input.readInt32();
              break;
            }
            case 225: {
              this.pxratio = input.readDouble();
              break;
            }
          }
        }
      }

      public static Device parseFrom(byte[] data)
          throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
        return com.google.protobuf.nano.MessageNano.mergeFrom(new Device(), data);
      }

      public static Device parseFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new Device().mergeFrom(input);
      }
    }

    public static final class Geo extends
        com.google.protobuf.nano.ExtendableMessageNano<Geo> {

      // enum LocationType
      public static final int GPS_LOCATION = 1;
      public static final int IP = 2;
      public static final int USER_PROVIDED = 3;

      private static volatile Geo[] _emptyArray;
      public static Geo[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new Geo[0];
            }
          }
        }
        return _emptyArray;
      }

      // optional double lat = 1;
      public double lat;

      // optional double lon = 2;
      public double lon;

      // optional string country = 3;
      public String country;

      // optional string region = 4;
      public String region;

      // optional string regionfips104 = 5;
      public String regionfips104;

      // optional string metro = 6;
      public String metro;

      // optional string city = 7;
      public String city;

      // optional string zip = 8;
      public String zip;

      // optional .com.hykj.gamecenter.protocol.BidRequest.Geo.LocationType type = 9;
      public int type;

      // optional int32 utcoffset = 10;
      public int utcoffset;

      public Geo() {
        clear();
      }

      public Geo clear() {
        lat = 0D;
        lon = 0D;
        country = "";
        region = "";
        regionfips104 = "";
        metro = "";
        city = "";
        zip = "";
        type = Geo.GPS_LOCATION;
        utcoffset = 0;
        unknownFieldData = null;
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        if (Double.doubleToLongBits(this.lat)
            != Double.doubleToLongBits(0D)) {
          output.writeDouble(1, this.lat);
        }
        if (Double.doubleToLongBits(this.lon)
            != Double.doubleToLongBits(0D)) {
          output.writeDouble(2, this.lon);
        }
        if (!this.country.equals("")) {
          output.writeString(3, this.country);
        }
        if (!this.region.equals("")) {
          output.writeString(4, this.region);
        }
        if (!this.regionfips104.equals("")) {
          output.writeString(5, this.regionfips104);
        }
        if (!this.metro.equals("")) {
          output.writeString(6, this.metro);
        }
        if (!this.city.equals("")) {
          output.writeString(7, this.city);
        }
        if (!this.zip.equals("")) {
          output.writeString(8, this.zip);
        }
        if (this.type != Geo.GPS_LOCATION) {
          output.writeInt32(9, this.type);
        }
        if (this.utcoffset != 0) {
          output.writeInt32(10, this.utcoffset);
        }
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        if (Double.doubleToLongBits(this.lat)
            != Double.doubleToLongBits(0D)) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeDoubleSize(1, this.lat);
        }
        if (Double.doubleToLongBits(this.lon)
            != Double.doubleToLongBits(0D)) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeDoubleSize(2, this.lon);
        }
        if (!this.country.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(3, this.country);
        }
        if (!this.region.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(4, this.region);
        }
        if (!this.regionfips104.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(5, this.regionfips104);
        }
        if (!this.metro.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(6, this.metro);
        }
        if (!this.city.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(7, this.city);
        }
        if (!this.zip.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(8, this.zip);
        }
        if (this.type != Geo.GPS_LOCATION) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(9, this.type);
        }
        if (this.utcoffset != 0) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeInt32Size(10, this.utcoffset);
        }
        return size;
      }

      @Override
      public Geo mergeFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!storeUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 9: {
              this.lat = input.readDouble();
              break;
            }
            case 17: {
              this.lon = input.readDouble();
              break;
            }
            case 26: {
              this.country = input.readString();
              break;
            }
            case 34: {
              this.region = input.readString();
              break;
            }
            case 42: {
              this.regionfips104 = input.readString();
              break;
            }
            case 50: {
              this.metro = input.readString();
              break;
            }
            case 58: {
              this.city = input.readString();
              break;
            }
            case 66: {
              this.zip = input.readString();
              break;
            }
            case 72: {
              int value = input.readInt32();
              switch (value) {
                case Geo.GPS_LOCATION:
                case Geo.IP:
                case Geo.USER_PROVIDED:
                  this.type = value;
                  break;
              }
              break;
            }
            case 80: {
              this.utcoffset = input.readInt32();
              break;
            }
          }
        }
      }

      public static Geo parseFrom(byte[] data)
          throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
        return com.google.protobuf.nano.MessageNano.mergeFrom(new Geo(), data);
      }

      public static Geo parseFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new Geo().mergeFrom(input);
      }
    }

    public static final class User extends
        com.google.protobuf.nano.ExtendableMessageNano<User> {

      // enum Gender
      public static final int MALE = 1;
      public static final int FEMALE = 2;
      public static final int OTHER = 3;

      private static volatile User[] _emptyArray;
      public static User[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new User[0];
            }
          }
        }
        return _emptyArray;
      }

      // optional string id = 1;
      public String id;

      // optional string buyeruid = 2;
      public String buyeruid;

      // optional int32 yob = 3;
      public int yob;

      // optional string gender = 4;
      public String gender;

      // optional string keywords = 5;
      public String keywords;

      // optional string customdata = 6;
      public String customdata;

      // optional .com.hykj.gamecenter.protocol.BidRequest.Geo geo = 7;
      public Geo geo;

      // repeated .com.hykj.gamecenter.protocol.BidRequest.Data data = 8;
      public Data[] data;

      public User() {
        clear();
      }

      public User clear() {
        id = "";
        buyeruid = "";
        yob = 0;
        gender = "";
        keywords = "";
        customdata = "";
        geo = null;
        data = Data.emptyArray();
        unknownFieldData = null;
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        if (!this.id.equals("")) {
          output.writeString(1, this.id);
        }
        if (!this.buyeruid.equals("")) {
          output.writeString(2, this.buyeruid);
        }
        if (this.yob != 0) {
          output.writeInt32(3, this.yob);
        }
        if (!this.gender.equals("")) {
          output.writeString(4, this.gender);
        }
        if (!this.keywords.equals("")) {
          output.writeString(5, this.keywords);
        }
        if (!this.customdata.equals("")) {
          output.writeString(6, this.customdata);
        }
        if (this.geo != null) {
          output.writeMessage(7, this.geo);
        }
        if (this.data != null && this.data.length > 0) {
          for (int i = 0; i < this.data.length; i++) {
            Data element = this.data[i];
            if (element != null) {
              output.writeMessage(8, element);
            }
          }
        }
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        if (!this.id.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(1, this.id);
        }
        if (!this.buyeruid.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(2, this.buyeruid);
        }
        if (this.yob != 0) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeInt32Size(3, this.yob);
        }
        if (!this.gender.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(4, this.gender);
        }
        if (!this.keywords.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(5, this.keywords);
        }
        if (!this.customdata.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(6, this.customdata);
        }
        if (this.geo != null) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeMessageSize(7, this.geo);
        }
        if (this.data != null && this.data.length > 0) {
          for (int i = 0; i < this.data.length; i++) {
            Data element = this.data[i];
            if (element != null) {
              size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeMessageSize(8, element);
            }
          }
        }
        return size;
      }

      @Override
      public User mergeFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!storeUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              this.id = input.readString();
              break;
            }
            case 18: {
              this.buyeruid = input.readString();
              break;
            }
            case 24: {
              this.yob = input.readInt32();
              break;
            }
            case 34: {
              this.gender = input.readString();
              break;
            }
            case 42: {
              this.keywords = input.readString();
              break;
            }
            case 50: {
              this.customdata = input.readString();
              break;
            }
            case 58: {
              if (this.geo == null) {
                this.geo = new Geo();
              }
              input.readMessage(this.geo);
              break;
            }
            case 66: {
              int arrayLength = com.google.protobuf.nano.WireFormatNano
                  .getRepeatedFieldArrayLength(input, 66);
              int i = this.data == null ? 0 : this.data.length;
              Data[] newArray =
                  new Data[i + arrayLength];
              if (i != 0) {
                System.arraycopy(this.data, 0, newArray, 0, i);
              }
              for (; i < newArray.length - 1; i++) {
                newArray[i] = new Data();
                input.readMessage(newArray[i]);
                input.readTag();
              }
              // Last one without readTag.
              newArray[i] = new Data();
              input.readMessage(newArray[i]);
              this.data = newArray;
              break;
            }
          }
        }
      }

      public static User parseFrom(byte[] data)
          throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
        return com.google.protobuf.nano.MessageNano.mergeFrom(new User(), data);
      }

      public static User parseFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new User().mergeFrom(input);
      }
    }

    public static final class Data extends
        com.google.protobuf.nano.ExtendableMessageNano<Data> {

      public static final class Segment extends
          com.google.protobuf.nano.ExtendableMessageNano<Segment> {

        private static volatile Segment[] _emptyArray;
        public static Segment[] emptyArray() {
          // Lazily initializes the empty array
          if (_emptyArray == null) {
            synchronized (
                com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
              if (_emptyArray == null) {
                _emptyArray = new Segment[0];
              }
            }
          }
          return _emptyArray;
        }

        // optional string id = 1;
        public String id;

        // optional string name = 2;
        public String name;

        // optional string value = 3;
        public String value;

        public Segment() {
          clear();
        }

        public Segment clear() {
          id = "";
          name = "";
          value = "";
          unknownFieldData = null;
          cachedSize = -1;
          return this;
        }

        @Override
        public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
            throws java.io.IOException {
          if (!this.id.equals("")) {
            output.writeString(1, this.id);
          }
          if (!this.name.equals("")) {
            output.writeString(2, this.name);
          }
          if (!this.value.equals("")) {
            output.writeString(3, this.value);
          }
          super.writeTo(output);
        }

        @Override
        protected int computeSerializedSize() {
          int size = super.computeSerializedSize();
          if (!this.id.equals("")) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeStringSize(1, this.id);
          }
          if (!this.name.equals("")) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeStringSize(2, this.name);
          }
          if (!this.value.equals("")) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeStringSize(3, this.value);
          }
          return size;
        }

        @Override
        public Segment mergeFrom(
                com.google.protobuf.nano.CodedInputByteBufferNano input)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                return this;
              default: {
                if (!storeUnknownField(input, tag)) {
                  return this;
                }
                break;
              }
              case 10: {
                this.id = input.readString();
                break;
              }
              case 18: {
                this.name = input.readString();
                break;
              }
              case 26: {
                this.value = input.readString();
                break;
              }
            }
          }
        }

        public static Segment parseFrom(byte[] data)
            throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
          return com.google.protobuf.nano.MessageNano.mergeFrom(new Segment(), data);
        }

        public static Segment parseFrom(
                com.google.protobuf.nano.CodedInputByteBufferNano input)
            throws java.io.IOException {
          return new Segment().mergeFrom(input);
        }
      }

      private static volatile Data[] _emptyArray;
      public static Data[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new Data[0];
            }
          }
        }
        return _emptyArray;
      }

      // optional string id = 1;
      public String id;

      // optional string name = 2;
      public String name;

      // repeated .com.hykj.gamecenter.protocol.BidRequest.Data.Segment segment = 3;
      public Segment[] segment;

      public Data() {
        clear();
      }

      public Data clear() {
        id = "";
        name = "";
        segment = Segment.emptyArray();
        unknownFieldData = null;
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        if (!this.id.equals("")) {
          output.writeString(1, this.id);
        }
        if (!this.name.equals("")) {
          output.writeString(2, this.name);
        }
        if (this.segment != null && this.segment.length > 0) {
          for (int i = 0; i < this.segment.length; i++) {
            Segment element = this.segment[i];
            if (element != null) {
              output.writeMessage(3, element);
            }
          }
        }
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        if (!this.id.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(1, this.id);
        }
        if (!this.name.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(2, this.name);
        }
        if (this.segment != null && this.segment.length > 0) {
          for (int i = 0; i < this.segment.length; i++) {
            Segment element = this.segment[i];
            if (element != null) {
              size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeMessageSize(3, element);
            }
          }
        }
        return size;
      }

      @Override
      public Data mergeFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!storeUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              this.id = input.readString();
              break;
            }
            case 18: {
              this.name = input.readString();
              break;
            }
            case 26: {
              int arrayLength = com.google.protobuf.nano.WireFormatNano
                  .getRepeatedFieldArrayLength(input, 26);
              int i = this.segment == null ? 0 : this.segment.length;
              Segment[] newArray =
                  new Segment[i + arrayLength];
              if (i != 0) {
                System.arraycopy(this.segment, 0, newArray, 0, i);
              }
              for (; i < newArray.length - 1; i++) {
                newArray[i] = new Segment();
                input.readMessage(newArray[i]);
                input.readTag();
              }
              // Last one without readTag.
              newArray[i] = new Segment();
              input.readMessage(newArray[i]);
              this.segment = newArray;
              break;
            }
          }
        }
      }

      public static Data parseFrom(byte[] data)
          throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
        return com.google.protobuf.nano.MessageNano.mergeFrom(new Data(), data);
      }

      public static Data parseFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new Data().mergeFrom(input);
      }
    }

    public static final class Regs extends
        com.google.protobuf.nano.ExtendableMessageNano<Regs> {

      private static volatile Regs[] _emptyArray;
      public static Regs[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new Regs[0];
            }
          }
        }
        return _emptyArray;
      }

      // optional bool coppa = 1;
      public boolean coppa;

      public Regs() {
        clear();
      }

      public Regs clear() {
        coppa = false;
        unknownFieldData = null;
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        if (this.coppa != false) {
          output.writeBool(1, this.coppa);
        }
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        if (this.coppa != false) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeBoolSize(1, this.coppa);
        }
        return size;
      }

      @Override
      public Regs mergeFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!storeUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              this.coppa = input.readBool();
              break;
            }
          }
        }
      }

      public static Regs parseFrom(byte[] data)
          throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
        return com.google.protobuf.nano.MessageNano.mergeFrom(new Regs(), data);
      }

      public static Regs parseFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new Regs().mergeFrom(input);
      }
    }

    private static volatile BidRequest[] _emptyArray;
    public static BidRequest[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new BidRequest[0];
          }
        }
      }
      return _emptyArray;
    }

    // required string id = 1;
    public String id;

    // repeated .com.hykj.gamecenter.protocol.BidRequest.Imp imp = 2;
    public Imp[] imp;

    // optional .com.hykj.gamecenter.protocol.BidRequest.Site site = 3;
    public Site site;

    // optional .com.hykj.gamecenter.protocol.BidRequest.App app = 4;
    public App app;

    // optional .com.hykj.gamecenter.protocol.BidRequest.Device device = 5;
    public Device device;

    // optional .com.hykj.gamecenter.protocol.BidRequest.Regs regs = 14;
    public Regs regs;

    // optional .com.hykj.gamecenter.protocol.BidRequest.User user = 6;
    public User user;

    // optional .com.hykj.gamecenter.protocol.BidRequest.AuctionType at = 7 [default = SECOND_PRICE];
    public int at;

    // optional int32 tmax = 8;
    public int tmax;

    // repeated string wseat = 9;
    public String[] wseat;

    // optional bool allimps = 10 [default = false];
    public boolean allimps;

    // repeated string cur = 11;
    public String[] cur;

    // repeated string bcat = 12;
    public String[] bcat;

    // repeated string badv = 13;
    public String[] badv;

    // optional bool test = 15 [default = false];
    public boolean test;

    public BidRequest() {
      clear();
    }

    public BidRequest clear() {
      id = "";
      imp = Imp.emptyArray();
      site = null;
      app = null;
      device = null;
      regs = null;
      user = null;
      at = BidRequest.SECOND_PRICE;
      tmax = 0;
      wseat = com.google.protobuf.nano.WireFormatNano.EMPTY_STRING_ARRAY;
      allimps = false;
      cur = com.google.protobuf.nano.WireFormatNano.EMPTY_STRING_ARRAY;
      bcat = com.google.protobuf.nano.WireFormatNano.EMPTY_STRING_ARRAY;
      badv = com.google.protobuf.nano.WireFormatNano.EMPTY_STRING_ARRAY;
      test = false;
      unknownFieldData = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeString(1, this.id);
      if (this.imp != null && this.imp.length > 0) {
        for (int i = 0; i < this.imp.length; i++) {
          Imp element = this.imp[i];
          if (element != null) {
            output.writeMessage(2, element);
          }
        }
      }
      if (this.site != null) {
        output.writeMessage(3, this.site);
      }
      if (this.app != null) {
        output.writeMessage(4, this.app);
      }
      if (this.device != null) {
        output.writeMessage(5, this.device);
      }
      if (this.user != null) {
        output.writeMessage(6, this.user);
      }
      if (this.at != BidRequest.SECOND_PRICE) {
        output.writeInt32(7, this.at);
      }
      if (this.tmax != 0) {
        output.writeInt32(8, this.tmax);
      }
      if (this.wseat != null && this.wseat.length > 0) {
        for (int i = 0; i < this.wseat.length; i++) {
          String element = this.wseat[i];
          if (element != null) {
            output.writeString(9, element);
          }
        }
      }
      if (this.allimps != false) {
        output.writeBool(10, this.allimps);
      }
      if (this.cur != null && this.cur.length > 0) {
        for (int i = 0; i < this.cur.length; i++) {
          String element = this.cur[i];
          if (element != null) {
            output.writeString(11, element);
          }
        }
      }
      if (this.bcat != null && this.bcat.length > 0) {
        for (int i = 0; i < this.bcat.length; i++) {
          String element = this.bcat[i];
          if (element != null) {
            output.writeString(12, element);
          }
        }
      }
      if (this.badv != null && this.badv.length > 0) {
        for (int i = 0; i < this.badv.length; i++) {
          String element = this.badv[i];
          if (element != null) {
            output.writeString(13, element);
          }
        }
      }
      if (this.regs != null) {
        output.writeMessage(14, this.regs);
      }
      if (this.test != false) {
        output.writeBool(15, this.test);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(1, this.id);
      if (this.imp != null && this.imp.length > 0) {
        for (int i = 0; i < this.imp.length; i++) {
          Imp element = this.imp[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(2, element);
          }
        }
      }
      if (this.site != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(3, this.site);
      }
      if (this.app != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(4, this.app);
      }
      if (this.device != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(5, this.device);
      }
      if (this.user != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(6, this.user);
      }
      if (this.at != BidRequest.SECOND_PRICE) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(7, this.at);
      }
      if (this.tmax != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(8, this.tmax);
      }
      if (this.wseat != null && this.wseat.length > 0) {
        int dataCount = 0;
        int dataSize = 0;
        for (int i = 0; i < this.wseat.length; i++) {
          String element = this.wseat[i];
          if (element != null) {
            dataCount++;
            dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeStringSizeNoTag(element);
          }
        }
        size += dataSize;
        size += 1 * dataCount;
      }
      if (this.allimps != false) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(10, this.allimps);
      }
      if (this.cur != null && this.cur.length > 0) {
        int dataCount = 0;
        int dataSize = 0;
        for (int i = 0; i < this.cur.length; i++) {
          String element = this.cur[i];
          if (element != null) {
            dataCount++;
            dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeStringSizeNoTag(element);
          }
        }
        size += dataSize;
        size += 1 * dataCount;
      }
      if (this.bcat != null && this.bcat.length > 0) {
        int dataCount = 0;
        int dataSize = 0;
        for (int i = 0; i < this.bcat.length; i++) {
          String element = this.bcat[i];
          if (element != null) {
            dataCount++;
            dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeStringSizeNoTag(element);
          }
        }
        size += dataSize;
        size += 1 * dataCount;
      }
      if (this.badv != null && this.badv.length > 0) {
        int dataCount = 0;
        int dataSize = 0;
        for (int i = 0; i < this.badv.length; i++) {
          String element = this.badv[i];
          if (element != null) {
            dataCount++;
            dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeStringSizeNoTag(element);
          }
        }
        size += dataSize;
        size += 1 * dataCount;
      }
      if (this.regs != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(14, this.regs);
      }
      if (this.test != false) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeBoolSize(15, this.test);
      }
      return size;
    }

    @Override
    public BidRequest mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!storeUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.id = input.readString();
            break;
          }
          case 18: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 18);
            int i = this.imp == null ? 0 : this.imp.length;
            Imp[] newArray =
                new Imp[i + arrayLength];
            if (i != 0) {
              System.arraycopy(this.imp, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new Imp();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new Imp();
            input.readMessage(newArray[i]);
            this.imp = newArray;
            break;
          }
          case 26: {
            if (this.site == null) {
              this.site = new Site();
            }
            input.readMessage(this.site);
            break;
          }
          case 34: {
            if (this.app == null) {
              this.app = new App();
            }
            input.readMessage(this.app);
            break;
          }
          case 42: {
            if (this.device == null) {
              this.device = new Device();
            }
            input.readMessage(this.device);
            break;
          }
          case 50: {
            if (this.user == null) {
              this.user = new User();
            }
            input.readMessage(this.user);
            break;
          }
          case 56: {
            int value = input.readInt32();
            switch (value) {
              case BidRequest.FIRST_PRICE:
              case BidRequest.SECOND_PRICE:
              case BidRequest.FIXED_PRICE:
                this.at = value;
                break;
            }
            break;
          }
          case 64: {
            this.tmax = input.readInt32();
            break;
          }
          case 74: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 74);
            int i = this.wseat == null ? 0 : this.wseat.length;
            String[] newArray = new String[i + arrayLength];
            if (i != 0) {
              System.arraycopy(this.wseat, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readString();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readString();
            this.wseat = newArray;
            break;
          }
          case 80: {
            this.allimps = input.readBool();
            break;
          }
          case 90: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 90);
            int i = this.cur == null ? 0 : this.cur.length;
            String[] newArray = new String[i + arrayLength];
            if (i != 0) {
              System.arraycopy(this.cur, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readString();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readString();
            this.cur = newArray;
            break;
          }
          case 98: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 98);
            int i = this.bcat == null ? 0 : this.bcat.length;
            String[] newArray = new String[i + arrayLength];
            if (i != 0) {
              System.arraycopy(this.bcat, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readString();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readString();
            this.bcat = newArray;
            break;
          }
          case 106: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 106);
            int i = this.badv == null ? 0 : this.badv.length;
            String[] newArray = new String[i + arrayLength];
            if (i != 0) {
              System.arraycopy(this.badv, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readString();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readString();
            this.badv = newArray;
            break;
          }
          case 114: {
            if (this.regs == null) {
              this.regs = new Regs();
            }
            input.readMessage(this.regs);
            break;
          }
          case 120: {
            this.test = input.readBool();
            break;
          }
        }
      }
    }

    public static BidRequest parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new BidRequest(), data);
    }

    public static BidRequest parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new BidRequest().mergeFrom(input);
    }
  }

  public static final class BidResponse extends
      com.google.protobuf.nano.ExtendableMessageNano<BidResponse> {

    // enum NoBidReason
    public static final int UNKNOWN_ERROR = 0;
    public static final int TECHNICAL_ERROR = 1;
    public static final int INVALID_REQUEST = 2;
    public static final int KNOWN_WEB_SPIDER = 3;
    public static final int SUSPECTED_NONHUMAN_TRAFFIC = 4;
    public static final int CLOUD_DATACENTER_PROXYIP = 5;
    public static final int UNSUPPORTED_DEVICE = 6;
    public static final int BLOCKED_PUBLISHER = 7;
    public static final int UNMATCHED_USER = 8;

    public static final class SeatBid extends
        com.google.protobuf.nano.ExtendableMessageNano<SeatBid> {

      public static final class Bid extends
          com.google.protobuf.nano.ExtendableMessageNano<Bid> {

        private static volatile Bid[] _emptyArray;
        public static Bid[] emptyArray() {
          // Lazily initializes the empty array
          if (_emptyArray == null) {
            synchronized (
                com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
              if (_emptyArray == null) {
                _emptyArray = new Bid[0];
              }
            }
          }
          return _emptyArray;
        }

        // required string id = 1;
        public String id;

        // required string impid = 2;
        public String impid;

        // required double price = 3;
        public double price;

        // optional string adid = 4;
        public String adid;

        // optional string nurl = 5;
        public String nurl;

        // optional string adm = 6;
        public String adm;

        // optional .com.hykj.gamecenter.protocol.NativeResponse adm_native = 50;
        public NativeResponse admNative;

        // repeated string adomain = 7;
        public String[] adomain;

        // optional string bundle = 14;
        public String bundle;

        // optional string iurl = 8;
        public String iurl;

        // optional string cid = 9;
        public String cid;

        // optional string crid = 10;
        public String crid;

        // repeated string cat = 15;
        public String[] cat;

        // repeated .com.hykj.gamecenter.protocol.CreativeAttribute attr = 11 [packed = true];
        public int[] attr;

        // optional string dealid = 13;
        public String dealid;

        // optional int32 w = 16;
        public int w;

        // optional int32 h = 17;
        public int h;

        public Bid() {
          clear();
        }

        public Bid clear() {
          id = "";
          impid = "";
          price = 0D;
          adid = "";
          nurl = "";
          adm = "";
          admNative = null;
          adomain = com.google.protobuf.nano.WireFormatNano.EMPTY_STRING_ARRAY;
          bundle = "";
          iurl = "";
          cid = "";
          crid = "";
          cat = com.google.protobuf.nano.WireFormatNano.EMPTY_STRING_ARRAY;
          attr = com.google.protobuf.nano.WireFormatNano.EMPTY_INT_ARRAY;
          dealid = "";
          w = 0;
          h = 0;
          unknownFieldData = null;
          cachedSize = -1;
          return this;
        }

        @Override
        public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
            throws java.io.IOException {
          output.writeString(1, this.id);
          output.writeString(2, this.impid);
          output.writeDouble(3, this.price);
          if (!this.adid.equals("")) {
            output.writeString(4, this.adid);
          }
          if (!this.nurl.equals("")) {
            output.writeString(5, this.nurl);
          }
          if (!this.adm.equals("")) {
            output.writeString(6, this.adm);
          }
          if (this.adomain != null && this.adomain.length > 0) {
            for (int i = 0; i < this.adomain.length; i++) {
              String element = this.adomain[i];
              if (element != null) {
                output.writeString(7, element);
              }
            }
          }
          if (!this.iurl.equals("")) {
            output.writeString(8, this.iurl);
          }
          if (!this.cid.equals("")) {
            output.writeString(9, this.cid);
          }
          if (!this.crid.equals("")) {
            output.writeString(10, this.crid);
          }
          if (this.attr != null && this.attr.length > 0) {
            int dataSize = 0;
            for (int i = 0; i < this.attr.length; i++) {
              int element = this.attr[i];
              dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                  .computeInt32SizeNoTag(element);
            }
            output.writeRawVarint32(90);
            output.writeRawVarint32(dataSize);
            for (int i = 0; i < this.attr.length; i++) {
              output.writeRawVarint32(this.attr[i]);
            }
          }
          if (!this.dealid.equals("")) {
            output.writeString(13, this.dealid);
          }
          if (!this.bundle.equals("")) {
            output.writeString(14, this.bundle);
          }
          if (this.cat != null && this.cat.length > 0) {
            for (int i = 0; i < this.cat.length; i++) {
              String element = this.cat[i];
              if (element != null) {
                output.writeString(15, element);
              }
            }
          }
          if (this.w != 0) {
            output.writeInt32(16, this.w);
          }
          if (this.h != 0) {
            output.writeInt32(17, this.h);
          }
          if (this.admNative != null) {
            output.writeMessage(50, this.admNative);
          }
          super.writeTo(output);
        }

        @Override
        protected int computeSerializedSize() {
          int size = super.computeSerializedSize();
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(1, this.id);
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(2, this.impid);
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeDoubleSize(3, this.price);
          if (!this.adid.equals("")) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeStringSize(4, this.adid);
          }
          if (!this.nurl.equals("")) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeStringSize(5, this.nurl);
          }
          if (!this.adm.equals("")) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeStringSize(6, this.adm);
          }
          if (this.adomain != null && this.adomain.length > 0) {
            int dataCount = 0;
            int dataSize = 0;
            for (int i = 0; i < this.adomain.length; i++) {
              String element = this.adomain[i];
              if (element != null) {
                dataCount++;
                dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                    .computeStringSizeNoTag(element);
              }
            }
            size += dataSize;
            size += 1 * dataCount;
          }
          if (!this.iurl.equals("")) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeStringSize(8, this.iurl);
          }
          if (!this.cid.equals("")) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeStringSize(9, this.cid);
          }
          if (!this.crid.equals("")) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeStringSize(10, this.crid);
          }
          if (this.attr != null && this.attr.length > 0) {
            int dataSize = 0;
            for (int i = 0; i < this.attr.length; i++) {
              int element = this.attr[i];
              dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                  .computeInt32SizeNoTag(element);
            }
            size += dataSize;
            size += 1;
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeRawVarint32Size(dataSize);
          }
          if (!this.dealid.equals("")) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeStringSize(13, this.dealid);
          }
          if (!this.bundle.equals("")) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeStringSize(14, this.bundle);
          }
          if (this.cat != null && this.cat.length > 0) {
            int dataCount = 0;
            int dataSize = 0;
            for (int i = 0; i < this.cat.length; i++) {
              String element = this.cat[i];
              if (element != null) {
                dataCount++;
                dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                    .computeStringSizeNoTag(element);
              }
            }
            size += dataSize;
            size += 1 * dataCount;
          }
          if (this.w != 0) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeInt32Size(16, this.w);
          }
          if (this.h != 0) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeInt32Size(17, this.h);
          }
          if (this.admNative != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(50, this.admNative);
          }
          return size;
        }

        @Override
        public Bid mergeFrom(
                com.google.protobuf.nano.CodedInputByteBufferNano input)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                return this;
              default: {
                if (!storeUnknownField(input, tag)) {
                  return this;
                }
                break;
              }
              case 10: {
                this.id = input.readString();
                break;
              }
              case 18: {
                this.impid = input.readString();
                break;
              }
              case 25: {
                this.price = input.readDouble();
                break;
              }
              case 34: {
                this.adid = input.readString();
                break;
              }
              case 42: {
                this.nurl = input.readString();
                break;
              }
              case 50: {
                this.adm = input.readString();
                break;
              }
              case 58: {
                int arrayLength = com.google.protobuf.nano.WireFormatNano
                    .getRepeatedFieldArrayLength(input, 58);
                int i = this.adomain == null ? 0 : this.adomain.length;
                String[] newArray = new String[i + arrayLength];
                if (i != 0) {
                  System.arraycopy(this.adomain, 0, newArray, 0, i);
                }
                for (; i < newArray.length - 1; i++) {
                  newArray[i] = input.readString();
                  input.readTag();
                }
                // Last one without readTag.
                newArray[i] = input.readString();
                this.adomain = newArray;
                break;
              }
              case 66: {
                this.iurl = input.readString();
                break;
              }
              case 74: {
                this.cid = input.readString();
                break;
              }
              case 82: {
                this.crid = input.readString();
                break;
              }
              case 88: {
                int length = com.google.protobuf.nano.WireFormatNano
                    .getRepeatedFieldArrayLength(input, 88);
                int[] validValues = new int[length];
                int validCount = 0;
                for (int i = 0; i < length; i++) {
                  if (i != 0) { // tag for first value already consumed.
                    input.readTag();
                  }
                  int value = input.readInt32();
                  switch (value) {
                    case OpenRtb.AUDIO_AUTO_PLAY:
                    case OpenRtb.AUDIO_USER_INITIATED:
                    case OpenRtb.EXPANDABLE_AUTOMATIC:
                    case OpenRtb.EXPANDABLE_CLICK_INITIATED:
                    case OpenRtb.EXPANDABLE_ROLLOVER_INITIATED:
                    case OpenRtb.VIDEO_IN_BANNER_AUTO_PLAY:
                    case OpenRtb.VIDEO_IN_BANNER_USER_INITIATED:
                    case OpenRtb.POP:
                    case OpenRtb.PROVOCATIVE_OR_SUGGESTIVE:
                    case OpenRtb.ANNOYING:
                    case OpenRtb.SURVEYS:
                    case OpenRtb.TEXT_ONLY:
                    case OpenRtb.USER_INTERACTIVE:
                    case OpenRtb.WINDOWS_DIALOG_OR_ALERT_STYLE:
                    case OpenRtb.HAS_AUDIO_ON_OFF_BUTTON:
                    case OpenRtb.AD_CAN_BE_SKIPPED:
                      validValues[validCount++] = value;
                      break;
                  }
                }
                if (validCount != 0) {
                  int i = this.attr == null ? 0 : this.attr.length;
                  if (i == 0 && validCount == validValues.length) {
                    this.attr = validValues;
                  } else {
                    int[] newArray = new int[i + validCount];
                    if (i != 0) {
                      System.arraycopy(this.attr, 0, newArray, 0, i);
                    }
                    System.arraycopy(validValues, 0, newArray, i, validCount);
                    this.attr = newArray;
                  }
                }
                break;
              }
              case 90: {
                int bytes = input.readRawVarint32();
                int limit = input.pushLimit(bytes);
                // First pass to compute array length.
                int arrayLength = 0;
                int startPos = input.getPosition();
                while (input.getBytesUntilLimit() > 0) {
                  switch (input.readInt32()) {
                    case OpenRtb.AUDIO_AUTO_PLAY:
                    case OpenRtb.AUDIO_USER_INITIATED:
                    case OpenRtb.EXPANDABLE_AUTOMATIC:
                    case OpenRtb.EXPANDABLE_CLICK_INITIATED:
                    case OpenRtb.EXPANDABLE_ROLLOVER_INITIATED:
                    case OpenRtb.VIDEO_IN_BANNER_AUTO_PLAY:
                    case OpenRtb.VIDEO_IN_BANNER_USER_INITIATED:
                    case OpenRtb.POP:
                    case OpenRtb.PROVOCATIVE_OR_SUGGESTIVE:
                    case OpenRtb.ANNOYING:
                    case OpenRtb.SURVEYS:
                    case OpenRtb.TEXT_ONLY:
                    case OpenRtb.USER_INTERACTIVE:
                    case OpenRtb.WINDOWS_DIALOG_OR_ALERT_STYLE:
                    case OpenRtb.HAS_AUDIO_ON_OFF_BUTTON:
                    case OpenRtb.AD_CAN_BE_SKIPPED:
                      arrayLength++;
                      break;
                  }
                }
                if (arrayLength != 0) {
                  input.rewindToPosition(startPos);
                  int i = this.attr == null ? 0 : this.attr.length;
                  int[] newArray = new int[i + arrayLength];
                  if (i != 0) {
                    System.arraycopy(this.attr, 0, newArray, 0, i);
                  }
                  while (input.getBytesUntilLimit() > 0) {
                    int value = input.readInt32();
                    switch (value) {
                      case OpenRtb.AUDIO_AUTO_PLAY:
                      case OpenRtb.AUDIO_USER_INITIATED:
                      case OpenRtb.EXPANDABLE_AUTOMATIC:
                      case OpenRtb.EXPANDABLE_CLICK_INITIATED:
                      case OpenRtb.EXPANDABLE_ROLLOVER_INITIATED:
                      case OpenRtb.VIDEO_IN_BANNER_AUTO_PLAY:
                      case OpenRtb.VIDEO_IN_BANNER_USER_INITIATED:
                      case OpenRtb.POP:
                      case OpenRtb.PROVOCATIVE_OR_SUGGESTIVE:
                      case OpenRtb.ANNOYING:
                      case OpenRtb.SURVEYS:
                      case OpenRtb.TEXT_ONLY:
                      case OpenRtb.USER_INTERACTIVE:
                      case OpenRtb.WINDOWS_DIALOG_OR_ALERT_STYLE:
                      case OpenRtb.HAS_AUDIO_ON_OFF_BUTTON:
                      case OpenRtb.AD_CAN_BE_SKIPPED:
                        newArray[i++] = value;
                        break;
                    }
                  }
                  this.attr = newArray;
                }
                input.popLimit(limit);
                break;
              }
              case 106: {
                this.dealid = input.readString();
                break;
              }
              case 114: {
                this.bundle = input.readString();
                break;
              }
              case 122: {
                int arrayLength = com.google.protobuf.nano.WireFormatNano
                    .getRepeatedFieldArrayLength(input, 122);
                int i = this.cat == null ? 0 : this.cat.length;
                String[] newArray = new String[i + arrayLength];
                if (i != 0) {
                  System.arraycopy(this.cat, 0, newArray, 0, i);
                }
                for (; i < newArray.length - 1; i++) {
                  newArray[i] = input.readString();
                  input.readTag();
                }
                // Last one without readTag.
                newArray[i] = input.readString();
                this.cat = newArray;
                break;
              }
              case 128: {
                this.w = input.readInt32();
                break;
              }
              case 136: {
                this.h = input.readInt32();
                break;
              }
              case 402: {
                if (this.admNative == null) {
                  this.admNative = new NativeResponse();
                }
                input.readMessage(this.admNative);
                break;
              }
            }
          }
        }

        public static Bid parseFrom(byte[] data)
            throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
          return com.google.protobuf.nano.MessageNano.mergeFrom(new Bid(), data);
        }

        public static Bid parseFrom(
                com.google.protobuf.nano.CodedInputByteBufferNano input)
            throws java.io.IOException {
          return new Bid().mergeFrom(input);
        }
      }

      private static volatile SeatBid[] _emptyArray;
      public static SeatBid[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new SeatBid[0];
            }
          }
        }
        return _emptyArray;
      }

      // repeated .com.hykj.gamecenter.protocol.BidResponse.SeatBid.Bid bid = 1;
      public Bid[] bid;

      // optional string seat = 2;
      public String seat;

      // optional bool group = 3;
      public boolean group;

      public SeatBid() {
        clear();
      }

      public SeatBid clear() {
        bid = Bid.emptyArray();
        seat = "";
        group = false;
        unknownFieldData = null;
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        if (this.bid != null && this.bid.length > 0) {
          for (int i = 0; i < this.bid.length; i++) {
            Bid element = this.bid[i];
            if (element != null) {
              output.writeMessage(1, element);
            }
          }
        }
        if (!this.seat.equals("")) {
          output.writeString(2, this.seat);
        }
        if (this.group != false) {
          output.writeBool(3, this.group);
        }
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        if (this.bid != null && this.bid.length > 0) {
          for (int i = 0; i < this.bid.length; i++) {
            Bid element = this.bid[i];
            if (element != null) {
              size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeMessageSize(1, element);
            }
          }
        }
        if (!this.seat.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(2, this.seat);
        }
        if (this.group != false) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeBoolSize(3, this.group);
        }
        return size;
      }

      @Override
      public SeatBid mergeFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!storeUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              int arrayLength = com.google.protobuf.nano.WireFormatNano
                  .getRepeatedFieldArrayLength(input, 10);
              int i = this.bid == null ? 0 : this.bid.length;
              Bid[] newArray =
                  new Bid[i + arrayLength];
              if (i != 0) {
                System.arraycopy(this.bid, 0, newArray, 0, i);
              }
              for (; i < newArray.length - 1; i++) {
                newArray[i] = new Bid();
                input.readMessage(newArray[i]);
                input.readTag();
              }
              // Last one without readTag.
              newArray[i] = new Bid();
              input.readMessage(newArray[i]);
              this.bid = newArray;
              break;
            }
            case 18: {
              this.seat = input.readString();
              break;
            }
            case 24: {
              this.group = input.readBool();
              break;
            }
          }
        }
      }

      public static SeatBid parseFrom(byte[] data)
          throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
        return com.google.protobuf.nano.MessageNano.mergeFrom(new SeatBid(), data);
      }

      public static SeatBid parseFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new SeatBid().mergeFrom(input);
      }
    }

    private static volatile BidResponse[] _emptyArray;
    public static BidResponse[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new BidResponse[0];
          }
        }
      }
      return _emptyArray;
    }

    // required string id = 1;
    public String id;

    // repeated .com.hykj.gamecenter.protocol.BidResponse.SeatBid seatbid = 2;
    public SeatBid[] seatbid;

    // optional string bidid = 3;
    public String bidid;

    // optional string cur = 4 [default = "USD"];
    public String cur;

    // optional string customdata = 5;
    public String customdata;

    // optional .com.hykj.gamecenter.protocol.BidResponse.NoBidReason nbr = 6;
    public int nbr;

    public BidResponse() {
      clear();
    }

    public BidResponse clear() {
      id = "";
      seatbid = SeatBid.emptyArray();
      bidid = "";
      cur = "USD";
      customdata = "";
      nbr = BidResponse.UNKNOWN_ERROR;
      unknownFieldData = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      output.writeString(1, this.id);
      if (this.seatbid != null && this.seatbid.length > 0) {
        for (int i = 0; i < this.seatbid.length; i++) {
          SeatBid element = this.seatbid[i];
          if (element != null) {
            output.writeMessage(2, element);
          }
        }
      }
      if (!this.bidid.equals("")) {
        output.writeString(3, this.bidid);
      }
      if (!this.cur.equals("USD")) {
        output.writeString(4, this.cur);
      }
      if (!this.customdata.equals("")) {
        output.writeString(5, this.customdata);
      }
      if (this.nbr != BidResponse.UNKNOWN_ERROR) {
        output.writeInt32(6, this.nbr);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeStringSize(1, this.id);
      if (this.seatbid != null && this.seatbid.length > 0) {
        for (int i = 0; i < this.seatbid.length; i++) {
          SeatBid element = this.seatbid[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(2, element);
          }
        }
      }
      if (!this.bidid.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(3, this.bidid);
      }
      if (!this.cur.equals("USD")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(4, this.cur);
      }
      if (!this.customdata.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(5, this.customdata);
      }
      if (this.nbr != BidResponse.UNKNOWN_ERROR) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(6, this.nbr);
      }
      return size;
    }

    @Override
    public BidResponse mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!storeUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.id = input.readString();
            break;
          }
          case 18: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 18);
            int i = this.seatbid == null ? 0 : this.seatbid.length;
            SeatBid[] newArray =
                new SeatBid[i + arrayLength];
            if (i != 0) {
              System.arraycopy(this.seatbid, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new SeatBid();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new SeatBid();
            input.readMessage(newArray[i]);
            this.seatbid = newArray;
            break;
          }
          case 26: {
            this.bidid = input.readString();
            break;
          }
          case 34: {
            this.cur = input.readString();
            break;
          }
          case 42: {
            this.customdata = input.readString();
            break;
          }
          case 48: {
            int value = input.readInt32();
            switch (value) {
              case BidResponse.UNKNOWN_ERROR:
              case BidResponse.TECHNICAL_ERROR:
              case BidResponse.INVALID_REQUEST:
              case BidResponse.KNOWN_WEB_SPIDER:
              case BidResponse.SUSPECTED_NONHUMAN_TRAFFIC:
              case BidResponse.CLOUD_DATACENTER_PROXYIP:
              case BidResponse.UNSUPPORTED_DEVICE:
              case BidResponse.BLOCKED_PUBLISHER:
              case BidResponse.UNMATCHED_USER:
                this.nbr = value;
                break;
            }
            break;
          }
        }
      }
    }

    public static BidResponse parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new BidResponse(), data);
    }

    public static BidResponse parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new BidResponse().mergeFrom(input);
    }
  }

  public static final class NativeRequest extends
      com.google.protobuf.nano.ExtendableMessageNano<NativeRequest> {

    // enum LayoutId
    public static final int CONTENT_WALL = 1;
    public static final int APP_WALL = 2;
    public static final int NEWS_FEED = 3;
    public static final int CHAT_LIST = 4;
    public static final int CAROUSEL = 5;
    public static final int CONTENT_STREAM = 6;
    public static final int GRID = 7;

    // enum AdUnitId
    public static final int PAID_SEARCH_UNIT = 1;
    public static final int RECOMMENDATION_WIDGET = 2;
    public static final int PROMOTED_LISTING = 3;
    public static final int IAB_IN_AD_NATIVE = 4;
    public static final int CUSTOM = 5;

    public static final class Asset extends
        com.google.protobuf.nano.ExtendableMessageNano<Asset> {

      public static final class Title extends
          com.google.protobuf.nano.ExtendableMessageNano<Title> {

        private static volatile Title[] _emptyArray;
        public static Title[] emptyArray() {
          // Lazily initializes the empty array
          if (_emptyArray == null) {
            synchronized (
                com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
              if (_emptyArray == null) {
                _emptyArray = new Title[0];
              }
            }
          }
          return _emptyArray;
        }

        // required int32 len = 1;
        public int len;

        public Title() {
          clear();
        }

        public Title clear() {
          len = 0;
          unknownFieldData = null;
          cachedSize = -1;
          return this;
        }

        @Override
        public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
            throws java.io.IOException {
          output.writeInt32(1, this.len);
          super.writeTo(output);
        }

        @Override
        protected int computeSerializedSize() {
          int size = super.computeSerializedSize();
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeInt32Size(1, this.len);
          return size;
        }

        @Override
        public Title mergeFrom(
                com.google.protobuf.nano.CodedInputByteBufferNano input)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                return this;
              default: {
                if (!storeUnknownField(input, tag)) {
                  return this;
                }
                break;
              }
              case 8: {
                this.len = input.readInt32();
                break;
              }
            }
          }
        }

        public static Title parseFrom(byte[] data)
            throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
          return com.google.protobuf.nano.MessageNano.mergeFrom(new Title(), data);
        }

        public static Title parseFrom(
                com.google.protobuf.nano.CodedInputByteBufferNano input)
            throws java.io.IOException {
          return new Title().mergeFrom(input);
        }
      }

      public static final class Image extends
          com.google.protobuf.nano.ExtendableMessageNano<Image> {

        // enum ImageAssetType
        public static final int ICON = 1;
        public static final int LOGO = 2;
        public static final int MAIN = 3;

        private static volatile Image[] _emptyArray;
        public static Image[] emptyArray() {
          // Lazily initializes the empty array
          if (_emptyArray == null) {
            synchronized (
                com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
              if (_emptyArray == null) {
                _emptyArray = new Image[0];
              }
            }
          }
          return _emptyArray;
        }

        // optional .com.hykj.gamecenter.protocol.NativeRequest.Asset.Image.ImageAssetType type = 1;
        public int type;

        // optional int32 w = 2;
        public int w;

        // optional int32 h = 3;
        public int h;

        // optional int32 wmin = 4;
        public int wmin;

        // optional int32 hmin = 5;
        public int hmin;

        // repeated string mimes = 6;
        public String[] mimes;

        public Image() {
          clear();
        }

        public Image clear() {
          type = Image.ICON;
          w = 0;
          h = 0;
          wmin = 0;
          hmin = 0;
          mimes = com.google.protobuf.nano.WireFormatNano.EMPTY_STRING_ARRAY;
          unknownFieldData = null;
          cachedSize = -1;
          return this;
        }

        @Override
        public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
            throws java.io.IOException {
          if (this.type != Image.ICON) {
            output.writeInt32(1, this.type);
          }
          if (this.w != 0) {
            output.writeInt32(2, this.w);
          }
          if (this.h != 0) {
            output.writeInt32(3, this.h);
          }
          if (this.wmin != 0) {
            output.writeInt32(4, this.wmin);
          }
          if (this.hmin != 0) {
            output.writeInt32(5, this.hmin);
          }
          if (this.mimes != null && this.mimes.length > 0) {
            for (int i = 0; i < this.mimes.length; i++) {
              String element = this.mimes[i];
              if (element != null) {
                output.writeString(6, element);
              }
            }
          }
          super.writeTo(output);
        }

        @Override
        protected int computeSerializedSize() {
          int size = super.computeSerializedSize();
          if (this.type != Image.ICON) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeInt32Size(1, this.type);
          }
          if (this.w != 0) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeInt32Size(2, this.w);
          }
          if (this.h != 0) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeInt32Size(3, this.h);
          }
          if (this.wmin != 0) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeInt32Size(4, this.wmin);
          }
          if (this.hmin != 0) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeInt32Size(5, this.hmin);
          }
          if (this.mimes != null && this.mimes.length > 0) {
            int dataCount = 0;
            int dataSize = 0;
            for (int i = 0; i < this.mimes.length; i++) {
              String element = this.mimes[i];
              if (element != null) {
                dataCount++;
                dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                    .computeStringSizeNoTag(element);
              }
            }
            size += dataSize;
            size += 1 * dataCount;
          }
          return size;
        }

        @Override
        public Image mergeFrom(
                com.google.protobuf.nano.CodedInputByteBufferNano input)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                return this;
              default: {
                if (!storeUnknownField(input, tag)) {
                  return this;
                }
                break;
              }
              case 8: {
                int value = input.readInt32();
                switch (value) {
                  case Image.ICON:
                  case Image.LOGO:
                  case Image.MAIN:
                    this.type = value;
                    break;
                }
                break;
              }
              case 16: {
                this.w = input.readInt32();
                break;
              }
              case 24: {
                this.h = input.readInt32();
                break;
              }
              case 32: {
                this.wmin = input.readInt32();
                break;
              }
              case 40: {
                this.hmin = input.readInt32();
                break;
              }
              case 50: {
                int arrayLength = com.google.protobuf.nano.WireFormatNano
                    .getRepeatedFieldArrayLength(input, 50);
                int i = this.mimes == null ? 0 : this.mimes.length;
                String[] newArray = new String[i + arrayLength];
                if (i != 0) {
                  System.arraycopy(this.mimes, 0, newArray, 0, i);
                }
                for (; i < newArray.length - 1; i++) {
                  newArray[i] = input.readString();
                  input.readTag();
                }
                // Last one without readTag.
                newArray[i] = input.readString();
                this.mimes = newArray;
                break;
              }
            }
          }
        }

        public static Image parseFrom(byte[] data)
            throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
          return com.google.protobuf.nano.MessageNano.mergeFrom(new Image(), data);
        }

        public static Image parseFrom(
                com.google.protobuf.nano.CodedInputByteBufferNano input)
            throws java.io.IOException {
          return new Image().mergeFrom(input);
        }
      }

      public static final class Data extends
          com.google.protobuf.nano.ExtendableMessageNano<Data> {

        // enum DataAssetType
        public static final int SPONSORED = 1;
        public static final int DESC = 2;
        public static final int RATING = 3;
        public static final int LIKES = 4;
        public static final int DOWNLOADS = 5;
        public static final int PRICE = 6;
        public static final int SALEPRICE = 7;
        public static final int PHONE = 8;
        public static final int ADDRESS = 9;
        public static final int DESC2 = 10;
        public static final int DISPLAYURL = 11;
        public static final int CTATEXT = 12;

        private static volatile Data[] _emptyArray;
        public static Data[] emptyArray() {
          // Lazily initializes the empty array
          if (_emptyArray == null) {
            synchronized (
                com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
              if (_emptyArray == null) {
                _emptyArray = new Data[0];
              }
            }
          }
          return _emptyArray;
        }

        // required .com.hykj.gamecenter.protocol.NativeRequest.Asset.Data.DataAssetType type = 1;
        public int type;

        // optional int32 len = 2;
        public int len;

        public Data() {
          clear();
        }

        public Data clear() {
          type = Data.SPONSORED;
          len = 0;
          unknownFieldData = null;
          cachedSize = -1;
          return this;
        }

        @Override
        public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
            throws java.io.IOException {
          output.writeInt32(1, this.type);
          if (this.len != 0) {
            output.writeInt32(2, this.len);
          }
          super.writeTo(output);
        }

        @Override
        protected int computeSerializedSize() {
          int size = super.computeSerializedSize();
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(1, this.type);
          if (this.len != 0) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeInt32Size(2, this.len);
          }
          return size;
        }

        @Override
        public Data mergeFrom(
                com.google.protobuf.nano.CodedInputByteBufferNano input)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                return this;
              default: {
                if (!storeUnknownField(input, tag)) {
                  return this;
                }
                break;
              }
              case 8: {
                int value = input.readInt32();
                switch (value) {
                  case Data.SPONSORED:
                  case Data.DESC:
                  case Data.RATING:
                  case Data.LIKES:
                  case Data.DOWNLOADS:
                  case Data.PRICE:
                  case Data.SALEPRICE:
                  case Data.PHONE:
                  case Data.ADDRESS:
                  case Data.DESC2:
                  case Data.DISPLAYURL:
                  case Data.CTATEXT:
                    this.type = value;
                    break;
                }
                break;
              }
              case 16: {
                this.len = input.readInt32();
                break;
              }
            }
          }
        }

        public static Data parseFrom(byte[] data)
            throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
          return com.google.protobuf.nano.MessageNano.mergeFrom(new Data(), data);
        }

        public static Data parseFrom(
                com.google.protobuf.nano.CodedInputByteBufferNano input)
            throws java.io.IOException {
          return new Data().mergeFrom(input);
        }
      }

      private static volatile Asset[] _emptyArray;
      public static Asset[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new Asset[0];
            }
          }
        }
        return _emptyArray;
      }

      // required int32 id = 1;
      public int id;

      // optional bool required = 2 [default = false];
      public boolean required;

      // optional .com.hykj.gamecenter.protocol.NativeRequest.Asset.Title title = 3;
      public Title title;

      // optional .com.hykj.gamecenter.protocol.NativeRequest.Asset.Image img = 4;
      public Image img;

      // optional .com.hykj.gamecenter.protocol.BidRequest.Imp.Video video = 5;
      public BidRequest.Imp.Video video;

      // optional .com.hykj.gamecenter.protocol.NativeRequest.Asset.Data data = 6;
      public Data data;

      public Asset() {
        clear();
      }

      public Asset clear() {
        id = 0;
        required = false;
        title = null;
        img = null;
        video = null;
        data = null;
        unknownFieldData = null;
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        output.writeInt32(1, this.id);
        if (this.required != false) {
          output.writeBool(2, this.required);
        }
        if (this.title != null) {
          output.writeMessage(3, this.title);
        }
        if (this.img != null) {
          output.writeMessage(4, this.img);
        }
        if (this.video != null) {
          output.writeMessage(5, this.video);
        }
        if (this.data != null) {
          output.writeMessage(6, this.data);
        }
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(1, this.id);
        if (this.required != false) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeBoolSize(2, this.required);
        }
        if (this.title != null) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeMessageSize(3, this.title);
        }
        if (this.img != null) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeMessageSize(4, this.img);
        }
        if (this.video != null) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeMessageSize(5, this.video);
        }
        if (this.data != null) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeMessageSize(6, this.data);
        }
        return size;
      }

      @Override
      public Asset mergeFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!storeUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              this.id = input.readInt32();
              break;
            }
            case 16: {
              this.required = input.readBool();
              break;
            }
            case 26: {
              if (this.title == null) {
                this.title = new Title();
              }
              input.readMessage(this.title);
              break;
            }
            case 34: {
              if (this.img == null) {
                this.img = new Image();
              }
              input.readMessage(this.img);
              break;
            }
            case 42: {
              if (this.video == null) {
                this.video = new BidRequest.Imp.Video();
              }
              input.readMessage(this.video);
              break;
            }
            case 50: {
              if (this.data == null) {
                this.data = new Data();
              }
              input.readMessage(this.data);
              break;
            }
          }
        }
      }

      public static Asset parseFrom(byte[] data)
          throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
        return com.google.protobuf.nano.MessageNano.mergeFrom(new Asset(), data);
      }

      public static Asset parseFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new Asset().mergeFrom(input);
      }
    }

    private static volatile NativeRequest[] _emptyArray;
    public static NativeRequest[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new NativeRequest[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional string ver = 1;
    public String ver;

    // optional .com.hykj.gamecenter.protocol.NativeRequest.LayoutId layout = 2;
    public int layout;

    // optional .com.hykj.gamecenter.protocol.NativeRequest.AdUnitId adunit = 3;
    public int adunit;

    // optional int32 plcmtcnt = 4 [default = 1];
    public int plcmtcnt;

    // optional int32 seq = 5 [default = 0];
    public int seq;

    // repeated .com.hykj.gamecenter.protocol.NativeRequest.Asset assets = 6;
    public Asset[] assets;

    public NativeRequest() {
      clear();
    }

    public NativeRequest clear() {
      ver = "";
      layout = NativeRequest.CONTENT_WALL;
      adunit = NativeRequest.PAID_SEARCH_UNIT;
      plcmtcnt = 1;
      seq = 0;
      assets = Asset.emptyArray();
      unknownFieldData = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.ver.equals("")) {
        output.writeString(1, this.ver);
      }
      if (this.layout != NativeRequest.CONTENT_WALL) {
        output.writeInt32(2, this.layout);
      }
      if (this.adunit != NativeRequest.PAID_SEARCH_UNIT) {
        output.writeInt32(3, this.adunit);
      }
      if (this.plcmtcnt != 1) {
        output.writeInt32(4, this.plcmtcnt);
      }
      if (this.seq != 0) {
        output.writeInt32(5, this.seq);
      }
      if (this.assets != null && this.assets.length > 0) {
        for (int i = 0; i < this.assets.length; i++) {
          Asset element = this.assets[i];
          if (element != null) {
            output.writeMessage(6, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.ver.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.ver);
      }
      if (this.layout != NativeRequest.CONTENT_WALL) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(2, this.layout);
      }
      if (this.adunit != NativeRequest.PAID_SEARCH_UNIT) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeInt32Size(3, this.adunit);
      }
      if (this.plcmtcnt != 1) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(4, this.plcmtcnt);
      }
      if (this.seq != 0) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(5, this.seq);
      }
      if (this.assets != null && this.assets.length > 0) {
        for (int i = 0; i < this.assets.length; i++) {
          Asset element = this.assets[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(6, element);
          }
        }
      }
      return size;
    }

    @Override
    public NativeRequest mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!storeUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.ver = input.readString();
            break;
          }
          case 16: {
            int value = input.readInt32();
            switch (value) {
              case NativeRequest.CONTENT_WALL:
              case NativeRequest.APP_WALL:
              case NativeRequest.NEWS_FEED:
              case NativeRequest.CHAT_LIST:
              case NativeRequest.CAROUSEL:
              case NativeRequest.CONTENT_STREAM:
              case NativeRequest.GRID:
                this.layout = value;
                break;
            }
            break;
          }
          case 24: {
            int value = input.readInt32();
            switch (value) {
              case NativeRequest.PAID_SEARCH_UNIT:
              case NativeRequest.RECOMMENDATION_WIDGET:
              case NativeRequest.PROMOTED_LISTING:
              case NativeRequest.IAB_IN_AD_NATIVE:
              case NativeRequest.CUSTOM:
                this.adunit = value;
                break;
            }
            break;
          }
          case 32: {
            this.plcmtcnt = input.readInt32();
            break;
          }
          case 40: {
            this.seq = input.readInt32();
            break;
          }
          case 50: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 50);
            int i = this.assets == null ? 0 : this.assets.length;
            Asset[] newArray =
                new Asset[i + arrayLength];
            if (i != 0) {
              System.arraycopy(this.assets, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new Asset();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new Asset();
            input.readMessage(newArray[i]);
            this.assets = newArray;
            break;
          }
        }
      }
    }

    public static NativeRequest parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new NativeRequest(), data);
    }

    public static NativeRequest parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new NativeRequest().mergeFrom(input);
    }
  }

  public static final class NativeResponse extends
      com.google.protobuf.nano.ExtendableMessageNano<NativeResponse> {

    public static final class Link extends
        com.google.protobuf.nano.ExtendableMessageNano<Link> {

      private static volatile Link[] _emptyArray;
      public static Link[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new Link[0];
            }
          }
        }
        return _emptyArray;
      }

      // optional string url = 1;
      public String url;

      // repeated string clicktrackers = 2;
      public String[] clicktrackers;

      // optional string fallback = 3;
      public String fallback;

      public Link() {
        clear();
      }

      public Link clear() {
        url = "";
        clicktrackers = com.google.protobuf.nano.WireFormatNano.EMPTY_STRING_ARRAY;
        fallback = "";
        unknownFieldData = null;
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        if (!this.url.equals("")) {
          output.writeString(1, this.url);
        }
        if (this.clicktrackers != null && this.clicktrackers.length > 0) {
          for (int i = 0; i < this.clicktrackers.length; i++) {
            String element = this.clicktrackers[i];
            if (element != null) {
              output.writeString(2, element);
            }
          }
        }
        if (!this.fallback.equals("")) {
          output.writeString(3, this.fallback);
        }
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        if (!this.url.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(1, this.url);
        }
        if (this.clicktrackers != null && this.clicktrackers.length > 0) {
          int dataCount = 0;
          int dataSize = 0;
          for (int i = 0; i < this.clicktrackers.length; i++) {
            String element = this.clicktrackers[i];
            if (element != null) {
              dataCount++;
              dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                  .computeStringSizeNoTag(element);
            }
          }
          size += dataSize;
          size += 1 * dataCount;
        }
        if (!this.fallback.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(3, this.fallback);
        }
        return size;
      }

      @Override
      public Link mergeFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!storeUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              this.url = input.readString();
              break;
            }
            case 18: {
              int arrayLength = com.google.protobuf.nano.WireFormatNano
                  .getRepeatedFieldArrayLength(input, 18);
              int i = this.clicktrackers == null ? 0 : this.clicktrackers.length;
              String[] newArray = new String[i + arrayLength];
              if (i != 0) {
                System.arraycopy(this.clicktrackers, 0, newArray, 0, i);
              }
              for (; i < newArray.length - 1; i++) {
                newArray[i] = input.readString();
                input.readTag();
              }
              // Last one without readTag.
              newArray[i] = input.readString();
              this.clicktrackers = newArray;
              break;
            }
            case 26: {
              this.fallback = input.readString();
              break;
            }
          }
        }
      }

      public static Link parseFrom(byte[] data)
          throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
        return com.google.protobuf.nano.MessageNano.mergeFrom(new Link(), data);
      }

      public static Link parseFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new Link().mergeFrom(input);
      }
    }

    public static final class Asset extends
        com.google.protobuf.nano.ExtendableMessageNano<Asset> {

      public static final class Title extends
          com.google.protobuf.nano.ExtendableMessageNano<Title> {

        private static volatile Title[] _emptyArray;
        public static Title[] emptyArray() {
          // Lazily initializes the empty array
          if (_emptyArray == null) {
            synchronized (
                com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
              if (_emptyArray == null) {
                _emptyArray = new Title[0];
              }
            }
          }
          return _emptyArray;
        }

        // required string text = 1;
        public String text;

        public Title() {
          clear();
        }

        public Title clear() {
          text = "";
          unknownFieldData = null;
          cachedSize = -1;
          return this;
        }

        @Override
        public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
            throws java.io.IOException {
          output.writeString(1, this.text);
          super.writeTo(output);
        }

        @Override
        protected int computeSerializedSize() {
          int size = super.computeSerializedSize();
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(1, this.text);
          return size;
        }

        @Override
        public Title mergeFrom(
                com.google.protobuf.nano.CodedInputByteBufferNano input)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                return this;
              default: {
                if (!storeUnknownField(input, tag)) {
                  return this;
                }
                break;
              }
              case 10: {
                this.text = input.readString();
                break;
              }
            }
          }
        }

        public static Title parseFrom(byte[] data)
            throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
          return com.google.protobuf.nano.MessageNano.mergeFrom(new Title(), data);
        }

        public static Title parseFrom(
                com.google.protobuf.nano.CodedInputByteBufferNano input)
            throws java.io.IOException {
          return new Title().mergeFrom(input);
        }
      }

      public static final class Image extends
          com.google.protobuf.nano.ExtendableMessageNano<Image> {

        private static volatile Image[] _emptyArray;
        public static Image[] emptyArray() {
          // Lazily initializes the empty array
          if (_emptyArray == null) {
            synchronized (
                com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
              if (_emptyArray == null) {
                _emptyArray = new Image[0];
              }
            }
          }
          return _emptyArray;
        }

        // optional string url = 1;
        public String url;

        // optional int32 w = 2;
        public int w;

        // optional int32 h = 3;
        public int h;

        public Image() {
          clear();
        }

        public Image clear() {
          url = "";
          w = 0;
          h = 0;
          unknownFieldData = null;
          cachedSize = -1;
          return this;
        }

        @Override
        public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
            throws java.io.IOException {
          if (!this.url.equals("")) {
            output.writeString(1, this.url);
          }
          if (this.w != 0) {
            output.writeInt32(2, this.w);
          }
          if (this.h != 0) {
            output.writeInt32(3, this.h);
          }
          super.writeTo(output);
        }

        @Override
        protected int computeSerializedSize() {
          int size = super.computeSerializedSize();
          if (!this.url.equals("")) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeStringSize(1, this.url);
          }
          if (this.w != 0) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeInt32Size(2, this.w);
          }
          if (this.h != 0) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeInt32Size(3, this.h);
          }
          return size;
        }

        @Override
        public Image mergeFrom(
                com.google.protobuf.nano.CodedInputByteBufferNano input)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                return this;
              default: {
                if (!storeUnknownField(input, tag)) {
                  return this;
                }
                break;
              }
              case 10: {
                this.url = input.readString();
                break;
              }
              case 16: {
                this.w = input.readInt32();
                break;
              }
              case 24: {
                this.h = input.readInt32();
                break;
              }
            }
          }
        }

        public static Image parseFrom(byte[] data)
            throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
          return com.google.protobuf.nano.MessageNano.mergeFrom(new Image(), data);
        }

        public static Image parseFrom(
                com.google.protobuf.nano.CodedInputByteBufferNano input)
            throws java.io.IOException {
          return new Image().mergeFrom(input);
        }
      }

      public static final class Data extends
          com.google.protobuf.nano.ExtendableMessageNano<Data> {

        private static volatile Data[] _emptyArray;
        public static Data[] emptyArray() {
          // Lazily initializes the empty array
          if (_emptyArray == null) {
            synchronized (
                com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
              if (_emptyArray == null) {
                _emptyArray = new Data[0];
              }
            }
          }
          return _emptyArray;
        }

        // optional string label = 1;
        public String label;

        // required string value = 2;
        public String value;

        public Data() {
          clear();
        }

        public Data clear() {
          label = "";
          value = "";
          unknownFieldData = null;
          cachedSize = -1;
          return this;
        }

        @Override
        public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
            throws java.io.IOException {
          if (!this.label.equals("")) {
            output.writeString(1, this.label);
          }
          output.writeString(2, this.value);
          super.writeTo(output);
        }

        @Override
        protected int computeSerializedSize() {
          int size = super.computeSerializedSize();
          if (!this.label.equals("")) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeStringSize(1, this.label);
          }
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(2, this.value);
          return size;
        }

        @Override
        public Data mergeFrom(
                com.google.protobuf.nano.CodedInputByteBufferNano input)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                return this;
              default: {
                if (!storeUnknownField(input, tag)) {
                  return this;
                }
                break;
              }
              case 10: {
                this.label = input.readString();
                break;
              }
              case 18: {
                this.value = input.readString();
                break;
              }
            }
          }
        }

        public static Data parseFrom(byte[] data)
            throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
          return com.google.protobuf.nano.MessageNano.mergeFrom(new Data(), data);
        }

        public static Data parseFrom(
                com.google.protobuf.nano.CodedInputByteBufferNano input)
            throws java.io.IOException {
          return new Data().mergeFrom(input);
        }
      }

      public static final class Video extends
          com.google.protobuf.nano.ExtendableMessageNano<Video> {

        private static volatile Video[] _emptyArray;
        public static Video[] emptyArray() {
          // Lazily initializes the empty array
          if (_emptyArray == null) {
            synchronized (
                com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
              if (_emptyArray == null) {
                _emptyArray = new Video[0];
              }
            }
          }
          return _emptyArray;
        }

        // repeated string vasttag = 1;
        public String[] vasttag;

        public Video() {
          clear();
        }

        public Video clear() {
          vasttag = com.google.protobuf.nano.WireFormatNano.EMPTY_STRING_ARRAY;
          unknownFieldData = null;
          cachedSize = -1;
          return this;
        }

        @Override
        public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
            throws java.io.IOException {
          if (this.vasttag != null && this.vasttag.length > 0) {
            for (int i = 0; i < this.vasttag.length; i++) {
              String element = this.vasttag[i];
              if (element != null) {
                output.writeString(1, element);
              }
            }
          }
          super.writeTo(output);
        }

        @Override
        protected int computeSerializedSize() {
          int size = super.computeSerializedSize();
          if (this.vasttag != null && this.vasttag.length > 0) {
            int dataCount = 0;
            int dataSize = 0;
            for (int i = 0; i < this.vasttag.length; i++) {
              String element = this.vasttag[i];
              if (element != null) {
                dataCount++;
                dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                    .computeStringSizeNoTag(element);
              }
            }
            size += dataSize;
            size += 1 * dataCount;
          }
          return size;
        }

        @Override
        public Video mergeFrom(
                com.google.protobuf.nano.CodedInputByteBufferNano input)
            throws java.io.IOException {
          while (true) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                return this;
              default: {
                if (!storeUnknownField(input, tag)) {
                  return this;
                }
                break;
              }
              case 10: {
                int arrayLength = com.google.protobuf.nano.WireFormatNano
                    .getRepeatedFieldArrayLength(input, 10);
                int i = this.vasttag == null ? 0 : this.vasttag.length;
                String[] newArray = new String[i + arrayLength];
                if (i != 0) {
                  System.arraycopy(this.vasttag, 0, newArray, 0, i);
                }
                for (; i < newArray.length - 1; i++) {
                  newArray[i] = input.readString();
                  input.readTag();
                }
                // Last one without readTag.
                newArray[i] = input.readString();
                this.vasttag = newArray;
                break;
              }
            }
          }
        }

        public static Video parseFrom(byte[] data)
            throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
          return com.google.protobuf.nano.MessageNano.mergeFrom(new Video(), data);
        }

        public static Video parseFrom(
                com.google.protobuf.nano.CodedInputByteBufferNano input)
            throws java.io.IOException {
          return new Video().mergeFrom(input);
        }
      }

      private static volatile Asset[] _emptyArray;
      public static Asset[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new Asset[0];
            }
          }
        }
        return _emptyArray;
      }

      // required int32 id = 1;
      public int id;

      // optional bool required = 2 [default = false];
      public boolean required;

      // optional .com.hykj.gamecenter.protocol.NativeResponse.Asset.Title title = 3;
      public Title title;

      // optional .com.hykj.gamecenter.protocol.NativeResponse.Asset.Image img = 4;
      public Image img;

      // optional .com.hykj.gamecenter.protocol.NativeResponse.Asset.Video video = 5;
      public Video video;

      // optional .com.hykj.gamecenter.protocol.NativeResponse.Asset.Data data = 6;
      public Data data;

      // optional .com.hykj.gamecenter.protocol.NativeResponse.Link link = 7;
      public Link link;

      public Asset() {
        clear();
      }

      public Asset clear() {
        id = 0;
        required = false;
        title = null;
        img = null;
        video = null;
        data = null;
        link = null;
        unknownFieldData = null;
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        output.writeInt32(1, this.id);
        if (this.required != false) {
          output.writeBool(2, this.required);
        }
        if (this.title != null) {
          output.writeMessage(3, this.title);
        }
        if (this.img != null) {
          output.writeMessage(4, this.img);
        }
        if (this.video != null) {
          output.writeMessage(5, this.video);
        }
        if (this.data != null) {
          output.writeMessage(6, this.data);
        }
        if (this.link != null) {
          output.writeMessage(7, this.link);
        }
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeInt32Size(1, this.id);
        if (this.required != false) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeBoolSize(2, this.required);
        }
        if (this.title != null) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeMessageSize(3, this.title);
        }
        if (this.img != null) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeMessageSize(4, this.img);
        }
        if (this.video != null) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeMessageSize(5, this.video);
        }
        if (this.data != null) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeMessageSize(6, this.data);
        }
        if (this.link != null) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeMessageSize(7, this.link);
        }
        return size;
      }

      @Override
      public Asset mergeFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!storeUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 8: {
              this.id = input.readInt32();
              break;
            }
            case 16: {
              this.required = input.readBool();
              break;
            }
            case 26: {
              if (this.title == null) {
                this.title = new Title();
              }
              input.readMessage(this.title);
              break;
            }
            case 34: {
              if (this.img == null) {
                this.img = new Image();
              }
              input.readMessage(this.img);
              break;
            }
            case 42: {
              if (this.video == null) {
                this.video = new Video();
              }
              input.readMessage(this.video);
              break;
            }
            case 50: {
              if (this.data == null) {
                this.data = new Data();
              }
              input.readMessage(this.data);
              break;
            }
            case 58: {
              if (this.link == null) {
                this.link = new Link();
              }
              input.readMessage(this.link);
              break;
            }
          }
        }
      }

      public static Asset parseFrom(byte[] data)
          throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
        return com.google.protobuf.nano.MessageNano.mergeFrom(new Asset(), data);
      }

      public static Asset parseFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new Asset().mergeFrom(input);
      }
    }

    private static volatile NativeResponse[] _emptyArray;
    public static NativeResponse[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new NativeResponse[0];
          }
        }
      }
      return _emptyArray;
    }

    // optional string ver = 1;
    public String ver;

    // repeated .com.hykj.gamecenter.protocol.NativeResponse.Asset assets = 2;
    public Asset[] assets;

    // required .com.hykj.gamecenter.protocol.NativeResponse.Link link = 3;
    public Link link;

    // repeated string imptrackers = 4;
    public String[] imptrackers;

    // optional string jstracker = 5;
    public String jstracker;

    public NativeResponse() {
      clear();
    }

    public NativeResponse clear() {
      ver = "";
      assets = Asset.emptyArray();
      link = null;
      imptrackers = com.google.protobuf.nano.WireFormatNano.EMPTY_STRING_ARRAY;
      jstracker = "";
      unknownFieldData = null;
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (!this.ver.equals("")) {
        output.writeString(1, this.ver);
      }
      if (this.assets != null && this.assets.length > 0) {
        for (int i = 0; i < this.assets.length; i++) {
          Asset element = this.assets[i];
          if (element != null) {
            output.writeMessage(2, element);
          }
        }
      }
      if (this.link != null) {
        output.writeMessage(3, this.link);
      }
      if (this.imptrackers != null && this.imptrackers.length > 0) {
        for (int i = 0; i < this.imptrackers.length; i++) {
          String element = this.imptrackers[i];
          if (element != null) {
            output.writeString(4, element);
          }
        }
      }
      if (!this.jstracker.equals("")) {
        output.writeString(5, this.jstracker);
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (!this.ver.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(1, this.ver);
      }
      if (this.assets != null && this.assets.length > 0) {
        for (int i = 0; i < this.assets.length; i++) {
          Asset element = this.assets[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(2, element);
          }
        }
      }
      if (this.link != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(3, this.link);
      }
      if (this.imptrackers != null && this.imptrackers.length > 0) {
        int dataCount = 0;
        int dataSize = 0;
        for (int i = 0; i < this.imptrackers.length; i++) {
          String element = this.imptrackers[i];
          if (element != null) {
            dataCount++;
            dataSize += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeStringSizeNoTag(element);
          }
        }
        size += dataSize;
        size += 1 * dataCount;
      }
      if (!this.jstracker.equals("")) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeStringSize(5, this.jstracker);
      }
      return size;
    }

    @Override
    public NativeResponse mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!storeUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            this.ver = input.readString();
            break;
          }
          case 18: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 18);
            int i = this.assets == null ? 0 : this.assets.length;
            Asset[] newArray =
                new Asset[i + arrayLength];
            if (i != 0) {
              System.arraycopy(this.assets, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new Asset();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new Asset();
            input.readMessage(newArray[i]);
            this.assets = newArray;
            break;
          }
          case 26: {
            if (this.link == null) {
              this.link = new Link();
            }
            input.readMessage(this.link);
            break;
          }
          case 34: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 34);
            int i = this.imptrackers == null ? 0 : this.imptrackers.length;
            String[] newArray = new String[i + arrayLength];
            if (i != 0) {
              System.arraycopy(this.imptrackers, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = input.readString();
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = input.readString();
            this.imptrackers = newArray;
            break;
          }
          case 42: {
            this.jstracker = input.readString();
            break;
          }
        }
      }
    }

    public static NativeResponse parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new NativeResponse(), data);
    }

    public static NativeResponse parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new NativeResponse().mergeFrom(input);
    }
  }
}
